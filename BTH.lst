Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2024.04.28 - 17:36:37]

.\BTH.asm
Errors: 0

       1   00:0000                      	output "BTH.rom" 
       2   00:6220                      
       3   00:6220                      ;ROM ASCII16
       4   00:6220                      		defpage	0,0x4000, 0x4000
       5   00:6220                      		defpage	1,0x8000, 0x4000        
       6   00:6220                      		defpage	2..14 ;Here it is determined rom size        
       7   00:6220                              defpage	15,0xC000, 0x4000
       8   00:6220                      
       9   00:6220  (00:4000)           PageSize:	    equ	0x4000	        ; 16kB
      10   00:6220  (00:6000)           _bank1	equ	6000h
      11   00:6220  (00:7000)           _bank2	equ	7000h
      12   00:6220  32 00 70 32 FF 77   		DB 32h,0,70h,32h,0FFh,77h		; Para evitar seleccionar el tipo de ROM ASCII16 en OpenMSX
      13   00:6226  (00)                		page 0			
      14   00:4000                              org 4000h		
      15   00:4000                              dw  4241h,START,0,0,0,0,0,0
      15   00:4000  41 42 82 4B 00 00 00 00 00 00 00 00 00 00 00 00 
      16   00:4010                      
      17   00:4010                      ;Llamadas a rutinas bios
      18   00:4010                          include "include\System_BIOSCalls.asm"
       1.  00:4010  (00:009F)           CHGET                   equ #009F    ; Se queda esperando que se pulse una tecla
       2.  00:4010  (00:00A2)           CHPUT                   equ #00A2    ; escribe el caracter ascii almacenado en a                         
       3.  00:4010  (00:005F)           CHGMOD                  equ #005F   ; Cambia el modo de screen pero previamente necesita que se le asigne el modo en el registro a
       4.  00:4010  (00:005C)           LDIRVM                  equ #005C   ;Tansfiere bloques de la RAM a la VRAM, es la más importante, necesita previamente asignar valor al registro bc con la longitud, dc con la dirección de inicio de la VRAM y hl con la dirección de inicio de la RAM:
       5.  00:4010  (00:013E)           RDVDP                   equ #013E    ; Lee el registro de estado del VDP
       6.  00:4010  (00:0047)           WRTVDP                  equ #0047   ; Escribe en los registros del VDP 
       7.  00:4010  (00:F3DB)           CLIKSW                  equ $F3DB ; Keyboard click sound
       8.  00:4010  (00:0141)           SNSMAT					equ #0141
       9.  00:4010  (00:FC9E)           JIFFY 					equ #FC9E
      10.  00:4010  (00:0041)           DISSCR                  equ #0041   ; Disable screen
      11.  00:4010  (00:0044)           ENASCR                  equ #0044   ; Enable screen
      12.  00:4010  (00:0072)           INIGRP                  equ #0072   ; Enable Screen 2
      13.  00:4010  (00:0138)           RSLREG                  equ #0138   ; Leemos el contenido del registro de seleccion de slots
      14.  00:4010  (00:0024)           ENASLT                  equ #0024   ; Switches indicated slot at indicated page on perpetually Input    : A - Slot ID, see RDSLT            H - Bit 6 and 7 must contain the page number (00-11)
      19   00:4010                      
      20   00:4010                      ;Constantes
      21   00:4010                          include "include\BTH_const.asm"
       1.  00:4010                      ; VDP Const
       2.  00:4010  (00:5C28)           FIRST_LINE_DLG_BOX   equ 5C28H
       3.  00:4010  (00:6028)           SEC_LINE_DLG_BOX   equ 6028H
       4.  00:4010  (00:6428)           THIRD_LINE_DLG_BOX   equ 6428H
       5.  00:4010                      
       6.  00:4010  (00:0001)           ROMMODE                 equ 1 ; 0 Dos Mode 1 Rom Mode
       7.  00:4010  (00:0007)           KB_RIGHT 				equ 7
       8.  00:4010  (00:0006)           KB_DOWN 				equ 6
       9.  00:4010  (00:0005)           KB_UP 					equ	5        
      10.  00:4010  (00:0004)           KB_LEFT 				equ	4
      11.  00:4010  (00:0003)           KB_DEL 					equ	3
      12.  00:4010  (00:0000)           KB_SPACE				equ	0
      13.  00:4010                      
      14.  00:4010  (00:0001)           MOV_SPEED				equ 1
      15.  00:4010  (00:0001)           MOV_SPEED_GHOST			equ 1
      16.  00:4010  (00:0003)           MOV_SPEED_SHOOT         equ 3
      17.  00:4010  (00:0030)           MAX_DISTANCE_SHOOT      equ 48
      18.  00:4010  (00:0005)           MAX_CHAR_STEPS          equ 5       ; #steps pattern change MAIN CHAR
      19.  00:4010  (00:0006)           MAX_CHAR_STEPS_STG2          equ 6
      20.  00:4010  (00:FFE8)           REG9SAV                 equ #FFE8
      21.  00:4010  (00:0098)           PORT_0                  equ 0x98
      22.  00:4010  (00:0099)           PORT_1                  equ 0x99
      23.  00:4010  (00:009A)           PORT_2                  equ 0x9a
      24.  00:4010  (00:009B)           PORT_3                  equ 0x9b
      25.  00:4010                      
      26.  00:4010  (00:F3E0)           RG15AV equ #F3E0 ; alamcena el valor del registro 1 de escritura del VDP, hay unas rutinas de la bios que guardan estas direcciones valores globals del sistema
      27.  00:4010  (00:F3E9)           FORCLR equ $F3E9 ; Foreground colour
      28.  00:4010                      
      29.  00:4010  (00:00C8)           MIKE_TOMB_STG1_X            equ 200
      30.  00:4010  (00:0029)           JOHN_TOMB_STG1_X            equ 41
      31.  00:4010  (00:0049)           GUS_TOMB_STG1_X             equ 73
      32.  00:4010  (00:0078)           GUS_TOMB_STG1_Y             equ 120
      33.  00:4010                      
      34.  00:4010  (00:000C)           SPR_SHOOT_P1                equ 12  ; Offset de IX (SPRATT)
      35.  00:4010  (00:0018)           SPR_SHOOT_P1_PTRN           equ 18h
      36.  00:4010  (00:0010)           SPR_GHOST_STG1              equ 16  ; Offset de IX (SPRATT)
      37.  00:4010  (00:001C)           SPR_GHOST_STG1_PTRN_L1      equ 1Ch  ; Offset del Sprite Pattern Table
      38.  00:4010  (00:0024)           SPR_GHOST_STG1_PTRN_L2      equ 24h  ; Offset del Sprite Pattern Table
      39.  00:4010  (00:002C)           SPR_GHOST_STG1_PTRN_R1      equ 2Ch  ; Offset del Sprite Pattern Table
      40.  00:4010  (00:0034)           SPR_GHOST_STG1_PTRN_R2      equ 34h  ; Offset del Sprite Pattern Table
      41.  00:4010                      
      42.  00:4010  (00:0018)           SPR_GHOST_STG2              equ 24  ; Offset de IX (SPRATT)
      43.  00:4010  (00:003C)           SPR_GHOST_STG2_PTRN_L1      equ 3Ch  ; Offset del Sprite Pattern Table
      44.  00:4010  (00:0044)           SPR_GHOST_STG2_PTRN_L2      equ 44h  ; Offset del Sprite Pattern Table
      45.  00:4010  (00:004C)           SPR_GHOST_STG2_PTRN_R1      equ 4Ch  ; Offset del Sprite Pattern Table
      46.  00:4010  (00:0054)           SPR_GHOST_STG2_PTRN_R2      equ 54h  ; Offset del Sprite Pattern Table
      47.  00:4010                      
      22   00:4010                          include "include\BTH_strings.asm"
       1.  00:4010  16 40 1C 40 2F 40   mike_tomb_strings: dw string01M, string02M, string03M
       2.  00:4016                      ; Caben 23 caracteres en cada línea
       3.  00:4016  4D 49 4B 45 3A 00   string01M: db 'MIKE:',0
       4.  00:401C                      string02M: db 'GUS FUE EL PRIMERO',0
       4.  00:401C  47 55 53 20 46 55 45 20 45 4C 20 50 52 49 4D 45 
       4.  00:402C  52 4F 00 
       5.  00:402F                      string03M: db 'EN MORIR',0
       5.  00:402F  45 4E 20 4D 4F 52 49 52 00 
       6.  00:4038                      
       7.  00:4038  3E 40 44 40 56 40   john_tomb_strings: dw string01J, string02J, string03J
       8.  00:403E                      ; Caben 23 caracteres en cada línea
       9.  00:403E  4A 4F 48 4E 3A 00   string01J: db 'JOHN:',0
      10.  00:4044                      string02J: db 'YO FUI EL SEGUNDO',0
      10.  00:4044  59 4F 20 46 55 49 20 45 4C 20 53 45 47 55 4E 44 
      10.  00:4054  4F 00 
      11.  00:4056                      string03J: db 'EN MORIR',0
      11.  00:4056  45 4E 20 4D 4F 52 49 52 00 
      12.  00:405F                      
      13.  00:405F  65 40 6A 40 7E 40   gus_tomb_strings: dw string01G, string02G, string03G
      14.  00:4065                      ; Caben 23 caracteres en cada línea
      15.  00:4065  47 55 53 3A 00      string01G: db 'GUS:',0
      16.  00:406A                      string02G: db 'MIKE FUE EL TERCERO',0
      16.  00:406A  4D 49 4B 45 20 46 55 45 20 45 4C 20 54 45 52 43 
      16.  00:407A  45 52 4F 00 
      17.  00:407E                      string03G: db 'EN MORIR',0
      17.  00:407E  45 4E 20 4D 4F 52 49 52 00 
      18.  00:4087                      
      23   00:4087                      
      24   00:4087                      ; Funciones auxiliares
      25   00:4087                      	include "include\BTH_func.asm"
       1.  00:4087                      ; Dadas las coordenadas X,Y en pixels de dos sprites, devuelve 1 si hay colision
       2.  00:4087                      ;Entrada:
       3.  00:4087                      ;   b - Y SPR1
       4.  00:4087                      ;   C - X SPR1
       5.  00:4087                      
       6.  00:4087                      ;   d - Y SPR2
       7.  00:4087                      ;   e - X SPR2
       8.  00:4087                      ;Salida:
       9.  00:4087                      ;   a - bloque
      10.  00:4087                      ;Modifica:
      11.  00:4087                      ;   a, hl, de
      12.  00:4087                      check_spr_collision:        
      13.  00:4087  78                          LD A,B          ; a = Y SPR1
      14.  00:4088  BA                          CP D
      15.  00:4089  C2 94 40                    JP NZ,.no_collision
      16.  00:408C                      
      17.  00:408C  79                          LD A,C          ; a = X SPR1
      18.  00:408D  BB                          CP E
      19.  00:408E  C2 94 40                    JP NZ,.no_collision
      20.  00:4091                      
      21.  00:4091  3E 01                       LD A,1
      22.  00:4093  C9                          RET
      23.  00:4094                      .no_collision
      24.  00:4094  3E 00                   LD A,0
      25.  00:4096  C9                      RET
      26.  00:4097                      
      27.  00:4097                      ; Dadas las coordenadas X,Y en pixels, devuelve el bloque de 8x8 al que corresponde esas coordenadas
      28.  00:4097                      ; La tabla de colisiones es la tabla de nombres con 32x24 = 756 bytes
      29.  00:4097                      ;Entrada:
      30.  00:4097                      ;   d - X
      31.  00:4097                      ;   e - y
      32.  00:4097                      ;Salida:
      33.  00:4097                      ;   a - bloque
      34.  00:4097                      ;Modifica:
      35.  00:4097                      ;   a, hl, de
      36.  00:4097                      get_bloque_en_X_Y:
      37.  00:4097                              ;(y/8)*32+(x/8)
      38.  00:4097  7B                          ld a,e      ;a=y
      39.  00:4098  CB 3F CB 3F CB 3F   [3]     srl a       ;a=y/8
      40.  00:409E  26 00                       ld h,0
      41.  00:40A0  6F                          ld l,a      ;hl=y/8
      42.  00:40A1  29 29 29 29 29      [5]     add hl,hl   ;x32    ;a=(y/8)*32
      43.  00:40A6                      
      44.  00:40A6  7A                          ld a,d      ;a=x
      45.  00:40A7  CB 3F CB 3F CB 3F   [3]     srl a       ;a=x/8
      46.  00:40AD  16 00                       ld d,0
      47.  00:40AF  5F                          ld e,a      ;de=x/8
      48.  00:40B0  19                          add hl,de   ;hl=(y/8)*32+(x/8)
      49.  00:40B1                      
      50.  00:40B1  ED 5B A2 C0                 ld de,(MAPA)
      51.  00:40B5  19                          add hl,de   ;hl=mapa + hl=(y/8)*32+(x/8)
      52.  00:40B6                      
      53.  00:40B6  7E                          ld a,[hl]
      54.  00:40B7  C9                          ret
      55.  00:40B8                      
      56.  00:40B8                      ; SCREEN 8
      57.  00:40B8                      SetVdp_Write:
      58.  00:40B8                      
      59.  00:40B8                      	; transform address from 
      60.  00:40B8                      	;
      61.  00:40B8                      	; |           Register A            |           Register H            |           Register L            |
      62.  00:40B8                      	; | --- --- --- --- --- --- --- A16 | A15 A14 A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      63.  00:40B8                      	;
      64.  00:40B8                      	; to
      65.  00:40B8                      	;
      66.  00:40B8                      	; |           Register A            |           Register H            |           Register L            |
      67.  00:40B8                      	; | --- --- --- --- --- A16 A15 A14 | --- --- A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      68.  00:40B8  CB 04                   rlc     h
      69.  00:40BA  17                      rla
      70.  00:40BB  CB 04                   rlc     h
      71.  00:40BD  17                      rla
      72.  00:40BE  CB 3C                   srl     h
      73.  00:40C0  CB 3C                   srl     h
      74.  00:40C2                      
      75.  00:40C2  F3                      di
      76.  00:40C3                      	    ; write bits a14-16 of address to R#14
      77.  00:40C3  D3 99               	    out     (PORT_1), a
      78.  00:40C5  3E 8E               	    ld      a, 14 + 128
      79.  00:40C7  D3 99               	    out     (PORT_1), a
      80.  00:40C9                      
      81.  00:40C9                      	    ; write the other address bits to VDP PORT_1
      82.  00:40C9  7D                  	    ld      a, l
      83.  00:40CA  00                  	    nop
      84.  00:40CB  D3 99               	    out     (PORT_1), a
      85.  00:40CD  7C                  	    ld      a, h
      86.  00:40CE  F6 40               	    or      64
      87.  00:40D0  FB                      ei
      88.  00:40D1  D3 99                   out     (PORT_1),a
      89.  00:40D3  C9                      ret
      90.  00:40D4                      
      91.  00:40D4                      Set212Lines:
      92.  00:40D4                              ; set LN (bit 7) of R#9 to 1
      93.  00:40D4  3A E8 FF                    ld      a, (REG9SAV)
      94.  00:40D7  F6 80                       or      10000000b
      95.  00:40D9  47                          ld      b, a
      96.  00:40DA  0E 09                       ld      c, 9            ; register #
      97.  00:40DC  CD 47 00                    call    WRTVDP
      98.  00:40DF  C9                          ret
      99.  00:40E0                      
     100.  00:40E0                      ClearVram_MSX2:
     101.  00:40E0  AF                          xor     a           ; set vram write base address
     102.  00:40E1  21 00 00                    ld      hl, 0     	; to 1st byte of page 0
     103.  00:40E4  CD B8 40                    call    SetVdp_Write
     104.  00:40E7  AF                          xor		a
     105.  00:40E8                      
     106.  00:40E8                          ; TODO: 
     107.  00:40E8                          ;   use VDP command (currently is taking almost 1 second)
     108.  00:40E8                          ;   disable screen/sprites (should I ??)
     109.  00:40E8                      
     110.  00:40E8                          ; clear all 128kb of VRAM
     111.  00:40E8  16 02               	ld		d, 2		; 2 repetitions
     112.  00:40EA                      .loop_2:
     113.  00:40EA  0E 00               	ld		c, 0		; 256 repetitions
     114.  00:40EC                      .loop_1:
     115.  00:40EC  06 00               	ld		b, 0		; 256 repetitions
     116.  00:40EE                      .loop:
     117.  00:40EE  D3 98               	out		(PORT_0), a
     118.  00:40F0  10 FC               	djnz	.loop
     119.  00:40F2  0D                  	dec		c
     120.  00:40F3  C2 EC 40            	jp		nz, .loop_1
     121.  00:40F6  15                  	dec		d
     122.  00:40F7  C2 EA 40            	jp		nz, .loop_2
     123.  00:40FA                      
     124.  00:40FA  C9                  	ret
     125.  00:40FB                      
     126.  00:40FB                      ; MEGAROM
     127.  00:40FB                      
     128.  00:40FB                      opening_screen		
     129.  00:40FB  0E 00               		ld		c,0
     130.  00:40FD  11 00 00            		ld		de,0
     131.  00:4100  CD 40 41            		call	_vdpsetvramwr
     132.  00:4103  1E 04               		ld	e,4
     133.  00:4105  3E 09               		ld	a, :GRAPHIC
     134.  00:4107  57                  		ld	d,a
     135.  00:4108  32 00 70            2:		ld	(_bank2),a
     136.  00:410B  21 00 80            		ld	hl,GRAPHIC
     137.  00:410E  01 98 00            		ld	bc,0x98
     138.  00:4111  3E 40               		ld	a,32*2
     139.  00:4113  ED B3               1:		otir
     140.  00:4115  3D                  		dec	a
     141.  00:4116  20 FB               		jr	nz,1b
     142.  00:4118  14                  		inc	d
     143.  00:4119  7A                  		ld	a,d
     144.  00:411A  1D                  		dec	e
     145.  00:411B  20 EB               		jr	nz,2b
     146.  00:411D  C9                  		ret 
     147.  00:411E                      
     148.  00:411E                      load_screen
     149.  00:411E  0E 00               		ld		c,0
     150.  00:4120  11 00 00            		ld		de,0
     151.  00:4123  CD 40 41            		call	_vdpsetvramwr
     152.  00:4126  1E 02               		ld	e,2					; #pages
     153.  00:4128  78                  		ld	a, b			; 1st page bitmap
     154.  00:4129  57                  		ld	d,a
     155.  00:412A  32 00 70            2:		ld	(_bank2),a
     156.  00:412D  2A A4 C0            		ld	hl,(BITMAP)		; Bitmap address
     157.  00:4130  01 98 00            		ld	bc,0x98
     158.  00:4133  3E 40               		ld	a,64
     159.  00:4135  ED B3               1:		otir
     160.  00:4137  3D                  		dec	a
     161.  00:4138  20 FB               		jr	nz,1b
     162.  00:413A  14                  		inc	d
     163.  00:413B  7A                  		ld	a,d
     164.  00:413C  1D                  		dec	e
     165.  00:413D  20 EB               		jr	nz,2b
     166.  00:413F  C9                  		ret 
     167.  00:4140                      
     168.  00:4140                      ;Set VDP for writing at address CDE (17-bit) 
     169.  00:4140                      
     170.  00:4140                      _vdpsetvramwr:
     171.  00:4140  79                  	ld a,c
     172.  00:4141  CB 02               	rlc d
     173.  00:4143  17                  	rla
     174.  00:4144  CB 02               	rlc d
     175.  00:4146  17                  	rla
     176.  00:4147  CB 3A               	srl d ; primo shift, il secondo dopo la out
     177.  00:4149                      
     178.  00:4149  D3 99               	out (0x99),a ;set bits 14-16
     179.  00:414B  3E 8E               	ld a,14+128
     180.  00:414D  D3 99               	out (0x99),a
     181.  00:414F  CB 3A               	srl d ; secondo shift.     
     182.  00:4151                      _vdpsetvramwr14
     183.  00:4151  7B                  	ld a,e ;set bits 0-7
     184.  00:4152  D3 99               	out (0x99),a
     185.  00:4154  7A                  	ld a,d ;set bits 8-13
     186.  00:4155  F6 40               	or 0x40 ; + write access
     187.  00:4157  D3 99               	out (0x99),a
     188.  00:4159  C9                  	ret
     189.  00:415A                      
     190.  00:415A                      
     191.  00:415A                      
     192.  00:415A                      		; --- RUTINAS PARA COLOCAR LAS PAGINAS DEL CARTUCHO ---
     193.  00:415A                      		; -----------------------------------------------------
     194.  00:415A                      		; --- SIEMPRE DEBEN IR EN LA PAGINA 1 DEL CARTUCHO! ---
     195.  00:415A                      		; -----------------------------------------------------
     196.  00:415A                      
     197.  00:415A                      		; --- RUTINAS PRINCIPALES DEL MODULO ---
     198.  00:415A                      		; GETSLOT:	OBTIENE EL VALOR DEL SLOT QUE LE INDIQUEMOS
     199.  00:415A                      		; SETPAGES32K:	BIOS-ROM-YY-ZZ	 -> BIOS-ROM-ROM-ZZ (SITUA PAGINA 2)
     200.  00:415A                      
     201.  00:415A                      		; --- VARIABLES EN RAM NECESARIAS ---
     202.  00:415A                      		; NINGUNA
     203.  00:415A                      
     204.  00:415A                      GETSLOT:	; --- Rutina que construye el valor del SLOT para llamar a ENASLT ---
     205.  00:415A                      		; --- Entrada: a = SLOT                                           ---
     206.  00:415A                      		; --- Salida: a = valor para ENASLT                               ---
     207.  00:415A                      		; --- AUTOR: Konamiman                                            ---
     208.  00:415A  E6 03               		and	$03				; Proteccion, nos aseguramos de que el valor esta en 0-3
     209.  00:415C  4F                  		ld	c,a				; c = slot de la pagina
     210.  00:415D  06 00               		ld	b,0				; bc = slot de la pagina
     211.  00:415F  21 C1 FC            		ld	hl,$FCC1			; Tabla de slots expandidos
     212.  00:4162  09                  		add	hl,bc				; hl -> variable que indica si este slot esta expandido
     213.  00:4163  7E                  		ld	a,(hl)				; Tomamos el valor
     214.  00:4164  E6 80               		and	$80				; Si el bit mas alto es cero...
     215.  00:4166  28 09               		jr	z,EXIT			; ...nos vamos a @@EXIT
     216.  00:4168                      		; --- El slot esta expandido ---
     217.  00:4168  B1                  		or	c				; Slot basico en el lugar adecuado
     218.  00:4169  4F                  		ld	c,a				; Guardamos el valor en c
     219.  00:416A  23                  		inc	hl				; Incrementamos hl una...
     220.  00:416B  23                  		inc	hl				; ...dos...
     221.  00:416C  23                  		inc	hl				; ...tres...
     222.  00:416D  23                  		inc	hl				; ...cuatro veces
     223.  00:416E  7E                  		ld	a,(hl)				; a = valor del registro de subslot del slot donde estamos
     224.  00:416F  E6 0C               		and	$0C				; Nos quedamos con el valor donde esta nuestro cartucho
     225.  00:4171  B1                  EXIT:		or	c				; Slot extendido/basico en su lugar
     226.  00:4172  C9                  		ret					; Volvemos
     227.  00:4173                      
     228.  00:4173                      SETPAGES32K:	; --- Posiciona las paginas de un megarom o un 32K ---
     229.  00:4173  3E C9               		ld	a,$C9				; Codigo de RET
     230.  00:4175  32 78 41            		ld	(NOPRET),a			; Modificamos la siguiente instruccion si estamos en RAM
     231.  00:4178  00                  NOPRET:	nop					; No hacemos nada si no estamos en RAM
     232.  00:4179                      		; --- Si llegamos aqui no estamos en RAM, hay que posicionar la pagina ---
     233.  00:4179  CD 38 01            		call	RSLREG  			; Leemos el contenido del registro de seleccion de slots
     234.  00:417C  0F                  		rrca					; Rotamos a la derecha...
     235.  00:417D  0F                  		rrca					; ...dos veces
     236.  00:417E  CD 5A 41            		call	GETSLOT				; Obtenemos el slot de la pagina 1 ($4000-$BFFF)
     237.  00:4181  26 80               		ld	h,$80				; Seleccionamos pagina 2 ($8000-$BFFF)
     238.  00:4183  C3 24 00            		jp	ENASLT ;ENASLT
     239.  00:4186                      
     240.  00:4186                      SET_SCREEN5_MODE:
     241.  00:4186                           ;Cambiamos el modo de pantalla
     242.  00:4186                          ; BASIC: COLOR 15,1,1
     243.  00:4186                          ; Establecer los colores
     244.  00:4186  21 E9 F3            	ld hl,FORCLR ; Variable del Sistema
     245.  00:4189  36 0F               	ld [hl],15 ; Color del primer plano 15=blanco
     246.  00:418B  23                  	inc hl ; FORCLR+1
     247.  00:418C  36 0F               	ld [hl],15 ; Color de fondo 1=negro
     248.  00:418E  23                  	inc hl ; FORCLR+2
     249.  00:418F  36 0F               	ld [hl],15 ; Color del borde 1=negro
     250.  00:4191                      
     251.  00:4191  3E 05                   ld  a,5     ; La rutina CHGMOD nos obliga a poner en el registro A el modo de pantalla que queremos
     252.  00:4193  CD 5F 00                call CHGMOD ; Mira arriba, pone la explicación
     253.  00:4196                      ;
     254.  00:4196  3A E0 F3                ld a,(RG15AV) ; esta dirección de memoria almacena el valor del registro de lectura del VDP, mira arriba
     255.  00:4199                          ;En or 0+0=0, 0+1=1, 1+1=1
     256.  00:4199                          ;En and 0+0=0, 0+1=0, 1+1=1
     257.  00:4199                          ;Con eso queremos cambiar los bits 7 y 8 del registro de escritura 1 del z80, queremos poner el 7 a 1 y también el 8 a 1
     258.  00:4199                          ;el bit 7 del registro 1 pone los sprites en modo 16x16 (los que nostros queremos dibujar)
     259.  00:4199                          ;el bit 8 queremos desactivarlo para no utilizar los sprites agrandados
     260.  00:4199  F6 02                   or 00000010b ; con or poniendo un 0 siempre respetamos los bits que hay y poniendo 1 1 obligamos a que sea 1
     261.  00:419B                          ;and 11111110b ; con and obligamos a que el ultimo bit valga 0
     262.  00:419B  E6 FE                   and 11111110b ; con and obligamos a que el ultimo bit valga 0
     263.  00:419D                      
     264.  00:419D  47                      ld b,a ;carga en b el valor de a
     265.  00:419E  0E 01                   ld c,1 ; La rutina WRTVDP necesta que le carguemos previamente el entero en C del z80 del registro que queroms modificar
     266.  00:41A0  CD 47 00                call WRTVDP ;Escribe en los registros del VDP 
     267.  00:41A3  AF                      xor a ; ld a,0
     268.  00:41A4  32 DB F3            	ld [CLIKSW],a ; Variable BIOS desactivar sonido teclas
     269.  00:41A7  C9                      ret
     270.  00:41A8                      
     271.  00:41A8                      DUMP_SPR_ALL:
     272.  00:41A8                      
     273.  00:41A8                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     274.  00:41A8                      
     275.  00:41A8  21 EC 52                ld hl, SPRITE_PATTERN ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     276.  00:41AB  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     277.  00:41AE  01 E0 02                ld bc, 8*4*23; 8 byte de cada tile * 4 que son los sprites de 16x16 y * #sprites
     278.  00:41B1  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     279.  00:41B4                      
     280.  00:41B4                      ;-----------------------------Definición de los atributos en #7600 y volcado a la VRAM------------------------------------
     281.  00:41B4                      
     282.  00:41B4  21 19 C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     283.  00:41B7  11 00 76                ld de, #7600; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     284.  00:41BA  01 80 00                ld bc,128; 4 x #Sprites
     285.  00:41BD  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     286.  00:41C0                      
     287.  00:41C0                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     288.  00:41C0                      
     289.  00:41C0  21 CC 55                ld hl, SPRITE_COLOR_TABLE ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     290.  00:41C3  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     291.  00:41C6  01 70 01                ld bc,16*23; 16 x #Sprites
     292.  00:41C9  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     293.  00:41CC  C9                      ret
     294.  00:41CD                      	
     295.  00:41CD                      DUMP_SPR_ATTS:
     296.  00:41CD                      
     297.  00:41CD                      ;-----------------------------Definición de los atributos en #1E00 y volcado a la VRAM------------------------------------
     298.  00:41CD                      
     299.  00:41CD  21 19 C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     300.  00:41D0  11 00 76                ld de, #7600	; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     301.  00:41D3  01 20 00                ld bc,32		; 4 x #Sprites mostrados
     302.  00:41D6  CD 5C 00                call  LDIRVM 	; Mira arriba, pone la explicación
     303.  00:41D9                      
     304.  00:41D9                      ;	ld a, (SPRITE_COLOR_REPLACE2)
     305.  00:41D9                      ;	JP Z,.DUMP_SPR_ATTS_END
     306.  00:41D9  2A A0 C0            	ld hl, (SPRITE_COLOR_REPLACE2) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     307.  00:41DC  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     308.  00:41DF  C5                      PUSH BC
     309.  00:41E0  01 30 00            	ld bc,16*3; 16 x #Sprites
     310.  00:41E3  CD 5C 00                call  LDIRVM 
     311.  00:41E6  C1                  	POP BC
     312.  00:41E7                      
     313.  00:41E7                      .DUMP_SPR_ATTS_END:
     314.  00:41E7  C9                      ret
     315.  00:41E8                      
     316.  00:41E8                      DUMP_SPR_P1:    
     317.  00:41E8                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     318.  00:41E8                      
     319.  00:41E8  2A 9C C0                ld hl, (SPRITE_PTR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     320.  00:41EB  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     321.  00:41EE  C5                      PUSH BC
     322.  00:41EF  01 C0 00            	ld bc, 192; 32 bytes por sprite * 3 planos * 2 frames
     323.  00:41F2  CD 5C 00                call  LDIRVM 
     324.  00:41F5  C1                  	POP BC
     325.  00:41F6                      
     326.  00:41F6                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     327.  00:41F6                      
     328.  00:41F6  2A 9E C0                ld hl, (SPRITE_COLOR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     329.  00:41F9  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     330.  00:41FC  C5                      PUSH BC
     331.  00:41FD  01 30 00            	ld bc,16*3; 16 x #Sprites
     332.  00:4200  CD 5C 00                call  LDIRVM 
     333.  00:4203  C1                  	POP BC
     334.  00:4204                      	
     335.  00:4204                      
     336.  00:4204                      ; Replace 4 sprites(P1) in Sprite Pattern Table
     337.  00:4204                      ;    xor a
     338.  00:4204                      ;	di			; set VRAM address to 1800h
     339.  00:4204                      ;	out (99h),a		; lower byte 00
     340.  00:4204                      ;	ld a,78h + 040h		; upper byte 7800h with flag to set the bus in write mode (3800 VRAM: Sprite Pattern Table)
     341.  00:4204                      ;	ei
     342.  00:4204                      ;	out (99h),a		; note that this is protected by the ei instruction
     343.  00:4204                      ;   push BC
     344.  00:4204                      ;	ld bc,8098h     ; 80h = 128 bytes y port 98h 
     345.  00:4204                      ;	ld hl,(SPRITE_PTR_REPLACE)
     346.  00:4204                      
     347.  00:4204                      ;.loop1:
     348.  00:4204                      ;	outi			; send the data (HL) to port 98h 
     349.  00:4204                      ;	jp nz,.loop1		; the inner loop is exactly 29 cycles. 
     350.  00:4204                      ;   POP BC
     351.  00:4204                      
     352.  00:4204                          ; Replace 2 entries in sprite color table
     353.  00:4204                      ;    xor a
     354.  00:4204                      ;	di			; set VRAM address to 1800h
     355.  00:4204                      ;	out (99h),a		; lower byte 00
     356.  00:4204                      ;	ld a,74h + 040h		; upper byte 7400h with flag to set the bus in write mode (1C00 VRAM: Sprite Color Table)
     357.  00:4204                      ;	ei
     358.  00:4204                      ;	out (99h),a		; note that this is protected by the ei instruction
     359.  00:4204                       ;   push BC
     360.  00:4204                      ;	ld bc,2098h     ; 20h = 32 bytes y port 98h 
     361.  00:4204                      ;	ld hl,(SPRITE_COLOR_REPLACE)
     362.  00:4204                      	
     363.  00:4204                      ;.loop2:
     364.  00:4204                      ;	outi			; send the data (HL) to port 98h 
     365.  00:4204                      ;	jp nz,.loop2		; the inner loop is exactly 29 cycles. 
     366.  00:4204                       ;   POP BC
     367.  00:4204                      
     368.  00:4204  C9                      ret
     369.  00:4205                      
     370.  00:4205                      SetPalette:
     371.  00:4205  AF                  	xor a
     372.  00:4206  F3                  	di
     373.  00:4207  D3 99               	out ($99),a
     374.  00:4209  3E 90               	ld a,16+128
     375.  00:420B  D3 99               	out ($99),a
     376.  00:420D  01 9A 20            	ld bc,$209A
     377.  00:4210  ED B3               	otir
     378.  00:4212  FB                  	ei
     379.  00:4213  C9                  	ret
      26   00:4214                          include "include\BTH_animate.asm"
       1.  00:4214                      ; Movimiento P1
       2.  00:4214                      move_up:
       3.  00:4214  A9                      XOR C               ; Reseteamos la entrada del teclado
       4.  00:4215                          ; Actualizamos la última tecla de dirección pulsada
       5.  00:4215  AF                      XOR A
       6.  00:4216  32 14 C0                LD (CHAR_NEW_DIR_MAIN),A
       7.  00:4219  CD 47 43                CALL CHECK_DIRECTION_MAIN
       8.  00:421C                      
       9.  00:421C  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      10.  00:421F  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VDP
      11.  00:4221  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      12.  00:4222  DD 7E 01                ld a,(ix+1)
      13.  00:4225  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      14.  00:4226  CD 97 40                call get_bloque_en_X_Y
      15.  00:4229  FE 01                   cp 1
      16.  00:422B  CA 40 44                jp z,NO_MOVEMENT
      17.  00:422E                      
      18.  00:422E  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      19.  00:4231  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VGP
      20.  00:4233  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      21.  00:4234  DD 7E 01                ld a,(ix+1)
      22.  00:4237  C6 0A                   add 10 ; miramos la segunda tile 8+2
      23.  00:4239  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      24.  00:423A  CD 97 40                call get_bloque_en_X_Y
      25.  00:423D  FE 01                   cp 1
      26.  00:423F  CA 40 44                jp z,NO_MOVEMENT
      27.  00:4242                            
      28.  00:4242  3E FF               	LD A, -MOV_SPEED
      29.  00:4244  32 0B C0            	LD (CHAR_SPEED_Y), A
      30.  00:4247  CD D4 43                call UPDATE_MOVEMENT   
      31.  00:424A  CD FC 43                call ANIMATE_P1
      32.  00:424D                          ;JP no_arrows
      33.  00:424D  C9                      ret
      34.  00:424E                      
      35.  00:424E                      move_down:
      36.  00:424E  A9                      XOR C               ; Reseteamos la entrada del teclado
      37.  00:424F                          ; Actualizamos la última tecla de dirección pulsada
      38.  00:424F  3E 01                   LD A,$01
      39.  00:4251  32 14 C0                LD (CHAR_NEW_DIR_MAIN),A
      40.  00:4254  CD 47 43                CALL CHECK_DIRECTION_MAIN
      41.  00:4257                      
      42.  00:4257  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      43.  00:425A  C6 11                   add 17 ; incrementamos en 15+2 el valor
      44.  00:425C  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      45.  00:425D  DD 7E 01                ld a,(ix+1)
      46.  00:4260  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      47.  00:4261  CD 97 40                call get_bloque_en_X_Y
      48.  00:4264  FE 01                   cp 1
      49.  00:4266  CA 40 44                jp z,NO_MOVEMENT
      50.  00:4269                      
      51.  00:4269  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      52.  00:426C  C6 11                   add 17 ; incrementamos en 15 el valor
      53.  00:426E  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      54.  00:426F  DD 7E 01                ld a,(ix+1)
      55.  00:4272  C6 0A                   add 10 ; miramos la segunda tile 8+2
      56.  00:4274  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision    
      57.  00:4275  CD 97 40                call get_bloque_en_X_Y
      58.  00:4278  FE 01                   cp 1
      59.  00:427A  CA 40 44                jp z,NO_MOVEMENT
      60.  00:427D                          
      61.  00:427D  3E 01                   LD A, MOV_SPEED
      62.  00:427F  32 0B C0            	LD (CHAR_SPEED_Y), A
      63.  00:4282  CD D4 43                call UPDATE_MOVEMENT    
      64.  00:4285  CD FC 43                call ANIMATE_P1
      65.  00:4288                          ;JP no_arrows
      66.  00:4288  C9                      ret
      67.  00:4289                      
      68.  00:4289                      move_right:
      69.  00:4289  A9                      XOR C               ; Reseteamos la entrada del teclado
      70.  00:428A                          ; Actualizamos la última tecla de dirección pulsada
      71.  00:428A  CB 69                   BIT KB_UP, C
      72.  00:428C  28 0C                   JR z, .KB_UPDOWN_PRESSED
      73.  00:428E  CB 71                   BIT KB_DOWN, C
      74.  00:4290  28 08                   JR z, .KB_UPDOWN_PRESSED
      75.  00:4292  3E 03                   LD A,$03
      76.  00:4294  32 14 C0                LD (CHAR_NEW_DIR_MAIN),A
      77.  00:4297  CD 47 43                CALL CHECK_DIRECTION_MAIN
      78.  00:429A                      
      79.  00:429A                      .KB_UPDOWN_PRESSED:
      80.  00:429A  DD 7E 01                ld a,(ix+1); obtenemos el valor actual de la posicion x   
      81.  00:429D  C6 10                   add 16; incrementamos en 3 el valor
      82.  00:429F  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      83.  00:42A0  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
      84.  00:42A3  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
      85.  00:42A5  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      86.  00:42A6  CD 97 40                call get_bloque_en_X_Y
      87.  00:42A9  FE 01                   cp 1
      88.  00:42AB  CA 40 44                jp z,NO_MOVEMENT
      89.  00:42AE                      
      90.  00:42AE                          ;Miramos el tile del byte inferior del sprite - centro personaje
      91.  00:42AE  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
      92.  00:42B1  C6 10                   add 16; incrementamos en 2 tiles el valor
      93.  00:42B3  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      94.  00:42B4  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
      95.  00:42B7  C6 08                   add 8 ; Añadimos 8 para mirar el tile inferior - centro
      96.  00:42B9  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      97.  00:42BA  CD 97 40                call get_bloque_en_X_Y
      98.  00:42BD  FE 01                   cp 1
      99.  00:42BF  CA 40 44                jp z,NO_MOVEMENT
     100.  00:42C2                      
     101.  00:42C2                          ;Miramos el tile del byte inferior del sprite - esquina inferior derecha
     102.  00:42C2  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
     103.  00:42C5  C6 10                   add 16; incrementamos en 2 tiles el valor
     104.  00:42C7  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     105.  00:42C8  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
     106.  00:42CB  C6 0F                   add 15 ; Añadimos 8+1 para mirar la esquina inferior derecha del tile inferior
     107.  00:42CD  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     108.  00:42CE  CD 97 40                call get_bloque_en_X_Y
     109.  00:42D1  FE 01                   cp 1
     110.  00:42D3  CA 40 44                jp z,NO_MOVEMENT    
     111.  00:42D6                          
     112.  00:42D6  3E 01                   LD A, MOV_SPEED
     113.  00:42D8  32 0A C0            	LD (CHAR_SPEED_X), A
     114.  00:42DB  CD D4 43                call UPDATE_MOVEMENT
     115.  00:42DE  CB 69                   BIT KB_UP, C
     116.  00:42E0  C8                      ret z
     117.  00:42E1  CB 71                   BIT KB_DOWN, C
     118.  00:42E3  C8                      ret z
     119.  00:42E4  CD FC 43                call ANIMATE_P1    
     120.  00:42E7  C9                      ret
     121.  00:42E8                      
     122.  00:42E8                      move_left:
     123.  00:42E8  A9                      XOR C               ; Reseteamos la entrada del teclado
     124.  00:42E9                          ; Actualizamos la última tecla de dirección pulsada
     125.  00:42E9  CB 69                   BIT KB_UP, C
     126.  00:42EB  28 0C                   JR z, .KB_UPDOWN_PRESSED
     127.  00:42ED  CB 71                   BIT KB_DOWN, C
     128.  00:42EF  28 08                   JR z, .KB_UPDOWN_PRESSED
     129.  00:42F1  3E 02                   LD A,$02
     130.  00:42F3  32 14 C0                LD (CHAR_NEW_DIR_MAIN),A
     131.  00:42F6  CD 47 43                CALL CHECK_DIRECTION_MAIN
     132.  00:42F9                      .KB_UPDOWN_PRESSED:
     133.  00:42F9  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     134.  00:42FC  D6 02                   sub 2 ; decrementamos en 2 el valor
     135.  00:42FE  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     136.  00:42FF  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     137.  00:4302  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
     138.  00:4304  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     139.  00:4305  CD 97 40                call get_bloque_en_X_Y
     140.  00:4308  FE 01                   cp 1
     141.  00:430A  CA 40 44                jp z,NO_MOVEMENT
     142.  00:430D                      
     143.  00:430D                          ;Miramos el tile inferior parte central del personaje
     144.  00:430D  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     145.  00:4310  D6 02                   sub 2 ; decrementamos en 2 el valor
     146.  00:4312  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     147.  00:4313  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     148.  00:4316  C6 08                   add 8   ; incrementamos en 8 para mirar la parte central del personaje
     149.  00:4318  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     150.  00:4319  CD 97 40                call get_bloque_en_X_Y
     151.  00:431C  FE 01                   cp 1
     152.  00:431E  CA 40 44                jp z,NO_MOVEMENT
     153.  00:4321                      
     154.  00:4321                          ;Miramos el tile inferior esquina inferior izquierda
     155.  00:4321  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     156.  00:4324  D6 02                   sub 2 ; decrementamos en 2 el valor
     157.  00:4326  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     158.  00:4327  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     159.  00:432A  C6 0F                   add 15   ; incrementamos en 8 para mirar la parte central del personaje (-1 por el offset del VGP)
     160.  00:432C  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     161.  00:432D  CD 97 40                call get_bloque_en_X_Y
     162.  00:4330  FE 01                   cp 1
     163.  00:4332  CA 40 44                jp z,NO_MOVEMENT
     164.  00:4335                      
     165.  00:4335  3E FF                   LD A, -MOV_SPEED
     166.  00:4337  32 0A C0            	LD (CHAR_SPEED_X), A
     167.  00:433A  CD D4 43                call UPDATE_MOVEMENT     
     168.  00:433D  CB 69                   BIT KB_UP, C
     169.  00:433F  C8                      ret z
     170.  00:4340  CB 71                   BIT KB_DOWN, C
     171.  00:4342  C8                      ret z
     172.  00:4343  CD FC 43                call ANIMATE_P1    
     173.  00:4346  C9                      ret
     174.  00:4347                      
     175.  00:4347                      CHECK_DIRECTION_MAIN:
     176.  00:4347  3A 13 C0                LD A, (CHAR_DIR_MAIN)		                ;Cargamos el valor anterior de direccion
     177.  00:434A  2A 14 C0            	LD HL, (CHAR_NEW_DIR_MAIN)		            ;Cargamos el valor actual de direccion
     178.  00:434D  BD                  	CP L		            	                ;Son iguales?
     179.  00:434E  C8                  	RET Z                           			;Si son iguales, vuelvo
     180.  00:434F  3A 14 C0                LD A,(CHAR_NEW_DIR_MAIN)
     181.  00:4352  FE 01                   CP $01
     182.  00:4354  CA 69 43                JP Z,.SET_DIR_DOWN
     183.  00:4357  FE 00                   CP $00
     184.  00:4359  CA 7E 43                JP Z,.SET_DIR_UP
     185.  00:435C  FE 03                   CP $03
     186.  00:435E  CA A8 43                JP Z,.SET_DIR_RIGHT
     187.  00:4361  FE 02                   CP $02
     188.  00:4363  CA 93 43                JP Z,.SET_DIR_LEFT
     189.  00:4366  C3 BD 43                JP .FINISH
     190.  00:4369                          
     191.  00:4369                      .SET_DIR_DOWN:    
     192.  00:4369  21 AC 50                ld hl, SPRITE_P1_DOWN
     193.  00:436C  22 9C C0                ld (SPRITE_PTR_REPLACE), HL
     194.  00:436F                          
     195.  00:436F  21 AC 56                ld hl, SPRITE_COLOR_P1_DOWN
     196.  00:4372  22 9E C0                ld (SPRITE_COLOR_REPLACE), HL    
     197.  00:4375  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     198.  00:4378  CD E8 41                CALL DUMP_SPR_P1    
     199.  00:437B                      
     200.  00:437B  C3 BD 43                JP .FINISH
     201.  00:437E                      
     202.  00:437E                      .SET_DIR_UP:
     203.  00:437E  21 EC 4F                ld hl, SPRITE_P1_UP
     204.  00:4381  22 9C C0                ld (SPRITE_PTR_REPLACE), HL
     205.  00:4384                          
     206.  00:4384  21 4C 56                ld hl, SPRITE_COLOR_P1_UP
     207.  00:4387  22 9E C0                ld (SPRITE_COLOR_REPLACE), HL
     208.  00:438A  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     209.  00:438D  CD E8 41                CALL DUMP_SPR_P1
     210.  00:4390  C3 BD 43                JP .FINISH
     211.  00:4393                      
     212.  00:4393                      .SET_DIR_LEFT:    
     213.  00:4393  21 6C 51                ld hl, SPRITE_P1_LEFT
     214.  00:4396  22 9C C0                ld (SPRITE_PTR_REPLACE), HL
     215.  00:4399                          
     216.  00:4399  21 4C 61                ld hl, SPRITE_COLOR_P1_LEFT
     217.  00:439C  22 9E C0                ld (SPRITE_COLOR_REPLACE), HL
     218.  00:439F  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     219.  00:43A2  CD E8 41                CALL DUMP_SPR_P1   
     220.  00:43A5  C3 BD 43                JP .FINISH
     221.  00:43A8                      
     222.  00:43A8                      .SET_DIR_RIGHT:
     223.  00:43A8  21 2C 52                ld hl, SPRITE_P1_RIGHT
     224.  00:43AB  22 9C C0                ld (SPRITE_PTR_REPLACE), HL
     225.  00:43AE                          
     226.  00:43AE  21 0C 57                ld hl, SPRITE_COLOR_P1_RIGHT
     227.  00:43B1  22 9E C0                ld (SPRITE_COLOR_REPLACE), HL
     228.  00:43B4  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     229.  00:43B7                          ;    ld (ix+13), $10      ; Sprite 1 - Ghost
     230.  00:43B7  CD E8 41                CALL DUMP_SPR_P1
     231.  00:43BA  C3 BD 43                JP .FINISH
     232.  00:43BD                      
     233.  00:43BD                      .FINISH:
     234.  00:43BD  AF                      XOR A   ; reseteamos el contador de pasos
     235.  00:43BE  32 16 C0                LD (CHAR_MIN_STEP), A   
     236.  00:43C1  3A 14 C0                LD A, (CHAR_NEW_DIR_MAIN)   ; Actualizamos la nueva dirección del personaje
     237.  00:43C4  32 13 C0                LD (CHAR_DIR_MAIN),A    
     238.  00:43C7                      
     239.  00:43C7                          ; ponemos el primer frame del sprite
     240.  00:43C7  DD 36 02 00             LD (ix+2), $00
     241.  00:43CB  DD 36 06 04             LD (ix+6), $04
     242.  00:43CF  DD 36 0A 08             LD (ix+10), $08
     243.  00:43D3                          ;CALL DUMP_SPR_ATTS
     244.  00:43D3  C9                      RET
     245.  00:43D4                      
     246.  00:43D4                      UPDATE_MOVEMENT:
     247.  00:43D4  DD 7E 00            	LD A, (ix)          ;cargamos la Y			
     248.  00:43D7  2A 0B C0            	LD HL, (CHAR_SPEED_Y)
     249.  00:43DA  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     250.  00:43DB                          
     251.  00:43DB  DD 77 00            	LD (ix), A
     252.  00:43DE  DD 77 04                LD (ix+4), A
     253.  00:43E1  DD 77 08                LD (ix+8), A
     254.  00:43E4                      	
     255.  00:43E4  DD 7E 01            	LD A, (ix+1)			;cargamos la X
     256.  00:43E7  2A 0A C0            	LD HL, (CHAR_SPEED_X)
     257.  00:43EA  85                  	ADD L   					; Actualizamos la posicion en base a la velocidad
     258.  00:43EB                          
     259.  00:43EB  DD 77 01            	LD (ix+1), A
     260.  00:43EE  DD 77 05                LD (ix+5), A
     261.  00:43F1  DD 77 09                LD (ix+9), A	
     262.  00:43F4                      
     263.  00:43F4  AF                      XOR A            ; reseteamos las variables de movimiento para el siguiente ciclo
     264.  00:43F5  32 0A C0                LD (CHAR_SPEED_X),A
     265.  00:43F8  32 0B C0                LD (CHAR_SPEED_Y),A	
     266.  00:43FB  C9                      RET
     267.  00:43FC                      
     268.  00:43FC                      ANIMATE_P1:
     269.  00:43FC                          ; Animación/pasos de personaje	
     270.  00:43FC  3A 16 C0                LD A, (CHAR_MIN_STEP)
     271.  00:43FF  FE 05                   CP MAX_CHAR_STEPS
     272.  00:4401  C2 3A 44                JP NZ,.NO_CHAR_PATTERN_CHANGE
     273.  00:4404                          
     274.  00:4404  AF                      XOR A
     275.  00:4405  32 16 C0                LD (CHAR_MIN_STEP), A   ; reseteamos el contador de pasos
     276.  00:4408  DD 7E 02                LD A, (ix+2)    ; Cargamos el patrón
     277.  00:440B  FE 00                   CP $00
     278.  00:440D  CA 23 44                JP Z,.SET_SPR_1P_2
     279.  00:4410  DD 36 02 00             LD (ix+2), $00
     280.  00:4414  DD 36 06 04             LD (ix+6), $04
     281.  00:4418  DD 36 0A 08             LD (ix+10), $08
     282.  00:441C  2A 9E C0                ld hl, (SPRITE_COLOR_REPLACE)
     283.  00:441F  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     284.  00:4422  C9                      ret
     285.  00:4423                      
     286.  00:4423                      .SET_SPR_1P_2:
     287.  00:4423  DD 36 02 0C             LD (ix+2), $0C
     288.  00:4427  DD 36 06 10             LD (ix+6), $10
     289.  00:442B  DD 36 0A 14             LD (ix+10), $14
     290.  00:442F                              
     291.  00:442F  2A 9E C0                ld HL, (SPRITE_COLOR_REPLACE)
     292.  00:4432  11 30 00                ld DE,48
     293.  00:4435  19                      ADD HL, DE
     294.  00:4436  22 A0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     295.  00:4439                          ;ld a, 0
     296.  00:4439  C9                  	ret
     297.  00:443A                      
     298.  00:443A                      .NO_CHAR_PATTERN_CHANGE    
     299.  00:443A  C6 01                   ADD 1
     300.  00:443C  32 16 C0                LD (CHAR_MIN_STEP), A    
     301.  00:443F  C9                      ret
     302.  00:4440                      
     303.  00:4440                      NO_MOVEMENT:    
     304.  00:4440  C9                      ret
     305.  00:4441                      
     306.  00:4441                      MOVE_SHOOT:
     307.  00:4441  3A 15 C0                LD A,(CHAR_MAIN_SHOOT)    
     308.  00:4444  FE 01                   CP $01
     309.  00:4446  CA 71 44                JP Z,.MOVE_SHOOT_LEFT
     310.  00:4449  FE 02                   CP $02
     311.  00:444B  CA 59 44                JP Z,.MOVE_SHOOT_RIGHT
     312.  00:444E  FE 03                   CP $03
     313.  00:4450  CA 61 44                JP Z,.MOVE_SHOOT_UP    
     314.  00:4453  FE 04                   CP $04
     315.  00:4455  CA 69 44                JP Z,.MOVE_SHOOT_DOWN
     316.  00:4458  C9                      RET
     317.  00:4459                      
     318.  00:4459                      .MOVE_SHOOT_RIGHT:        
     319.  00:4459  3E 03                   LD A, MOV_SPEED_SHOOT
     320.  00:445B  32 18 C0            	LD (CHAR_SPEED_SHOOT), A    
     321.  00:445E  C3 76 44                JP .CHECK_SHOOT_DISTANCE
     322.  00:4461                      
     323.  00:4461                      .MOVE_SHOOT_UP:        
     324.  00:4461  3E FD                   LD A, -MOV_SPEED_SHOOT
     325.  00:4463  32 18 C0            	LD (CHAR_SPEED_SHOOT), A    
     326.  00:4466  C3 76 44                JP .CHECK_SHOOT_DISTANCE
     327.  00:4469                      
     328.  00:4469                      .MOVE_SHOOT_DOWN:
     329.  00:4469  3E 03                   LD A, MOV_SPEED_SHOOT
     330.  00:446B  32 18 C0            	LD (CHAR_SPEED_SHOOT), A    
     331.  00:446E  C3 76 44                JP .CHECK_SHOOT_DISTANCE
     332.  00:4471                      
     333.  00:4471                      .MOVE_SHOOT_LEFT:    
     334.  00:4471  3E FD                   LD A, -MOV_SPEED_SHOOT
     335.  00:4473  32 18 C0            	LD (CHAR_SPEED_SHOOT), A    
     336.  00:4476                      
     337.  00:4476                      .CHECK_SHOOT_DISTANCE:
     338.  00:4476                          ; Miramos si va a izq o der
     339.  00:4476  3A 15 C0                LD A,(CHAR_MAIN_SHOOT)    
     340.  00:4479  D6 03                   SUB 3   ; Restar 3 a 1 o 2 provoca salto de carro, si es 3 o 4 no provoca el salto de carro
     341.  00:447B  D2 8B 44                JP NC,.ADD_SHOOT_Y
     342.  00:447E                          ; Movemos el disparo
     343.  00:447E  DD 7E 0D                LD A, (ix+SPR_SHOOT_P1+1)          ;cargamos la X del disparo
     344.  00:4481  2A 18 C0            	LD HL, (CHAR_SPEED_SHOOT)
     345.  00:4484  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     346.  00:4485  DD 77 0D                LD (ix+SPR_SHOOT_P1+1), A
     347.  00:4488  C3 95 44                JP .ADD_DISTANCE
     348.  00:448B                      .ADD_SHOOT_Y
     349.  00:448B                          ; Movemos el disparo
     350.  00:448B  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)          ;cargamos la X del disparo
     351.  00:448E  2A 18 C0            	LD HL, (CHAR_SPEED_SHOOT)
     352.  00:4491  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     353.  00:4492  DD 77 0C                LD (ix+SPR_SHOOT_P1), A
     354.  00:4495                      
     355.  00:4495                      .ADD_DISTANCE:
     356.  00:4495  3A 17 C0                LD A,(CHAR_DISTANCE_SHOOT)
     357.  00:4498  C6 03                   ADD MOV_SPEED_SHOOT
     358.  00:449A  32 17 C0                LD (CHAR_DISTANCE_SHOOT),A    
     359.  00:449D  FE 30                   CP MAX_DISTANCE_SHOOT
     360.  00:449F  C0                      RET NZ
     361.  00:44A0                      
     362.  00:44A0                      .HIDE_SHOOT:
     363.  00:44A0  DD 36 0C D9             LD (ix+SPR_SHOOT_P1),217          ; Y = 217 para ocultar el Sprite
     364.  00:44A4  AF                      XOR A
     365.  00:44A5  32 15 C0                LD (CHAR_MAIN_SHOOT),A   ; Desactivo el estado disparando 
     366.  00:44A8  32 17 C0                LD (CHAR_DISTANCE_SHOOT),A
     367.  00:44AB  C9                      RET
     368.  00:44AC                      
      27   00:44AC                      	include "include\VDP.asm"
       1.  00:44AC                      print_strings_dialog_box:
       2.  00:44AC                      
       3.  00:44AC  FD 66 01            	LD H, (IY+1)
       4.  00:44AF  FD 6E 00            	LD L, (IY)
       5.  00:44B2  11 28 5C            	LD DE, FIRST_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y
       6.  00:44B5  FD E5               	PUSH IY
       7.  00:44B7  CD D9 44                call print_string 
       8.  00:44BA  FD E1                   POP IY
       9.  00:44BC                      
      10.  00:44BC  FD 66 03            	LD H, (IY+3)
      11.  00:44BF  FD 6E 02            	LD L, (IY+2)
      12.  00:44C2  11 28 60                LD DE, SEC_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y    
      13.  00:44C5  FD E5               	PUSH IY
      14.  00:44C7  CD D9 44                call print_string 
      15.  00:44CA  FD E1               	POP IY
      16.  00:44CC                      
      17.  00:44CC  FD 66 05                LD H, (IY+5)
      18.  00:44CF  FD 6E 04            	LD L, (IY+4)
      19.  00:44D2  11 28 64            	LD DE, THIRD_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y
      20.  00:44D5  CD D9 44                call print_string 
      21.  00:44D8  C9                  	RET
      22.  00:44D9                      
      23.  00:44D9                      print_string:       
      24.  00:44D9                      	
      25.  00:44D9                      	;LD HL, string01
      26.  00:44D9                      	;LD DE, 5CA8H	; Aquí irá el offset de la memoria del VDP en base a X, Y
      27.  00:44D9                      .loop_str:
      28.  00:44D9  7E                  	LD A, (HL)
      29.  00:44DA  A7                  	AND A
      30.  00:44DB  C8                  	RET Z
      31.  00:44DC                      
      32.  00:44DC  D6 20               	SUB 32
      33.  00:44DE  CB 07               	RLC A
      34.  00:44E0  CB 07               	RLC A	
      35.  00:44E2                          
      36.  00:44E2  06 00               	LD B, 0
      37.  00:44E4  4F                  	LD C, A	; 4 * 32 = 124, ultimo caractec primera linea. 1024 - primer caracter segunda linea
      38.  00:44E5                      				; 16 * 4 = 64 -> numero 0 - ASCII 48 - 32 = 16 * 4 = 64 offset número 0
      39.  00:44E5                      				; Si #ASCII > 63 -> 2ª línea
      40.  00:44E5                      				; segunda línea - ((#ASCII -32)*4)+1024
      41.  00:44E5                      	
      42.  00:44E5  7E                  	LD A, (HL)	; vuelvo a cargar el caracter para ver si está en la segunda línea (ascii > 63)
      43.  00:44E6  E5                  	PUSH HL
      44.  00:44E7  21 00 80            	LD HL, FONT
      45.  00:44EA  09                  	ADD HL, BC
      46.  00:44EB  FE 40               	CP 64
      47.  00:44ED  DA F4 44            	JP C, .first_line_font
      48.  00:44F0  01 00 04            	LD BC, 1024	; le sumamos 1024 para saltar a la segunda línea de la fuente
      49.  00:44F3  09                  	ADD HL, BC
      50.  00:44F4                      
      51.  00:44F4                      .first_line_font:
      52.  00:44F4  22 A4 C0                LD (BITMAP), HL
      53.  00:44F7                          
      54.  00:44F7  06 06               	LD B, :FONT
      55.  00:44F9  D5                  	PUSH DE
      56.  00:44FA  CD 0D 45                call print_char
      57.  00:44FD  D1                      POP DE
      58.  00:44FE                      	
      59.  00:44FE  FD 21 04 00         	LD IY, 4
      60.  00:4502  FD 19               	ADD IY, DE	; Le sumo 4 a DE para que empiece a escribir el next char 8 pixels a la derecha 
      61.  00:4504  FD 54               	LD D, IYH
      62.  00:4506  FD 5D               	LD E, IYL
      63.  00:4508                      	
      64.  00:4508                      
      65.  00:4508  E1                  	POP HL
      66.  00:4509  23                  	INC HL
      67.  00:450A  18 CD               	JR .loop_str
      68.  00:450C                          
      69.  00:450C  C9                      RET
      70.  00:450D                      
      71.  00:450D                      print_char
      72.  00:450D  AF                  		XOR A		
      73.  00:450E  0E 00               		ld		c,0
      74.  00:4510                      		;ld		de,0
      75.  00:4510  ED 53 03 C0         		LD (CHR_ACR), DE
      76.  00:4514  CD 40 41                	call	_vdpsetvramwr		
      77.  00:4517  78                  		ld	a, b			; 1st page bitmap
      78.  00:4518                      		;ld	d,a
      79.  00:4518  32 00 70            		ld	(_bank2),a
      80.  00:451B  2A A4 C0            		ld	hl,(BITMAP)		; Bitmap address
      81.  00:451E  3E 08               		ld	a, 8			; #lineas del caracter
      82.  00:4520  01 98 04            1:      ld	bc,0x498		; escribimos 4 bytes en el puerto 98h	
      83.  00:4523  ED B3                       otir
      84.  00:4525  01 7C 00                    LD BC, 124
      85.  00:4528  09                          ADD HL, BC
      86.  00:4529  F5                  		PUSH AF
      87.  00:452A                      
      88.  00:452A  FD 2A 03 C0         		LD IY, (CHR_ACR)
      89.  00:452E  01 80 00            		LD BC, 128
      90.  00:4531  FD 09               		ADD IY, BC
      91.  00:4533  FD 54               		LD D, IYH
      92.  00:4535  FD 5D               		LD E, IYL
      93.  00:4537  A9                  		XOR C
      94.  00:4538  ED 53 03 C0         		LD (CHR_ACR), DE
      95.  00:453C  CD 40 41            		call	_vdpsetvramwr		
      96.  00:453F  F1                  		POP AF		
      97.  00:4540                      
      98.  00:4540  3D                  		dec	a
      99.  00:4541  20 DD               		jr	nz,1b		
     100.  00:4543  C9                  		ret 
     101.  00:4544                      
     102.  00:4544                      CLEAR_DIALOG_BOX:		
     103.  00:4544  0E 00               		LD C,0
     104.  00:4546  11 28 5C            		LD DE, 5C28H
     105.  00:4549  ED 53 03 C0         		LD (CHR_ACR), DE
     106.  00:454D  CD 40 41            		call _vdpsetvramwr
     107.  00:4550  3E 18               		LD A, 24		; Borraremos 24 líneas de la pantalla
     108.  00:4552  21 AC 61            1:		LD HL, BLANK_DATA
     109.  00:4555  01 98 54            		LD BC,0x5498	; Escribimos 84 bytes
     110.  00:4558  ED B3               		OTIR
     111.  00:455A                      
     112.  00:455A  F5                  		PUSH AF
     113.  00:455B  FD 2A 03 C0         		LD IY, (CHR_ACR)
     114.  00:455F  01 80 00            		LD BC, 128
     115.  00:4562  FD 09               		ADD IY, BC
     116.  00:4564  FD 54               		LD D, IYH
     117.  00:4566  FD 5D               		LD E, IYL
     118.  00:4568  0E 00               		LD C,0
     119.  00:456A  ED 53 03 C0         		LD (CHR_ACR), DE
     120.  00:456E  CD 40 41            		call	_vdpsetvramwr		
     121.  00:4571  F1                  		POP AF		
     122.  00:4572                      
     123.  00:4572  3D                  		DEC a
     124.  00:4573  20 DD               		JR NZ,1b
     125.  00:4575  C9                  		RET
      28   00:4576                      ; SFX
      29   00:4576                          include	"include\PT3_player.s"
       1.  00:4576                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2.  00:4576                      		; --- Can be assembled with asMSX ---
       3.  00:4576                      		; --- ROM version: MSX-KUN        ---
       4.  00:4576                      		; --- asMSX version 2: SapphiRe   ---
       5.  00:4576                      
       6.  00:4576                      ; Based on MSX full version of PT3 by Dioniso
       7.  00:4576                      ;
       8.  00:4576                      ; This version of the replayer can be used with any note table
       9.  00:4576                      ; This version also allows the use of PT3 commands
      10.  00:4576                      ; First 99 bytes of each PT3 module should be stripped off
      11.  00:4576                      ;
      12.  00:4576                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13.  00:4576                      ;
      14.  00:4576                      ; ROM LENGTH: 1549 bytes
      15.  00:4576                      ; RAM LENGTH:  576 bytes
      16.  00:4576                      
      17.  00:4576                      
      18.  00:4576                      
      19.  00:4576                      ;SJASM version by BTV 2016
      20.  00:4576                      
      21.  00:4576                      
      22.  00:4576                      		; --- CONSTANT VALUES DEFINITION ---
      23.  00:4576                      
      24.  00:4576                      ;ChannelsVars
      25.  00:4576                      ;struc	CHNPRM
      26.  00:4576                      ;reset group
      27.  00:4576  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28.  00:4576  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29.  00:4576  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30.  00:4576  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31.  00:4576  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32.  00:4576  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33.  00:4576  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34.  00:4576  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35.  00:4576  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36.  00:4576                      ;reset group
      37.  00:4576                      
      38.  00:4576  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39.  00:4576                      
      40.  00:4576                      ;IX for PTDECOD here [+12]
      41.  00:4576  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42.  00:4576  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43.  00:4576  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44.  00:4576  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45.  00:4576  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46.  00:4576  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47.  00:4576  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48.  00:4576  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49.  00:4576                       ;Enabled - 0,SimpleGliss - 2
      50.  00:4576  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51.  00:4576  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52.  00:4576  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53.  00:4576  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54.  00:4576  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55.  00:4576  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56.  00:4576                      ;endstruc
      57.  00:4576                      
      58.  00:4576                      ;struc	AR
      59.  00:4576  (00:0000)           AR_TonA		equ 0	;RESW 1
      60.  00:4576  (00:0002)           AR_TonB		equ 2	;RESW 1
      61.  00:4576  (00:0004)           AR_TonC		equ 4	;RESW 1
      62.  00:4576  (00:0006)           AR_Noise	equ 6	;RESB 1
      63.  00:4576  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64.  00:4576  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65.  00:4576  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66.  00:4576  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67.  00:4576  (00:000B)           AR_Env		equ 11	;RESW 1
      68.  00:4576  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69.  00:4576                      ;endstruc
      70.  00:4576                      
      71.  00:4576                      		; --- CODE STARTS HERE ---
      72.  00:4576                      
      73.  00:4576  21 00 F0            CHECKLP:	LD	HL,PT3_SETUP
      74.  00:4579  CB FE               		SET	7,[HL]
      75.  00:457B  CB 46               		BIT	0,[HL]
      76.  00:457D  C8                  		RET	Z
      77.  00:457E  E1                  		POP	HL
      78.  00:457F  21 7A F0            		LD	HL,DelyCnt
      79.  00:4582  34                  		INC	[HL]
      80.  00:4583  21 3E F0            		LD	HL,ChanA+CHNPRM_NtSkCn
      81.  00:4586  34                  		INC	[HL]
      82.  00:4587  AF                  PT3_MUTE:	XOR	A
      83.  00:4588  67                  		LD	H,A
      84.  00:4589  6F                  		LD	L,A
      85.  00:458A  32 48 F1            		LD	[AYREGS+AR_AmplA],A
      86.  00:458D  22 49 F1            		LD	[AYREGS+AR_AmplB],HL
      87.  00:4590  C3 D9 4A            		JP	ROUT_A0
      88.  00:4593                      
      89.  00:4593                      PT3_INIT:	;HL - AddressOfModule - 100
      90.  00:4593  22 01 F0            		LD [PT3_MODADDR],HL
      91.  00:4596  E5                  		PUSH HL
      92.  00:4597  11 64 00            		LD DE,100
      93.  00:459A  19                  		ADD HL,DE
      94.  00:459B  7E                  		LD A,[HL]
      95.  00:459C  32 1C F0            		LD [PT3_Delay],A
      96.  00:459F  E5                  		PUSH HL
      97.  00:45A0  DD E1               		POP IX
      98.  00:45A2  19                  		ADD HL,DE
      99.  00:45A3  22 03 F0            		LD [PT3_CrPsPtr],HL
     100.  00:45A6  DD 5E 02            		LD E,[IX+102-100]
     101.  00:45A9  19                  		ADD HL,DE
     102.  00:45AA  23                  		INC HL
     103.  00:45AB  22 18 F0            		LD [PT3_LPosPtr],HL
     104.  00:45AE  D1                  		POP DE
     105.  00:45AF  DD 6E 03            		LD L,[IX+103-100]
     106.  00:45B2  DD 66 04            		LD H,[IX+104-100]
     107.  00:45B5  19                  		ADD HL,DE
     108.  00:45B6  22 1A F0            		LD [PT3_PatsPtr],HL
     109.  00:45B9  21 A9 00            		LD HL,169
     110.  00:45BC  19                  		ADD HL,DE
     111.  00:45BD  22 07 F0            		LD [PT3_OrnPtrs],HL
     112.  00:45C0  21 69 00            		LD HL,105
     113.  00:45C3  19                  		ADD HL,DE
     114.  00:45C4  22 05 F0            		LD [PT3_SAMPTRS],HL
     115.  00:45C7  21 00 F0            		LD HL,PT3_SETUP
     116.  00:45CA  CB BE               		RES 7,[HL]
     117.  00:45CC                      
     118.  00:45CC                      		; --- note table data depacker ---
     119.  00:45CC                      		; Depacks first 12 tones of each tone table
     120.  00:45CC                      
     121.  00:45CC  11 4D 4B            		LD DE,T_PACK
     122.  00:45CF  01 B1 F1            		LD BC,T1_+(2*49)-1
     123.  00:45D2  1A                  .TP_0:		LD A,[DE]
     124.  00:45D3  13                  		INC DE
     125.  00:45D4  FE 1E               		CP 15*2
     126.  00:45D6  30 06               		JR NC,.TP_1
     127.  00:45D8  67                  		LD H,A
     128.  00:45D9  1A                  		LD A,[DE]
     129.  00:45DA  6F                  		LD L,A
     130.  00:45DB  13                  		INC DE
     131.  00:45DC  18 07               		JR .TP_2
     132.  00:45DE  D5                  .TP_1:		PUSH DE
     133.  00:45DF  16 00               		LD D,0
     134.  00:45E1  5F                  		LD E,A
     135.  00:45E2  19                  		ADD HL,DE
     136.  00:45E3  19                  		ADD HL,DE
     137.  00:45E4  D1                  		POP DE
     138.  00:45E5  7C                  .TP_2:		LD A,H
     139.  00:45E6  02                  		LD [BC],A
     140.  00:45E7  0B                  		DEC BC
     141.  00:45E8  7D                  		LD A,L
     142.  00:45E9  02                  		LD [BC],A
     143.  00:45EA  0B                  		DEC BC
     144.  00:45EB  D6 F0               		SUB $F0
     145.  00:45ED  20 E3               		JR NZ,.TP_0
     146.  00:45EF                      
     147.  00:45EF                      		; --- INITIALIZE PT3 VARIABLES ---
     148.  00:45EF  21 23 F0            		LD HL,VARS
     149.  00:45F2  77                  		LD [HL],A
     150.  00:45F3  11 24 F0            		LD DE,VARS+1
     151.  00:45F6  01 2C 01            		LD BC,VAR0END-VARS-1
     152.  00:45F9  ED B0               		LDIR
     153.  00:45FB                      
     154.  00:45FB  3C                  		INC A
     155.  00:45FC  32 7A F0            		LD [DelyCnt],A
     156.  00:45FF  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157.  00:4602  22 3E F0            		LD [ChanA+CHNPRM_NtSkCn],HL
     158.  00:4605  22 5B F0            		LD [ChanB+CHNPRM_NtSkCn],HL
     159.  00:4608  22 78 F0            		LD [ChanC+CHNPRM_NtSkCn],HL
     160.  00:460B                      
     161.  00:460B  21 49 4B            		LD HL,EMPTYSAMORN
     162.  00:460E  22 12 F0            		LD [PT3_AdInPtA],HL ;ptr to zero
     163.  00:4611  22 30 F0            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164.  00:4614  22 4D F0            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165.  00:4617  22 6A F0            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166.  00:461A                      
     167.  00:461A  22 32 F0            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168.  00:461D  22 4F F0            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169.  00:4620  22 6C F0            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170.  00:4623                      					    ;also EMPTYSAMORN comment
     171.  00:4623                      
     172.  00:4623                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173.  00:4623  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174.  00:4626  17                  		RLA
     175.  00:4627  E6 07               		AND 7
     176.  00:4629  21 F9 4A            		LD HL,NT_DATA
     177.  00:462C  D5                  		PUSH DE
     178.  00:462D  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179.  00:462E  87                  		ADD A,A
     180.  00:462F  5F                  		LD E,A
     181.  00:4630  19                  		ADD HL,DE	; hl -> init of correct note table data
     182.  00:4631  5E                  		LD E,[HL]
     183.  00:4632  23                  		INC HL
     184.  00:4633  CB 3B               		SRL E
     185.  00:4635  9F                  		SBC A,A
     186.  00:4636  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187.  00:4638  32 21 F0            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188.  00:463B  3E C9               		LD A,$C9		; RET CODE
     189.  00:463D  32 22 F0            		LD [PT3_NTL3+1],A	; RET PLACED
     190.  00:4640  EB                  		EX DE,HL
     191.  00:4641  C1                  		POP BC ;BC=T1_
     192.  00:4642  09                  		ADD HL,BC
     193.  00:4643                      
     194.  00:4643  1A                  		LD A,[DE]                           
     195.  00:4644                      
     196.  00:4644  01 09 4B            		LD BC,T_
     197.  00:4647  81                  		ADD A,C
     198.  00:4648  4F                  		LD C,A
     199.  00:4649  88                  		ADC A,B
     200.  00:464A                      
     201.  00:464A  91                  		SUB C
     202.  00:464B  47                  		LD B,A
     203.  00:464C  C5                  		PUSH BC
     204.  00:464D  11 80 F0            		LD DE,NT_
     205.  00:4650  D5                  		PUSH DE
     206.  00:4651                      
     207.  00:4651  06 0C               		LD B,12
     208.  00:4653  C5                  .L1:		PUSH BC
     209.  00:4654  4E                  		LD C,[HL]
     210.  00:4655  23                  		INC HL
     211.  00:4656  E5                  		PUSH HL
     212.  00:4657  46                  		LD B,[HL]
     213.  00:4658                      
     214.  00:4658  D5                  		PUSH DE
     215.  00:4659  EB                  		EX DE,HL
     216.  00:465A  11 17 00            		LD DE,23
     217.  00:465D  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218.  00:4660                      
     219.  00:4660  CB 38               .L2:		SRL B
     220.  00:4662  CB 19               		RR C
     221.  00:4664  CD 21 F0            .L3:		CALL PT3_NTL3	;AND A or NOP
     222.  00:4667  79                  		LD A,C
     223.  00:4668  8A                  		ADC A,D	;=ADC 0
     224.  00:4669  77                  		LD [HL],A
     225.  00:466A  23                  		INC HL
     226.  00:466B  78                  		LD A,B
     227.  00:466C  8A                  		ADC A,D
     228.  00:466D  77                  		LD [HL],A
     229.  00:466E  19                  		ADD HL,DE
     230.  00:466F  DD 25               		db $DD,$25	;DEC XH
     231.  00:4671  20 ED               		JR NZ,.L2
     232.  00:4673                      
     233.  00:4673  D1                  		POP DE
     234.  00:4674  13                  		INC DE
     235.  00:4675  13                  		INC DE
     236.  00:4676  E1                  		POP HL
     237.  00:4677  23                  		INC HL
     238.  00:4678  C1                  		POP BC
     239.  00:4679  10 D8               		DJNZ .L1
     240.  00:467B                      
     241.  00:467B  E1                  		POP HL
     242.  00:467C  D1                  		POP DE
     243.  00:467D                      
     244.  00:467D  7B                  		LD A,E
     245.  00:467E  D5                  		PUSH DE
     246.  00:467F  11 15 4B            		LD DE,TCOLD_1
     247.  00:4682  BB                  		CP E
     248.  00:4683  D1                  		POP DE
     249.  00:4684  20 05               		JR NZ,.CORR_1
     250.  00:4686  3E FD               		LD A,$FD
     251.  00:4688  32 AE F0            		LD [NT_+$2E],A
     252.  00:468B                      
     253.  00:468B  1A                  .CORR_1:	LD A,[DE]
     254.  00:468C  A7                  		AND A
     255.  00:468D  28 11               		JR Z,.TC_EXIT
     256.  00:468F  1F                  		RRA
     257.  00:4690  F5                  		PUSH AF
     258.  00:4691  87                  		ADD A,A
     259.  00:4692  4F                  		LD C,A
     260.  00:4693  09                  		ADD HL,BC
     261.  00:4694  F1                  		POP AF
     262.  00:4695  30 02               		JR NC,.CORR_2
     263.  00:4697  35                  		DEC [HL]
     264.  00:4698  35                  		DEC [HL]
     265.  00:4699  34                  .CORR_2:	INC [HL]
     266.  00:469A  A7                  		AND A
     267.  00:469B  ED 42               		SBC HL,BC
     268.  00:469D  13                  		INC DE
     269.  00:469E  18 EB               		JR .CORR_1
     270.  00:46A0                      
     271.  00:46A0                      .TC_EXIT:	;POP AF
     272.  00:46A0                      
     273.  00:46A0                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274.  00:46A0  21 11 00            		ld	hl,$11
     275.  00:46A3  54                  		ld	d,h
     276.  00:46A4  5C                  		ld	e,h
     277.  00:46A5  DD 21 50 F1         		ld	IX,VT_+16
     278.  00:46A9  06 0F               		ld	b,15
     279.  00:46AB  E5                  .INITV1:	push	hl
     280.  00:46AC  19                  		add	hl,de
     281.  00:46AD  EB                  		ex	de,hl
     282.  00:46AE  ED 62               		sbc	hl,hl
     283.  00:46B0  48                  		ld	c,b
     284.  00:46B1  06 10               		ld	b,16
     285.  00:46B3  7D                  .INITV2:	ld	a,l
     286.  00:46B4  17                  		rla
     287.  00:46B5  7C                  		ld	a,h
     288.  00:46B6  CE 00               		adc	a,0
     289.  00:46B8  DD 77 00            		ld	[ix],a
     290.  00:46BB  DD 23               		inc	ix
     291.  00:46BD  19                  		add	hl,de
     292.  00:46BE  10 F3               		djnz	.INITV2
     293.  00:46C0  E1                  		pop	hl
     294.  00:46C1  7B                  		ld	a,e
     295.  00:46C2  FE 77               		cp	$77
     296.  00:46C4  20 01               		jr	nz,.INITV3
     297.  00:46C6  1C                  		inc	e
     298.  00:46C7  41                  .INITV3:	ld	b,c
     299.  00:46C8  10 E1               		djnz	.INITV1
     300.  00:46CA                      
     301.  00:46CA  C9                  		RET
     302.  00:46CB                      
     303.  00:46CB                      		;pattern decoder
     304.  00:46CB  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305.  00:46CF  CD 55 48            		CALL SETORN
     306.  00:46D2  0A                  		LD A,[BC]
     307.  00:46D3  03                  		INC BC
     308.  00:46D4  0F                  		RRCA
     309.  00:46D5                      
     310.  00:46D5  87                  PD_SAM:		ADD A,A
     311.  00:46D6  5F                  PD_SAM_:	LD E,A
     312.  00:46D7  16 00               		LD D,0
     313.  00:46D9  2A 05 F0            		LD HL,[PT3_SAMPTRS]
     314.  00:46DC  19                  		ADD HL,DE
     315.  00:46DD  5E                  		LD E,[HL]
     316.  00:46DE  23                  		INC HL
     317.  00:46DF  56                  		LD D,[HL]
     318.  00:46E0  2A 01 F0            		LD HL,[PT3_MODADDR]
     319.  00:46E3  19                  		ADD HL,DE
     320.  00:46E4  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321.  00:46E7  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322.  00:46EA  18 41               		JR PD_LOOP
     323.  00:46EC                      
     324.  00:46EC  07                  PD_VOL:		RLCA
     325.  00:46ED  07                  		RLCA
     326.  00:46EE  07                  		RLCA
     327.  00:46EF  07                  		RLCA
     328.  00:46F0  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329.  00:46F3  18 3B               		JR PD_LP2
     330.  00:46F5                      	
     331.  00:46F5  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332.  00:46F8  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333.  00:46FB  18 33               		JR PD_LP2
     334.  00:46FD                      
     335.  00:46FD  3D                  PD_SorE:	DEC A
     336.  00:46FE  20 07               		JR NZ,PD_ENV
     337.  00:4700  0A                  		LD A,[BC]
     338.  00:4701  03                  		INC BC
     339.  00:4702  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340.  00:4705  18 29               		JR PD_LP2
     341.  00:4707                      
     342.  00:4707  CD 39 48            PD_ENV:		CALL SETENV
     343.  00:470A  18 24               		JR PD_LP2
     344.  00:470C                      
     345.  00:470C  CD 55 48            PD_ORN:		CALL SETORN
     346.  00:470F  18 1C               		JR PD_LOOP
     347.  00:4711                             
     348.  00:4711  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349.  00:4714  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350.  00:4717  C4 39 48            		CALL NZ,SETENV
     351.  00:471A  0A                  		LD A,[BC]
     352.  00:471B  03                  		INC BC
     353.  00:471C  18 B8               		JR PD_SAM_
     354.  00:471E                      
     355.  00:471E  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356.  00:4721  32 0F F0            		LD [PT3_PrNote],A
     357.  00:4724  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358.  00:4727  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359.  00:472A  22 10 F0            		LD [PT3_PrSlide],HL
     360.  00:472D                      
     361.  00:472D  11 10 20            PD_LOOP:	LD DE,$2010
     362.  00:4730  0A                  PD_LP2:		LD A,[BC]
     363.  00:4731  03                  		INC BC
     364.  00:4732  83                  		ADD A,E
     365.  00:4733  38 96               		JR C,PD_OrSm
     366.  00:4735  82                  		ADD A,D
     367.  00:4736  28 4A               		JR Z,PD_FIN
     368.  00:4738  38 9B               		JR C,PD_SAM
     369.  00:473A  83                  		ADD A,E
     370.  00:473B  28 25               		JR Z,PD_REL
     371.  00:473D  38 AD               		JR C,PD_VOL
     372.  00:473F  83                  		ADD A,E
     373.  00:4740  28 B3               		JR Z,PD_EOff
     374.  00:4742  38 B9               		JR C,PD_SorE
     375.  00:4744  C6 60               		ADD A,96
     376.  00:4746  38 20               		JR C,PD_NOTE
     377.  00:4748  83                  		ADD A,E
     378.  00:4749  38 C1               		JR C,PD_ORN
     379.  00:474B  82                  		ADD A,D
     380.  00:474C  38 0F               		JR C,PD_NOIS
     381.  00:474E  83                  		ADD A,E
     382.  00:474F  38 C0               		JR C,PD_ESAM
     383.  00:4751  87                  		ADD A,A
     384.  00:4752  5F                  		LD E,A
     385.  00:4753  21 8E 27            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386.  00:4756  19                  		ADD HL,DE
     387.  00:4757  5E                  		LD E,[HL]
     388.  00:4758  23                  		INC HL
     389.  00:4759  56                  		LD D,[HL]
     390.  00:475A  D5                  		PUSH DE
     391.  00:475B  18 D0               		JR PD_LOOP
     392.  00:475D                      
     393.  00:475D  32 7E F0            PD_NOIS:	LD [Ns_Base],A
     394.  00:4760  18 CE               		JR PD_LP2
     395.  00:4762                      
     396.  00:4762  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397.  00:4766  18 08               		JR PD_RES
     398.  00:4768                      	
     399.  00:4768  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400.  00:476B  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401.  00:476F  AF                  		XOR A
     402.  00:4770                      
     403.  00:4770  ED 73 09 F0         PD_RES:		LD [PT3_PDSP],SP
     404.  00:4774  DD F9               		LD SP,IX
     405.  00:4776  67                  		LD H,A
     406.  00:4777  6F                  		LD L,A
     407.  00:4778  E5                  		PUSH HL
     408.  00:4779  E5                  		PUSH HL
     409.  00:477A  E5                  		PUSH HL
     410.  00:477B  E5                  		PUSH HL
     411.  00:477C  E5                  		PUSH HL
     412.  00:477D  E5                  		PUSH HL
     413.  00:477E  ED 7B 09 F0         		LD SP,[PT3_PDSP]
     414.  00:4782                      
     415.  00:4782  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416.  00:4785  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417.  00:4788  C9                  		RET
     418.  00:4789                      
     419.  00:4789  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420.  00:478D  0A                  		LD A,[BC]
     421.  00:478E  03                  		INC BC
     422.  00:478F                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423.  00:478F                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424.  00:478F  03                  		INC BC
     425.  00:4790  03                  		INC BC
     426.  00:4791  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427.  00:4794  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428.  00:4797  11 80 F0            		LD DE,NT_
     429.  00:479A  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430.  00:479D  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431.  00:47A0  87                  		ADD A,A
     432.  00:47A1  6F                  		LD L,A
     433.  00:47A2  26 00               		LD H,0
     434.  00:47A4  19                  		ADD HL,DE
     435.  00:47A5  7E                  		LD A,[HL]
     436.  00:47A6  23                  		INC HL
     437.  00:47A7  66                  		LD H,[HL]
     438.  00:47A8  6F                  		LD L,A
     439.  00:47A9  E5                  		PUSH HL
     440.  00:47AA  3A 0F F0            		LD A,[PT3_PrNote]
     441.  00:47AD  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442.  00:47B0  87                  		ADD A,A
     443.  00:47B1  6F                  		LD L,A
     444.  00:47B2  26 00               		LD H,0
     445.  00:47B4  19                  		ADD HL,DE
     446.  00:47B5  5E                  		LD E,[HL]
     447.  00:47B6  23                  		INC HL
     448.  00:47B7  56                  		LD D,[HL]
     449.  00:47B8  E1                  		POP HL
     450.  00:47B9  ED 52               		SBC HL,DE
     451.  00:47BB  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452.  00:47BE  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453.  00:47C1  ED 5B 10 F0         		LD DE,[PT3_PrSlide]
     454.  00:47C5  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455.  00:47C8  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456.  00:47CB  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457.  00:47CC  03                  		INC BC
     458.  00:47CD  08                  		EX AF,AF'
     459.  00:47CE  0A                  		LD A,[BC]
     460.  00:47CF  03                  		INC BC
     461.  00:47D0  A7                  		AND A
     462.  00:47D1  28 01               		JR Z,.NOSIG
     463.  00:47D3  EB                  		EX DE,HL
     464.  00:47D4  ED 52               .NOSIG:	SBC HL,DE
     465.  00:47D6  F2 DE 47            		JP P,SET_STP
     466.  00:47D9  2F                  		CPL
     467.  00:47DA  08                  		EX AF,AF'
     468.  00:47DB  ED 44               		NEG
     469.  00:47DD  08                  		EX AF,AF'
     470.  00:47DE  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471.  00:47E1  08                  		EX AF,AF'
     472.  00:47E2  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473.  00:47E5  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474.  00:47E9  C9                  		RET
     475.  00:47EA                      
     476.  00:47EA  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477.  00:47EE  0A                  		LD A,[BC]
     478.  00:47EF  03                  		INC BC
     479.  00:47F0  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480.  00:47F3  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481.  00:47F6  0A                  		LD A,[BC]
     482.  00:47F7  03                  		INC BC
     483.  00:47F8  08                  		EX AF,AF'
     484.  00:47F9  0A                  		LD A,[BC]
     485.  00:47FA  03                  		INC BC
     486.  00:47FB  18 E1               		JR SET_STP
     487.  00:47FD                      
     488.  00:47FD  0A                  C_SMPOS:	LD A,[BC]
     489.  00:47FE  03                  		INC BC
     490.  00:47FF  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491.  00:4802  C9                  		RET
     492.  00:4803                      
     493.  00:4803  0A                  C_ORPOS:	LD A,[BC]
     494.  00:4804  03                  		INC BC
     495.  00:4805  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496.  00:4808  C9                  		RET
     497.  00:4809                      
     498.  00:4809  0A                  C_VIBRT:	LD A,[BC]
     499.  00:480A  03                  		INC BC
     500.  00:480B  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501.  00:480E  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502.  00:4811  0A                  		LD A,[BC]
     503.  00:4812  03                  		INC BC
     504.  00:4813  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505.  00:4816  AF                  		XOR A
     506.  00:4817  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507.  00:481A  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508.  00:481D  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509.  00:4820  C9                  		RET
     510.  00:4821                      
     511.  00:4821  0A                  C_ENGLS:	LD A,[BC]
     512.  00:4822  03                  		INC BC
     513.  00:4823  32 1E F0            		LD [PT3_Env_Del],A
     514.  00:4826  32 7D F0            		LD [CurEDel],A
     515.  00:4829  0A                  		LD A,[BC]
     516.  00:482A  03                  		INC BC
     517.  00:482B  6F                  		LD L,A
     518.  00:482C  0A                  		LD A,[BC]
     519.  00:482D  03                  		INC BC
     520.  00:482E  67                  		LD H,A
     521.  00:482F  22 1F F0            		LD [PT3_ESldAdd],HL
     522.  00:4832  C9                  		RET
     523.  00:4833                      
     524.  00:4833  0A                  C_DELAY:	LD A,[BC]
     525.  00:4834  03                  		INC BC
     526.  00:4835  32 1C F0            		LD [PT3_Delay],A
     527.  00:4838  C9                  		RET
     528.  00:4839                      	
     529.  00:4839  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530.  00:483C  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     531.  00:483F  0A                  		LD A,[BC]
     532.  00:4840  03                  		INC BC
     533.  00:4841  67                  		LD H,A
     534.  00:4842  0A                  		LD A,[BC]
     535.  00:4843  03                  		INC BC
     536.  00:4844  6F                  		LD L,A
     537.  00:4845  22 4E F1            		LD [EnvBase],HL
     538.  00:4848  AF                  		XOR A
     539.  00:4849  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540.  00:484C  32 7D F0            		LD [CurEDel],A
     541.  00:484F  67                  		LD H,A
     542.  00:4850  6F                  		LD L,A
     543.  00:4851  22 7B F0            		LD [CurESld],HL
     544.  00:4854  C9                  C_NOP:		RET
     545.  00:4855                      
     546.  00:4855  87                  SETORN:		ADD A,A
     547.  00:4856  5F                  		LD E,A
     548.  00:4857  16 00               		LD D,0
     549.  00:4859  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550.  00:485C  2A 07 F0            		LD HL,[PT3_OrnPtrs]
     551.  00:485F  19                  		ADD HL,DE
     552.  00:4860  5E                  		LD E,[HL]
     553.  00:4861  23                  		INC HL
     554.  00:4862  56                  		LD D,[HL]
     555.  00:4863  2A 01 F0            		LD HL,[PT3_MODADDR]
     556.  00:4866  19                  		ADD HL,DE
     557.  00:4867  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558.  00:486A  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559.  00:486D  C9                  		RET
     560.  00:486E                      
     561.  00:486E                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562.  00:486E  54 48               SPCCOMS:	dw C_NOP
     563.  00:4870  EA 47               		dw C_GLISS
     564.  00:4872  89 47               		dw C_PORTM
     565.  00:4874  FD 47               		dw C_SMPOS
     566.  00:4876  03 48               		dw C_ORPOS
     567.  00:4878  09 48               		dw C_VIBRT
     568.  00:487A  54 48               		dw C_NOP
     569.  00:487C  54 48               		dw C_NOP
     570.  00:487E  21 48               		dw C_ENGLS
     571.  00:4880  33 48               		dw C_DELAY
     572.  00:4882  54 48               		dw C_NOP
     573.  00:4884  54 48               		dw C_NOP
     574.  00:4886  54 48               		dw C_NOP
     575.  00:4888  54 48               		dw C_NOP
     576.  00:488A  54 48               		dw C_NOP
     577.  00:488C  54 48               		dw C_NOP
     578.  00:488E                      
     579.  00:488E  AF                  CHREGS:		XOR A
     580.  00:488F  32 4A F1            		LD [AYREGS+AR_AmplC],A
     581.  00:4892  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582.  00:4896  E5                  		PUSH HL
     583.  00:4897  CA BD 49            		JP Z,.CH_EXIT
     584.  00:489A  ED 73 0B F0         		LD [PT3_CSP],SP
     585.  00:489E  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586.  00:48A1  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587.  00:48A4  F9                  		LD SP,HL
     588.  00:48A5  D1                  		POP DE
     589.  00:48A6  67                  		LD H,A
     590.  00:48A7  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591.  00:48AA  6F                  		LD L,A
     592.  00:48AB  39                  		ADD HL,SP
     593.  00:48AC  3C                  		INC A
     594.  00:48AD  BA                  		CP D
     595.  00:48AE  38 01               		JR C,.CH_ORPS
     596.  00:48B0  7B                  		LD A,E
     597.  00:48B1  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598.  00:48B4  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599.  00:48B7  86                  		ADD A,[HL]
     600.  00:48B8  F2 BC 48            		JP P,.CH_NTP
     601.  00:48BB  AF                  		XOR A
     602.  00:48BC  FE 60               .CH_NTP:	CP 96
     603.  00:48BE  38 02               		JR C,.CH_NOK
     604.  00:48C0  3E 5F               		LD A,95
     605.  00:48C2  87                  .CH_NOK:	ADD A,A
     606.  00:48C3  08                  		EX AF,AF'
     607.  00:48C4  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608.  00:48C7  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609.  00:48CA  F9                  		LD SP,HL
     610.  00:48CB  D1                  		POP DE
     611.  00:48CC  26 00               		LD H,0
     612.  00:48CE  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613.  00:48D1  47                  		LD B,A
     614.  00:48D2  87                  		ADD A,A
     615.  00:48D3  87                  		ADD A,A
     616.  00:48D4  6F                  		LD L,A
     617.  00:48D5  39                  		ADD HL,SP
     618.  00:48D6  F9                  		LD SP,HL
     619.  00:48D7  78                  		LD A,B
     620.  00:48D8  3C                  		INC A
     621.  00:48D9  BA                  		CP D
     622.  00:48DA  38 01               		JR C,.CH_SMPS
     623.  00:48DC  7B                  		LD A,E
     624.  00:48DD  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625.  00:48E0  C1                  		POP BC
     626.  00:48E1  E1                  		POP HL
     627.  00:48E2  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628.  00:48E5  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629.  00:48E8  19                  		ADD HL,DE
     630.  00:48E9  CB 70               		BIT 6,B
     631.  00:48EB  28 06               		JR Z,.CH_NOAC
     632.  00:48ED  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633.  00:48F0  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634.  00:48F3  EB                  .CH_NOAC:	EX DE,HL
     635.  00:48F4  08                  		EX AF,AF'
     636.  00:48F5  6F                  		LD L,A
     637.  00:48F6  26 00               		LD H,0
     638.  00:48F8  31 80 F0            		LD SP,NT_
     639.  00:48FB  39                  		ADD HL,SP
     640.  00:48FC  F9                  		LD SP,HL
     641.  00:48FD  E1                  		POP HL
     642.  00:48FE  19                  		ADD HL,DE
     643.  00:48FF  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644.  00:4902  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645.  00:4905  19                  		ADD HL,DE
     646.  00:4906  ED 7B 0B F0         		LD SP,[PT3_CSP]
     647.  00:490A  E3                  		EX [SP],HL
     648.  00:490B  AF                  		XOR A
     649.  00:490C  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650.  00:490F  28 3E               		JR Z,.CH_AMP
     651.  00:4911  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652.  00:4914  20 39               		JR NZ,.CH_AMP
     653.  00:4916  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654.  00:4919  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655.  00:491C  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656.  00:491F  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657.  00:4922  7C                  		LD A,H
     658.  00:4923  19                  		ADD HL,DE
     659.  00:4924  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660.  00:4927  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661.  00:492A  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662.  00:492E  20 1F               		JR NZ,.CH_AMP
     663.  00:4930  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664.  00:4933  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665.  00:4936  A7                  		AND A
     666.  00:4937  28 01               		JR Z,.CH_STPP
     667.  00:4939  EB                  		EX DE,HL
     668.  00:493A  ED 52               .CH_STPP:	SBC HL,DE
     669.  00:493C  FA 4F 49            		JP M,.CH_AMP
     670.  00:493F  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671.  00:4942  DD 77 12            		LD [IX+CHNPRM_Note],A
     672.  00:4945  AF                  		XOR A
     673.  00:4946  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674.  00:4949  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675.  00:494C  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676.  00:494F  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677.  00:4952  CB 79               		BIT 7,C
     678.  00:4954  28 13               		JR Z,.CH_NOAM
     679.  00:4956  CB 71               		BIT 6,C
     680.  00:4958  28 07               		JR Z,.CH_AMIN
     681.  00:495A  FE 0F               		CP 15
     682.  00:495C  28 0B               		JR Z,.CH_NOAM
     683.  00:495E  3C                  		INC A
     684.  00:495F  18 05               		JR .CH_SVAM
     685.  00:4961  FE F1               .CH_AMIN:	CP -15
     686.  00:4963  28 04               		JR Z,.CH_NOAM
     687.  00:4965  3D                  		DEC A
     688.  00:4966  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689.  00:4969  6F                  .CH_NOAM:	LD L,A
     690.  00:496A  78                  		LD A,B
     691.  00:496B  E6 0F               		AND 15
     692.  00:496D  85                  		ADD A,L
     693.  00:496E  F2 72 49            		JP P,.CH_APOS
     694.  00:4971  AF                  		XOR A
     695.  00:4972  FE 10               .CH_APOS:	CP 16
     696.  00:4974  38 02               		JR C,.CH_VOL
     697.  00:4976  3E 0F               		LD A,15
     698.  00:4978  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699.  00:497B  6F                  		LD L,A
     700.  00:497C  26 00               		LD H,0
     701.  00:497E  11 40 F1            		LD DE,VT_
     702.  00:4981  19                  		ADD HL,DE
     703.  00:4982  7E                  		LD A,[HL]
     704.  00:4983  CB 41               .CH_ENV:	BIT 0,C
     705.  00:4985  20 03               		JR NZ,.CH_NOEN
     706.  00:4987  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707.  00:498A  32 4A F1            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708.  00:498D  CB 78               		BIT 7,B
     709.  00:498F  79                  		LD A,C
     710.  00:4990  28 19               		JR Z,.NO_ENSL
     711.  00:4992  17                  		RLA
     712.  00:4993  17                  		RLA
     713.  00:4994  CB 2F               		SRA A
     714.  00:4996  CB 2F               		SRA A
     715.  00:4998  CB 2F               		SRA A
     716.  00:499A  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717.  00:499D  CB 68               		BIT 5,B
     718.  00:499F  28 03               		JR Z,.NO_ENAC
     719.  00:49A1  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720.  00:49A4  21 1D F0            .NO_ENAC:	LD HL,PT3_AddToEn
     721.  00:49A7  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722.  00:49A8                      			   ;FIX IT IN NEXT VERSION?
     723.  00:49A8  77                  		LD [HL],A
     724.  00:49A9  18 0E               		JR .CH_MIX
     725.  00:49AB  1F                  .NO_ENSL:	RRA
     726.  00:49AC  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727.  00:49AF  32 7F F0            		LD [AddToNs],A
     728.  00:49B2  CB 68               		BIT 5,B
     729.  00:49B4  28 03               		JR Z,.CH_MIX
     730.  00:49B6  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731.  00:49B9  78                  .CH_MIX:	LD A,B
     732.  00:49BA  1F                  		RRA
     733.  00:49BB  E6 48               		AND $48
     734.  00:49BD  21 47 F1            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735.  00:49C0  B6                  		OR [HL]
     736.  00:49C1  0F                  		RRCA
     737.  00:49C2  77                  		LD [HL],A
     738.  00:49C3  E1                  		POP HL
     739.  00:49C4  AF                  		XOR A
     740.  00:49C5  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741.  00:49C8  C8                  		RET Z
     742.  00:49C9  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743.  00:49CC  C0                  		RET NZ
     744.  00:49CD  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745.  00:49D0  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746.  00:49D3  1F                  		RRA
     747.  00:49D4  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748.  00:49D7  38 03               		JR C,.CH_ONDL
     749.  00:49D9  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750.  00:49DC  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751.  00:49DF  C9                  		RET
     752.  00:49E0                      
     753.  00:49E0  AF                  PT3_PLAY:	XOR A
     754.  00:49E1  32 1D F0            		LD [PT3_AddToEn],A
     755.  00:49E4  32 47 F1            		LD [AYREGS+AR_Mixer],A
     756.  00:49E7  3D                  		DEC A
     757.  00:49E8  32 4D F1            		LD [AYREGS+AR_EnvTp],A
     758.  00:49EB  21 7A F0            		LD HL,DelyCnt
     759.  00:49EE  35                  		DEC [HL]
     760.  00:49EF  C2 76 4A            		JP NZ,.PL2
     761.  00:49F2  21 3E F0            		LD HL,ChanA+CHNPRM_NtSkCn
     762.  00:49F5  35                  		DEC [HL]
     763.  00:49F6  20 4E               		JR NZ,.PL1B
     764.  00:49F8  ED 4B 12 F0         		LD BC,[PT3_AdInPtA]
     765.  00:49FC  0A                  		LD A,[BC]
     766.  00:49FD  A7                  		AND A
     767.  00:49FE  20 3B               		JR NZ,.PL1A
     768.  00:4A00  57                  		LD D,A
     769.  00:4A01  32 7E F0            		LD [Ns_Base],A
     770.  00:4A04  2A 03 F0            		LD HL,[PT3_CrPsPtr]
     771.  00:4A07  23                  		INC HL
     772.  00:4A08  7E                  		LD A,[HL]
     773.  00:4A09  3C                  		INC A
     774.  00:4A0A  20 08               		JR NZ,.PLNLP
     775.  00:4A0C  CD 76 45            		CALL CHECKLP
     776.  00:4A0F  2A 18 F0            		LD HL,[PT3_LPosPtr]
     777.  00:4A12  7E                  		LD A,[HL]
     778.  00:4A13  3C                  		INC A
     779.  00:4A14  22 03 F0            .PLNLP:	LD [PT3_CrPsPtr],HL
     780.  00:4A17  3D                  		DEC A
     781.  00:4A18  87                  		ADD A,A
     782.  00:4A19  5F                  		LD E,A
     783.  00:4A1A  CB 12               		RL D
     784.  00:4A1C  2A 1A F0            		LD HL,[PT3_PatsPtr]
     785.  00:4A1F  19                  		ADD HL,DE
     786.  00:4A20  ED 5B 01 F0         		LD DE,[PT3_MODADDR]
     787.  00:4A24  ED 73 0D F0         		LD [PT3_PSP],SP
     788.  00:4A28  F9                  		LD SP,HL
     789.  00:4A29  E1                  		POP HL
     790.  00:4A2A  19                  		ADD HL,DE
     791.  00:4A2B  44                  		LD B,H
     792.  00:4A2C  4D                  		LD C,L
     793.  00:4A2D  E1                  		POP HL
     794.  00:4A2E  19                  		ADD HL,DE
     795.  00:4A2F  22 14 F0            		LD [PT3_AdInPtB],HL
     796.  00:4A32  E1                  		POP HL
     797.  00:4A33  19                  		ADD HL,DE
     798.  00:4A34  22 16 F0            		LD [PT3_AdInPtC],HL
     799.  00:4A37  ED 7B 0D F0         		LD SP,[PT3_PSP]
     800.  00:4A3B                      
     801.  00:4A3B  DD 21 2F F0         .PL1A:		LD IX,ChanA+12
     802.  00:4A3F  CD 1E 47            		CALL PTDECOD
     803.  00:4A42  ED 43 12 F0         		LD [PT3_AdInPtA],BC
     804.  00:4A46                      
     805.  00:4A46  21 5B F0            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806.  00:4A49  35                  		DEC [HL]
     807.  00:4A4A  20 0F               		JR NZ,.PL1C
     808.  00:4A4C  DD 21 4C F0         		LD IX,ChanB+12
     809.  00:4A50  ED 4B 14 F0         		LD BC,[PT3_AdInPtB]
     810.  00:4A54  CD 1E 47            		CALL PTDECOD
     811.  00:4A57  ED 43 14 F0         		LD [PT3_AdInPtB],BC
     812.  00:4A5B                      
     813.  00:4A5B  21 78 F0            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814.  00:4A5E  35                  		DEC [HL]
     815.  00:4A5F  20 0F               		JR NZ,.PL1D
     816.  00:4A61  DD 21 69 F0         		LD IX,ChanC+12
     817.  00:4A65  ED 4B 16 F0         		LD BC,[PT3_AdInPtC]
     818.  00:4A69  CD 1E 47            		CALL PTDECOD
     819.  00:4A6C  ED 43 16 F0         		LD [PT3_AdInPtC],BC
     820.  00:4A70                      
     821.  00:4A70  3A 1C F0            .PL1D:		LD A,[PT3_Delay]
     822.  00:4A73  32 7A F0            		LD [DelyCnt],A
     823.  00:4A76                      
     824.  00:4A76  DD 21 23 F0         .PL2:		LD IX,ChanA
     825.  00:4A7A  2A 40 F1            		LD HL,[AYREGS+AR_TonA]
     826.  00:4A7D  CD 8E 48            		CALL CHREGS
     827.  00:4A80  22 40 F1            		LD [AYREGS+AR_TonA],HL
     828.  00:4A83  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     829.  00:4A86  32 48 F1            		LD [AYREGS+AR_AmplA],A
     830.  00:4A89  DD 21 40 F0         		LD IX,ChanB
     831.  00:4A8D  2A 42 F1            		LD HL,[AYREGS+AR_TonB]
     832.  00:4A90  CD 8E 48            		CALL CHREGS
     833.  00:4A93  22 42 F1            		LD [AYREGS+AR_TonB],HL
     834.  00:4A96  3A 4A F1            		LD A,[AYREGS+AR_AmplC]
     835.  00:4A99  32 49 F1            		LD [AYREGS+AR_AmplB],A
     836.  00:4A9C  DD 21 5D F0         		LD IX,ChanC
     837.  00:4AA0  2A 44 F1            		LD HL,[AYREGS+AR_TonC]
     838.  00:4AA3  CD 8E 48            		CALL CHREGS
     839.  00:4AA6  22 44 F1            		LD [AYREGS+AR_TonC],HL
     840.  00:4AA9                      
     841.  00:4AA9  2A 7E F0            		LD HL,[Ns_Base_AddToNs]
     842.  00:4AAC  7C                  		LD A,H
     843.  00:4AAD  85                  		ADD A,L
     844.  00:4AAE  32 46 F1            		LD [AYREGS+AR_Noise],A
     845.  00:4AB1                      
     846.  00:4AB1  3A 1D F0            		LD A,[PT3_AddToEn]
     847.  00:4AB4  5F                  		LD E,A
     848.  00:4AB5  87                  		ADD A,A
     849.  00:4AB6  9F                  		SBC A,A
     850.  00:4AB7  57                  		LD D,A
     851.  00:4AB8  2A 4E F1            		LD HL,[EnvBase]
     852.  00:4ABB  19                  		ADD HL,DE
     853.  00:4ABC  ED 5B 7B F0         		LD DE,[CurESld]
     854.  00:4AC0  19                  		ADD HL,DE
     855.  00:4AC1  22 4B F1            		LD [AYREGS+AR_Env],HL
     856.  00:4AC4                      
     857.  00:4AC4  AF                  		XOR A
     858.  00:4AC5  21 7D F0            		LD HL,CurEDel
     859.  00:4AC8  B6                  		OR [HL]
     860.  00:4AC9  C8                  		RET Z
     861.  00:4ACA  35                  		DEC [HL]
     862.  00:4ACB  C0                  		RET NZ
     863.  00:4ACC  3A 1E F0            		LD A,[PT3_Env_Del]
     864.  00:4ACF  77                  		LD [HL],A
     865.  00:4AD0  2A 1F F0            		LD HL,[PT3_ESldAdd]
     866.  00:4AD3  19                  		ADD HL,DE
     867.  00:4AD4  22 7B F0            		LD [CurESld],HL
     868.  00:4AD7  C9                  		RET
     869.  00:4AD8                      
     870.  00:4AD8  AF                  PT3_ROUT:	XOR A
     871.  00:4AD9                      	
     872.  00:4AD9                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873.  00:4AD9  21 47 F1            		LD	HL,AYREGS+AR_Mixer
     874.  00:4ADC  CB FE               		set	7,[hl]
     875.  00:4ADE  CB B6               		res	6,[hl]
     876.  00:4AE0                      
     877.  00:4AE0  0E A0               		LD C,$A0
     878.  00:4AE2  21 40 F1            		LD HL,AYREGS
     879.  00:4AE5  ED 79               .LOUT:		OUT [C],A
     880.  00:4AE7  0C                  		INC C
     881.  00:4AE8  ED A3               		OUTI 
     882.  00:4AEA  0D                  		DEC C
     883.  00:4AEB  3C                  		INC A
     884.  00:4AEC  FE 0D               		CP 13
     885.  00:4AEE  20 F5               		JR NZ,.LOUT
     886.  00:4AF0  ED 79               		OUT [C],A
     887.  00:4AF2  7E                  		LD A,[HL]
     888.  00:4AF3  A7                  		AND A
     889.  00:4AF4  F8                  		RET M
     890.  00:4AF5  0C                  		INC C
     891.  00:4AF6  ED 79               		OUT [C],A
     892.  00:4AF8  C9                  		RET
     893.  00:4AF9                      
     894.  00:4AF9  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895.  00:4AFA  2A                  		db TCNEW_0-T_
     896.  00:4AFB  65                  		db (T_OLD_0-T1_)*2+1
     897.  00:4AFC  00                  		db TCOLD_0-T_
     898.  00:4AFD  01                  		db (T_NEW_1-T1_)*2+1
     899.  00:4AFE  0C                  		db TCNEW_1-T_
     900.  00:4AFF  01                  		db (T_OLD_1-T1_)*2+1
     901.  00:4B00  0C                  		db TCOLD_1-T_
     902.  00:4B01  94                  		db (T_NEW_2-T1_)*2
     903.  00:4B02  35                  		db TCNEW_2-T_
     904.  00:4B03  30                  		db (T_OLD_2-T1_)*2
     905.  00:4B04  0E                  		db TCOLD_2-T_
     906.  00:4B05  60                  		db (T_NEW_3-T1_)*2
     907.  00:4B06  20                  		db TCNEW_3-T_
     908.  00:4B07  60                  		db (T_OLD_3-T1_)*2
     909.  00:4B08  21                  		db TCOLD_3-T_
     910.  00:4B09                      
     911.  00:4B09                      T_:
     912.  00:4B09                      
     913.  00:4B09                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913.  00:4B09  01 05 09 0B 0D 0F 13 15 
     914.  00:4B11  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915.  00:4B15                      TCNEW_1:	
     916.  00:4B15  5D 00               TCOLD_1:	db $5C+1,0
     917.  00:4B17                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917.  00:4B17  31 37 4D 53 5F 71 82 8C 9C 
     918.  00:4B20                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918.  00:4B20  9E A0 A6 A8 AA AC AE AE 00 
     919.  00:4B29  57                  TCNEW_3:	db $56+1
     920.  00:4B2A                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920.  00:4B2A  1F 23 25 29 2D 2F 33 BF 00 
     921.  00:4B33                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921.  00:4B33  1D 21 23 27 2B 2D 31 55 
     922.  00:4B3B  BD BF 00            		db $BC+1,$BE+1,0
     923.  00:4B3E                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923.  00:4B3E  1B 21 25 29 2B 3B 4D 5F 
     924.  00:4B46  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925.  00:4B49                      
     926.  00:4B49  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927.  00:4B4D                      
     928.  00:4B4D                      T_PACK:		; First 12 values of tone tables (packed)
     929.  00:4B4D  0D                  		db ($06EC*2)/256
     930.  00:4B4E  D8                  		db #d8
     931.  00:4B4F  69                  		db $0755-$06EC
     932.  00:4B50  70                  		db $07C5-$0755
     933.  00:4B51  76                  		db $083B-$07C5
     934.  00:4B52  7D                  		db $08B8-$083B
     935.  00:4B53  85                  		db $093D-$08B8
     936.  00:4B54  8D                  		db $09CA-$093D
     937.  00:4B55  95                  		db $0A5F-$09CA
     938.  00:4B56  9D                  		db $0AFC-$0A5F
     939.  00:4B57  A8                  		db $0BA4-$0AFC
     940.  00:4B58  B1                  		db $0C55-$0BA4
     941.  00:4B59  BB                  		db $0D10-$0C55
     942.  00:4B5A  0C                  		db ($066D*2)/256
     943.  00:4B5B  DA                  		db #da
     944.  00:4B5C  62                  		db $06CF-$066D
     945.  00:4B5D  68                  		db $0737-$06CF
     946.  00:4B5E  6D                  		db $07A4-$0737
     947.  00:4B5F  75                  		db $0819-$07A4
     948.  00:4B60  7B                  		db $0894-$0819
     949.  00:4B61  83                  		db $0917-$0894
     950.  00:4B62  8A                  		db $09A1-$0917
     951.  00:4B63  92                  		db $0A33-$09A1
     952.  00:4B64  9C                  		db $0ACF-$0A33
     953.  00:4B65  A4                  		db $0B73-$0ACF
     954.  00:4B66  AF                  		db $0C22-$0B73
     955.  00:4B67  B8                  		db $0CDA-$0C22
     956.  00:4B68  0E                  		db ($0704*2)/256
     957.  00:4B69  08                  		db #08
     958.  00:4B6A  6A                  		db $076E-$0704
     959.  00:4B6B  72                  		db $07E0-$076E
     960.  00:4B6C  78                  		db $0858-$07E0
     961.  00:4B6D  7E                  		db $08D6-$0858
     962.  00:4B6E  86                  		db $095C-$08D6
     963.  00:4B6F  90                  		db $09EC-$095C
     964.  00:4B70  96                  		db $0A82-$09EC
     965.  00:4B71  A0                  		db $0B22-$0A82
     966.  00:4B72  AA                  		db $0BCC-$0B22
     967.  00:4B73  B4                  		db $0C80-$0BCC
     968.  00:4B74  BE                  		db $0D3E-$0C80
     969.  00:4B75  0F                  		db ($07E0*2)/256
     970.  00:4B76  C0                  		db #c0
     971.  00:4B77  78                  		db $0858-$07E0
     972.  00:4B78  88                  		db $08E0-$0858
     973.  00:4B79  80                  		db $0960-$08E0
     974.  00:4B7A  90                  		db $09F0-$0960
     975.  00:4B7B  98                  		db $0A88-$09F0
     976.  00:4B7C  A0                  		db $0B28-$0A88
     977.  00:4B7D  B0                  		db $0BD8-$0B28
     978.  00:4B7E  A8                  		db $0C80-$0BD8
     979.  00:4B7F  E0                  		db $0D60-$0C80
     980.  00:4B80  B0                  		db $0E10-$0D60
     981.  00:4B81  E8                  		db $0EF8-$0E10
     982.  00:4B82                      
     983.  00:4B82                      
     984.  00:4B82                      
     985.  00:4B82                      
     986.  00:4B82                      
     987.  00:4B82                      
     988.  00:4B82                      
     989.  00:4B82                      
     990.  00:4B82                      
     991.  00:4B82                      
     992.  00:4B82                      
     993.  00:4B82                      
     994.  00:4B82                      
     995.  00:4B82                      	;Variables del replayer... las coloco desde aqui.
     996.  00:4B82                      	;mirar que hace la directiva MAP del SJASM
     997.  00:4B82  (F000)              	map		#f000
     998.  00:4B82                      
     999.  00:4B82                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
    1000.  00:4B82  (00:F000)           PT3_SETUP:		#1	;set bit0 to 1, if you want to play without looping
    1001.  00:4B82                      					;bit7 is set each time, when loop point is passed
    1002.  00:4B82  (00:F001)           PT3_MODADDR:	#2
    1003.  00:4B82  (00:F003)           PT3_CrPsPtr:		#2
    1004.  00:4B82  (00:F005)           PT3_SAMPTRS:		#2
    1005.  00:4B82  (00:F007)           PT3_OrnPtrs:		#2
    1006.  00:4B82  (00:F009)           PT3_PDSP:		#2
    1007.  00:4B82  (00:F00B)           PT3_CSP:		#2 
    1008.  00:4B82  (00:F00D)           PT3_PSP:		#2
    1009.  00:4B82  (00:F00F)           PT3_PrNote:		#1
    1010.  00:4B82  (00:F010)           PT3_PrSlide:		#2
    1011.  00:4B82  (00:F012)           PT3_AdInPtA:		#2
    1012.  00:4B82  (00:F014)           PT3_AdInPtB:		#2
    1013.  00:4B82  (00:F016)           PT3_AdInPtC:		#2
    1014.  00:4B82  (00:F018)           PT3_LPosPtr:		#2
    1015.  00:4B82  (00:F01A)           PT3_PatsPtr:		#2
    1016.  00:4B82  (00:F01C)           PT3_Delay:		#1
    1017.  00:4B82  (00:F01D)           PT3_AddToEn:		#1
    1018.  00:4B82  (00:F01E)           PT3_Env_Del:		#1
    1019.  00:4B82  (00:F01F)           PT3_ESldAdd:		#2
    1020.  00:4B82  (00:F021)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
    1021.  00:4B82                      
    1022.  00:4B82  (00:F023)           VARS:			#0
    1023.  00:4B82                      
    1024.  00:4B82  (00:F023)           ChanA:			#29			;CHNPRM_Size
    1025.  00:4B82  (00:F040)           ChanB:			#29			;CHNPRM_Size
    1026.  00:4B82  (00:F05D)           ChanC:			#29			;CHNPRM_Size
    1027.  00:4B82                      
    1028.  00:4B82                      ;GlobalVars
    1029.  00:4B82  (00:F07A)           DelyCnt:		#1
    1030.  00:4B82  (00:F07B)           CurESld:		#2
    1031.  00:4B82  (00:F07D)           CurEDel:		#1
    1032.  00:4B82  (00:F07E)           Ns_Base_AddToNs:	#0
    1033.  00:4B82  (00:F07E)           Ns_Base:		#1
    1034.  00:4B82  (00:F07F)           AddToNs:		#1
    1035.  00:4B82                      
    1036.  00:4B82  (00:F080)           NT_:			#192	; Puntero a/tabla de frecuencias
    1037.  00:4B82                      
    1038.  00:4B82  (00:F140)           AYREGS:			#0
    1039.  00:4B82  (00:F140)           VT_:			#14
    1040.  00:4B82  (00:F14E)           EnvBase:		#2
    1041.  00:4B82  (00:F150)           VAR0END:		#0
    1042.  00:4B82                      
    1043.  00:4B82  (00:F150)           T1_:			#0		
    1044.  00:4B82  (00:F150)           T_NEW_1:		#0
    1045.  00:4B82  (00:F150)           T_OLD_1:		#24
    1046.  00:4B82  (00:F168)           T_OLD_2:		#24
    1047.  00:4B82  (00:F180)           T_NEW_3:		#0
    1048.  00:4B82  (00:F180)           T_OLD_3:		#2
    1049.  00:4B82  (00:F182)           T_OLD_0:		#0
    1050.  00:4B82  (00:F182)           T_NEW_0:		#24
    1051.  00:4B82  (00:F19A)           T_NEW_2:		#166
    1052.  00:4B82                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
      30   00:4B82                      START
      31   00:4B82                      	; CODE
      32   00:4B82                      
      33   00:4B82                      	;LD A,8
      34   00:4B82                      	;CALL CHGMOD    	
      35   00:4B82  CD 73 41                CALL SETPAGES32K
      36   00:4B85                      ;	CALL opening_screen
      37   00:4B85  3E 01               	LD A,1
      38   00:4B87  32 00 70            	LD (_bank2),A
      39   00:4B8A                      ;	CALL CHGET
      40   00:4B8A                      	; Empieza el juego    
      41   00:4B8A  CD E0 40            	call ClearVram_MSX2		
      42   00:4B8D  CD 86 41            	call SET_SCREEN5_MODE    
      43   00:4B90  CD D4 40                call Set212Lines
      44   00:4B93                              
      45   00:4B93  CD A5 4B                call INIT_CHARS_VARS
      46   00:4B96  3E FF                   LD A, -MOV_SPEED_GHOST
      47   00:4B98  32 0C C0            	LD (CHAR_SPEED_X_GHOST), A
      48   00:4B9B  21 00 62                LD HL, PaletteData
      49   00:4B9E  CD 05 42                CALL SetPalette
      50   00:4BA1  CD 2B 4C                CALL STAGE1
      51   00:4BA4                          ;call MAIN_LOOP
      52   00:4BA4                          ;CALL CHGET
      53   00:4BA4  C9                  	ret
      54   00:4BA5                      
      55   00:4BA5                      
      56   00:4BA5                      INIT_CHARS_VARS:    
      57   00:4BA5  DD 21 19 C0             ld ix, SPRITE_ATTRS           
      58   00:4BA9                          
      59   00:4BA9  DD 36 00 69             ld (ix), 69h        ; Sprite 1 - $AF abajo - Y
      60   00:4BAD  DD 36 01 7F             ld (ix+1), 7Fh      ; X        
      61   00:4BB1  DD 36 02 00             ld (ix+2), 00h      ; Pattern
      62   00:4BB5                      
      63   00:4BB5  DD 36 04 69             ld (ix+4), 69h     ; Sprite 2
      64   00:4BB9  DD 36 05 7F             ld (ix+5), 7Fh
      65   00:4BBD  DD 36 06 04             ld (ix+6), 04h        
      66   00:4BC1                      
      67   00:4BC1  DD 36 08 69             ld (ix+8), 69h     ; Sprite 3
      68   00:4BC5  DD 36 09 7F             ld (ix+9), 7Fh
      69   00:4BC9  DD 36 0A 08             ld (ix+10), 08h        
      70   00:4BCD                      
      71   00:4BCD  DD 36 10 0F             ld (ix+SPR_GHOST_STG1), $0f      ; Sprite 1 - Ghost - mask0
      72   00:4BD1  DD 36 11 B9             ld (ix+SPR_GHOST_STG1+1), $B9
      73   00:4BD5  DD 36 12 1C             ld (ix+SPR_GHOST_STG1+2), SPR_GHOST_STG1_PTRN_L1
      74   00:4BD9                          
      75   00:4BD9  DD 36 14 0F             ld (ix+SPR_GHOST_STG1+4), $0f      ; Sprite 1 - Ghost - mask0
      76   00:4BDD  DD 36 15 B9             ld (ix+SPR_GHOST_STG1+5), $B9
      77   00:4BE1  DD 36 16 20             ld (ix+SPR_GHOST_STG1+6), SPR_GHOST_STG1_PTRN_L1+4
      78   00:4BE5                          
      79   00:4BE5  AF                      XOR A
      80   00:4BE6  32 09 C0                LD (JIFFY_TEMP),A
      81   00:4BE9  32 0A C0                LD (CHAR_SPEED_X),A
      82   00:4BEC  32 0B C0                LD (CHAR_SPEED_Y),A
      83   00:4BEF  32 0C C0                LD (CHAR_SPEED_X_GHOST),A
      84   00:4BF2  32 11 C0                LD (CHAR_DIR_GHOST1),A      ; $00 - LEFT, $FF - RIGHT
      85   00:4BF5  32 14 C0                LD (CHAR_NEW_DIR_MAIN),A    
      86   00:4BF8  32 15 C0                LD (CHAR_MAIN_SHOOT),A      ; Indica si el personaje está disparando - $FF
      87   00:4BFB  32 17 C0                LD (CHAR_DISTANCE_SHOOT),A
      88   00:4BFE  32 18 C0                LD (CHAR_SPEED_SHOOT),A
      89   00:4C01  32 0E C0                LD (CHAR_GHOST_DEAD),A
      90   00:4C04  32 16 C0                LD (CHAR_MIN_STEP), A
      91   00:4C07  32 A0 C0                LD (SPRITE_COLOR_REPLACE2), A
      92   00:4C0A  32 02 C0                LD (SHOWING_GUS_DIALOG), A
      93   00:4C0D  32 01 C0                LD (SHOWING_JOHN_DIALOG), A
      94   00:4C10  32 00 C0                LD (SHOWING_MIKE_DIALOG), A
      95   00:4C13                      
      96   00:4C13                         ; LD A,$FF
      97   00:4C13  32 08 C0                LD (OLD_KEY_PRESSED), A
      98   00:4C16  3E 01                   LD A,$01
      99   00:4C18  32 13 C0                LD (CHAR_DIR_MAIN),A        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
     100   00:4C1B                      
     101   00:4C1B  21 AC 50                ld hl, SPRITE_P1_DOWN
     102   00:4C1E  22 9C C0                ld (SPRITE_PTR_REPLACE), HL    
     103   00:4C21  21 AC 56                ld hl, SPRITE_COLOR_P1_DOWN
     104   00:4C24  22 9E C0                ld (SPRITE_COLOR_REPLACE), HL
     105   00:4C27  22 A0 C0                LD (SPRITE_COLOR_REPLACE2), HL
     106   00:4C2A                      
     107   00:4C2A                          
     108   00:4C2A  C9                      ret
     109   00:4C2B                      
     110   00:4C2B                      STAGE1:
     111   00:4C2B  CD 41 00                CALL DISSCR
     112   00:4C2E  21 00 80                LD HL, CEMENTER1
     113   00:4C31  22 A4 C0                LD (BITMAP), HL
     114   00:4C34  06 07                   LD B, :CEMENTER1
     115   00:4C36  CD 1E 41                call load_screen
     116   00:4C39                          
     117   00:4C39  CD A8 41                call DUMP_SPR_ALL
     118   00:4C3C  CD E8 41                CALL DUMP_SPR_P1
     119   00:4C3F  21 6C 57                LD HL, mapa1
     120   00:4C42  22 A2 C0                LD (MAPA), HL
     121   00:4C45                          
     122   00:4C45  CD 44 00                CALL ENASCR    
     123   00:4C48                      
     124   00:4C48                      MAIN_LOOP:
     125   00:4C48                          ;halt ; sincroniza el teclado y pantalla con el procesador (que va muy rápido)    
     126   00:4C48  DD 7E 00                LD A, (ix)  ; Cargamos la Y
     127   00:4C4B  FE 00                   CP $00
     128   00:4C4D  CA 0E 4E                JP Z, STAGE2
     129   00:4C50  CD CD 41                call DUMP_SPR_ATTS    
     130   00:4C53                      
     131   00:4C53                      .check_tombs:
     132   00:4C53  DD 7E 01                LD A, (ix +1)   ; Cargamos la X para mirar si hay colisión con la tumba
     133   00:4C56  FE C8                   CP MIKE_TOMB_STG1_X
     134   00:4C58  20 15                   JR NZ, .check_john_tomb
     135   00:4C5A  3A 00 C0                LD A, (SHOWING_MIKE_DIALOG)
     136   00:4C5D  FE 01                   CP 1
     137   00:4C5F  28 75                   JR Z, .animate_ghost
     138   00:4C61  FD 21 10 40             LD IY, mike_tomb_strings
     139   00:4C65  CD AC 44                CALL print_strings_dialog_box
     140   00:4C68  3E 01                   LD A,1
     141   00:4C6A  32 00 C0                LD (SHOWING_MIKE_DIALOG), A
     142   00:4C6D  18 67                   JR .animate_ghost
     143   00:4C6F                      
     144   00:4C6F                      .check_john_tomb:
     145   00:4C6F  FE 29                   CP JOHN_TOMB_STG1_X
     146   00:4C71  20 15                   jr nz, .check_gus_tomb
     147   00:4C73  3A 01 C0                LD A, (SHOWING_JOHN_DIALOG)
     148   00:4C76  FE 01                   CP 1
     149   00:4C78  28 5C                   JR Z, .animate_ghost
     150   00:4C7A  FD 21 38 40             LD IY, john_tomb_strings
     151   00:4C7E  CD AC 44                CALL print_strings_dialog_box
     152   00:4C81  3E 01                   LD A,1
     153   00:4C83  32 01 C0                LD (SHOWING_JOHN_DIALOG), A
     154   00:4C86  18 4E                   JR .animate_ghost
     155   00:4C88                      
     156   00:4C88                      .check_gus_tomb:
     157   00:4C88  FE 49                   CP GUS_TOMB_STG1_X
     158   00:4C8A  20 1C                   jr nz, .check_dialog_box
     159   00:4C8C  3A 02 C0                LD A, (SHOWING_GUS_DIALOG)
     160   00:4C8F  FE 01                   CP 1
     161   00:4C91  28 43                   JR Z, .animate_ghost
     162   00:4C93  DD 7E 00                LD A, (ix)
     163   00:4C96  FE 78                   CP GUS_TOMB_STG1_Y
     164   00:4C98  38 3C                   jr c, .animate_ghost
     165   00:4C9A  FD 21 5F 40             LD IY, gus_tomb_strings
     166   00:4C9E  CD AC 44                CALL print_strings_dialog_box
     167   00:4CA1  3E 01                   LD A,1
     168   00:4CA3  32 02 C0                LD (SHOWING_GUS_DIALOG), A
     169   00:4CA6  18 2E                   JR .animate_ghost
     170   00:4CA8                      
     171   00:4CA8                      .check_dialog_box
     172   00:4CA8  3A 00 C0                LD A, (SHOWING_MIKE_DIALOG)
     173   00:4CAB  FE 01                   CP 1
     174   00:4CAD  20 09                   JR nz, .check_gus_dialog
     175   00:4CAF  CD 44 45                CALL CLEAR_DIALOG_BOX
     176   00:4CB2  AF                      XOR A
     177   00:4CB3  32 00 C0                LD (SHOWING_MIKE_DIALOG), A
     178   00:4CB6  18 1E                   JR .animate_ghost
     179   00:4CB8                      
     180   00:4CB8                      .check_gus_dialog
     181   00:4CB8  3A 02 C0                LD A, (SHOWING_GUS_DIALOG)
     182   00:4CBB  FE 01                   CP 1
     183   00:4CBD  20 09                   JR nz, .check_john_dialog
     184   00:4CBF  CD 44 45                CALL CLEAR_DIALOG_BOX
     185   00:4CC2  AF                      XOR A
     186   00:4CC3  32 02 C0                LD (SHOWING_GUS_DIALOG), A
     187   00:4CC6  18 0E                   JR .animate_ghost
     188   00:4CC8                      
     189   00:4CC8                      .check_john_dialog
     190   00:4CC8  3A 01 C0                LD A, (SHOWING_JOHN_DIALOG)
     191   00:4CCB  FE 01                   CP 1
     192   00:4CCD  20 07                   JR nz, .animate_ghost
     193   00:4CCF  CD 44 45                CALL CLEAR_DIALOG_BOX
     194   00:4CD2  AF                      XOR A
     195   00:4CD3  32 01 C0                LD (SHOWING_JOHN_DIALOG), A
     196   00:4CD6                      
     197   00:4CD6                      .animate_ghost    
     198   00:4CD6  3A 0E C0                LD A,(CHAR_GHOST_DEAD)
     199   00:4CD9  FE 01                   CP $01
     200   00:4CDB  CA 4F 4D                JP Z,.continue
     201   00:4CDE  DD 7E 11                LD A, (ix+SPR_GHOST_STG1+1)          ;cargamos la X del Fantasma
     202   00:4CE1  2A 0C C0            	LD HL, (CHAR_SPEED_X_GHOST)
     203   00:4CE4  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     204   00:4CE5                          
     205   00:4CE5  DD 77 11            	LD (ix+SPR_GHOST_STG1+1), A
     206   00:4CE8  DD 77 15                LD (ix+SPR_GHOST_STG1+5), A
     207   00:4CEB  FE 16                   CP $16
     208   00:4CED  CA F8 4C                JP Z,.CHANGE_DIR_RIGHT
     209   00:4CF0  FE B9                   CP $B9
     210   00:4CF2  CA 05 4D                JP Z,.CHANGE_DIR_LEFT
     211   00:4CF5                          		
     212   00:4CF5  C3 0E 4D                JP .check_pattern
     213   00:4CF8                      
     214   00:4CF8                      .CHANGE_DIR_RIGHT:
     215   00:4CF8  3E 01                   LD A, MOV_SPEED_GHOST
     216   00:4CFA  32 0C C0            	LD (CHAR_SPEED_X_GHOST), A
     217   00:4CFD  3E FF                   LD A,$FF
     218   00:4CFF  32 11 C0                LD (CHAR_DIR_GHOST1),A
     219   00:4D02  C3 0E 4D                JP .check_pattern
     220   00:4D05                      
     221   00:4D05                      .CHANGE_DIR_LEFT:
     222   00:4D05  3E FF                   LD A, -MOV_SPEED_GHOST
     223   00:4D07  32 0C C0            	LD (CHAR_SPEED_X_GHOST), A
     224   00:4D0A  AF                      XOR A   ; Pone A a 0
     225   00:4D0B  32 11 C0                LD (CHAR_DIR_GHOST1),A
     226   00:4D0E                      
     227   00:4D0E                      .check_pattern:
     228   00:4D0E  3A 11 C0                LD A,(CHAR_DIR_GHOST1)
     229   00:4D11  FE FF                   CP $FF
     230   00:4D13  CA 34 4D                JP Z,.check_pattern_RIGHT
     231   00:4D16  DD 7E 12                LD A, (ix+SPR_GHOST_STG1+2)       ; Cargamos el patrón y lo cambiamos
     232   00:4D19  FE 1C                   CP SPR_GHOST_STG1_PTRN_L1
     233   00:4D1B  CA 29 4D                jp z,.change_pattern_L
     234   00:4D1E  DD 36 12 1C             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_L1
     235   00:4D22  DD 36 16 20             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_L1+4
     236   00:4D26  C3 4F 4D                jp .continue
     237   00:4D29                      .change_pattern_L:
     238   00:4D29  DD 36 12 24             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_L2
     239   00:4D2D  DD 36 16 28             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_L2+4
     240   00:4D31  C3 4F 4D                jp .continue
     241   00:4D34                      
     242   00:4D34                      .check_pattern_RIGHT
     243   00:4D34  DD 7E 12                LD A, (ix+SPR_GHOST_STG1+2)       ; Cargamos el patrón y lo cambiamos
     244   00:4D37  FE 2C                   CP SPR_GHOST_STG1_PTRN_R1
     245   00:4D39  CA 47 4D                jp z,.change_pattern_R
     246   00:4D3C  DD 36 12 2C             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_R1
     247   00:4D40  DD 36 16 30             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_R1+4
     248   00:4D44  C3 4F 4D                jp .continue
     249   00:4D47                      .change_pattern_R:
     250   00:4D47  DD 36 12 34             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_R2
     251   00:4D4B  DD 36 16 38             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_R2+4
     252   00:4D4F                      
     253   00:4D4F                      .continue:    
     254   00:4D4F  CD 41 44                CALL MOVE_SHOOT
     255   00:4D52                      .CHECK_GHOST:
     256   00:4D52                          ; Comprobamos si hay colision con el fantasma
     257   00:4D52  3A 0E C0                LD A,(CHAR_GHOST_DEAD)  ; si está muerto,no lo miramos
     258   00:4D55  FE 01                   CP $01
     259   00:4D57  CA 7B 4D                JP Z,.check_KB
     260   00:4D5A                      
     261   00:4D5A  DD 46 0C                LD B,(ix+SPR_SHOOT_P1)         ; Y del disparo
     262   00:4D5D  DD 4E 0D                LD C,(ix+SPR_SHOOT_P1+1)         ; X del disparo
     263   00:4D60  DD 56 10                LD D,(ix+SPR_GHOST_STG1)         ; Y del fantasma 
     264   00:4D63  DD 5E 11                LD E,(ix+SPR_GHOST_STG1+1)         ; X del fantasma
     265   00:4D66  CD 87 40                call check_spr_collision
     266   00:4D69  FE 01                   CP 1
     267   00:4D6B  C2 7B 4D                JP NZ,.check_KB
     268   00:4D6E                      
     269   00:4D6E                      .KILL_GHOST:
     270   00:4D6E  3E 01                   LD A,1
     271   00:4D70  32 0E C0                LD (CHAR_GHOST_DEAD),A
     272   00:4D73  DD 36 10 D9             LD (ix+SPR_GHOST_STG1),217    
     273   00:4D77  DD 36 14 D9             LD (ix+SPR_GHOST_STG1+4),217    
     274   00:4D7B                      
     275   00:4D7B                      .check_KB:
     276   00:4D7B  76                      halt    
     277   00:4D7C                      	
     278   00:4D7C  3E 08                   ld a, 8
     279   00:4D7E  CD 41 01            	call SNSMAT   
     280   00:4D81                          
     281   00:4D81  4F                      LD C,A    
     282   00:4D82                          
     283   00:4D82  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es RIGHT?
     284   00:4D84  CC 89 42                call z, move_right
     285   00:4D87                          
     286   00:4D87  CB 61                   BIT KB_LEFT, C			; La tecla presionada es LEFT?
     287   00:4D89  CC E8 42                call z, move_left
     288   00:4D8C                      
     289   00:4D8C  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     290   00:4D8E  CC 14 42                call z, move_up
     291   00:4D91                      
     292   00:4D91  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     293   00:4D93  CC 4E 42                call z, move_down
     294   00:4D96                      
     295   00:4D96                      no_arrows:
     296   00:4D96  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     297   00:4D98  CC 9E 4D                call z,SHOOT_MAIN_CHAR
     298   00:4D9B                      
     299   00:4D9B                          ;BIT KB_DEL, C			; La tecla presionada es DEL    
     300   00:4D9B                          ;ret z
     301   00:4D9B                      
     302   00:4D9B  C3 48 4C                jp MAIN_LOOP
     303   00:4D9E                      
     304   00:4D9E                      SHOOT_MAIN_CHAR:    
     305   00:4D9E  3A 15 C0                LD A, (CHAR_MAIN_SHOOT)
     306   00:4DA1  FE 01                   CP $01                  ; Si ya está disparando esperamos a que termine
     307   00:4DA3  C8                      RET Z;,MAIN_LOOP
     308   00:4DA4  FE 02                   CP $02                  ; Si ya está disparando esperamos a que termine
     309   00:4DA6  C8                      RET Z;,MAIN_LOOP
     310   00:4DA7  FE 03                   CP $03                  ; Si ya está disparando esperamos a que termine
     311   00:4DA9  C8                      RET Z;,MAIN_LOOP
     312   00:4DAA  FE 04                   CP $04                  ; Si ya está disparando esperamos a que termine
     313   00:4DAC  C8                      RET Z;,MAIN_LOOP
     314   00:4DAD                      
     315   00:4DAD  DD 36 0E 18             ld (ix+SPR_SHOOT_P1+2), SPR_SHOOT_P1_PTRN     ; Sprite Disparo
     316   00:4DB1                      
     317   00:4DB1  DD 7E 00                LD A, (ix)          
     318   00:4DB4  DD 77 0C                ld (ix+SPR_SHOOT_P1), A       ; Asignamos la Y del personaje    
     319   00:4DB7                      
     320   00:4DB7  3A 13 C0                LD A, (CHAR_DIR_MAIN)
     321   00:4DBA  FE 03                   CP $03
     322   00:4DBC  CA D8 4D                JP Z,.SHOOT_RIGHT
     323   00:4DBF  FE 00                   CP $00
     324   00:4DC1  CA E7 4D                JP Z,.SHOOT_UP
     325   00:4DC4  FE 01                   CP $01
     326   00:4DC6  CA FA 4D                JP Z,.SHOOT_DOWN
     327   00:4DC9                          ; SHOOT LEFT
     328   00:4DC9  3E 01                   LD A,$01                ; SHOOT LEFT
     329   00:4DCB  32 15 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando izquierda
     330   00:4DCE  DD 7E 01                LD A, (ix+1)			;cargamos la X - Si no es derecha, debe ser izquierda
     331   00:4DD1  21 F4 FF            	LD HL, -12
     332   00:4DD4  85                  	ADD L
     333   00:4DD5                          
     334   00:4DD5  C3 0A 4E                JP .CONTINUE
     335   00:4DD8                      
     336   00:4DD8                      .SHOOT_RIGHT:    
     337   00:4DD8  3E 02                   LD A,$02
     338   00:4DDA  32 15 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando derecha
     339   00:4DDD                          
     340   00:4DDD  DD 7E 01                LD A, (ix+1)			;cargamos la X
     341   00:4DE0  21 0C 00            	LD HL, 12
     342   00:4DE3  85                  	ADD L
     343   00:4DE4  C3 0A 4E                JP .CONTINUE
     344   00:4DE7                      
     345   00:4DE7                      .SHOOT_UP:
     346   00:4DE7  3E 03                   LD A,$03
     347   00:4DE9  32 15 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando arriba
     348   00:4DEC                          
     349   00:4DEC                          ; Sumamos el desplazamiento a la Y
     350   00:4DEC  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)
     351   00:4DEF  D6 10                   SUB 16
     352   00:4DF1  DD 77 0C                LD (ix+SPR_SHOOT_P1), A    
     353   00:4DF4                          ;LD (ix+17), D
     354   00:4DF4  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     355   00:4DF7  C3 0A 4E                JP .CONTINUE
     356   00:4DFA                      
     357   00:4DFA                      .SHOOT_DOWN
     358   00:4DFA  3E 04               	LD A,$04
     359   00:4DFC  32 15 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando abajo
     360   00:4DFF                          
     361   00:4DFF                          ; Sumamos el desplazamiento a la Y
     362   00:4DFF  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)
     363   00:4E02  C6 10                   ADD 16
     364   00:4E04  DD 77 0C                LD (ix+SPR_SHOOT_P1), A    
     365   00:4E07                          ;LD (ix+17), D
     366   00:4E07  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     367   00:4E0A                      
     368   00:4E0A                      .CONTINUE:
     369   00:4E0A                          ;ld (ix+16), B       ; Asignamos la Y del personaje
     370   00:4E0A  DD 77 0D                ld (ix+SPR_SHOOT_P1+1), A       ; Asignamos la X del personaje + el desplazamiento        
     371   00:4E0D                          ;jp MAIN_LOOP
     372   00:4E0D  C9                      ret
     373   00:4E0E                      
     374   00:4E0E                      STAGE2:
     375   00:4E0E  CD 41 00                CALL DISSCR
     376   00:4E11  21 00 80                LD HL, CEMENTER2
     377   00:4E14  22 A4 C0                LD (BITMAP), HL
     378   00:4E17  06 0D                   LD B, :CEMENTER2
     379   00:4E19                      
     380   00:4E19  CD 1E 41                call load_screen
     381   00:4E1C  21 AC 5A                LD HL, mapa2
     382   00:4E1F  22 A2 C0                LD (MAPA), HL
     383   00:4E22                          
     384   00:4E22                          ; Ponemos el P1 por encima del marco
     385   00:4E22  DD 36 00 A1             LD (ix), 161      ; mask 0
     386   00:4E26  DD 36 04 A1             LD (ix+4), 161    ; mask 1
     387   00:4E2A  DD 36 08 A1             LD (ix+8), 161    ; mask 2
     388   00:4E2E                          
     389   00:4E2E  DD 36 10 D9             LD (ix+SPR_GHOST_STG1),217  ; ocultamos el fantasma
     390   00:4E32  DD 36 14 D9             LD (ix+SPR_GHOST_STG1+4),217  ; ocultamos el fantasma
     391   00:4E36                          
     392   00:4E36  CD A8 41                CALL DUMP_SPR_ALL
     393   00:4E39  CD E8 41                CALL DUMP_SPR_P1
     394   00:4E3C                          
     395   00:4E3C                          ; Esqueleto
     396   00:4E3C  DD 36 18 10             LD (ix+SPR_GHOST_STG2), 10h
     397   00:4E40  DD 36 19 10             LD (ix+SPR_GHOST_STG2+1), 10h
     398   00:4E44  DD 36 1A 3C             LD (ix+SPR_GHOST_STG2+2), SPR_GHOST_STG2_PTRN_L1
     399   00:4E48                      
     400   00:4E48  DD 36 1C 10             LD (ix+SPR_GHOST_STG2+4), 10h
     401   00:4E4C  DD 36 1D 10             LD (ix+SPR_GHOST_STG2+5), 10h
     402   00:4E50  DD 36 1E 40             LD (ix+SPR_GHOST_STG2+6), SPR_GHOST_STG2_PTRN_L1+4
     403   00:4E54                      
     404   00:4E54  AF                      XOR A
     405   00:4E55  32 0F C0                LD (CHAR_GHOST_DEAD_STG2), A
     406   00:4E58  32 10 C0                LD (CHAR_MIN_STEP_STG2), A
     407   00:4E5B  3E FF                   LD A, $FF
     408   00:4E5D  32 12 C0                LD (CHAR_DIR_GHOST_STG2), A
     409   00:4E60  3E 01                   LD A, MOV_SPEED_GHOST
     410   00:4E62  32 0D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     411   00:4E65                      
     412   00:4E65  CD 44 00                CALL ENASCR
     413   00:4E68                          
     414   00:4E68                      MAIN_LOOP2:
     415   00:4E68  76                      halt    
     416   00:4E69                      
     417   00:4E69  DD 7E 00                LD A, (ix)    
     418   00:4E6C  FE A2                   CP 162      ; Miramos si la Y es 160 para pasar a stg1
     419   00:4E6E  C2 98 4E                JP NZ, .no_screen_change
     420   00:4E71                          ; Ponemos el SP1 al principio de la pantalla 1
     421   00:4E71  DD 36 00 01             LD (ix), 1          ; SP1 - Y = 1
     422   00:4E75  DD 36 04 01             LD (ix+4), 1
     423   00:4E79  DD 36 08 01             LD (ix+8), 1
     424   00:4E7D                      
     425   00:4E7D  3A 0E C0                LD A, (CHAR_GHOST_DEAD)
     426   00:4E80  FE 01                   CP $01
     427   00:4E82  CA 8D 4E                JP Z, .GHOST_DEAD
     428   00:4E85  DD 36 10 0F             ld (ix+SPR_GHOST_STG1), $0F      ; Sprite 1 - Ghost
     429   00:4E89  DD 36 14 0F             ld (ix+SPR_GHOST_STG1+4), $0F      ; Sprite 1 - Ghost
     430   00:4E8D                      .GHOST_DEAD:
     431   00:4E8D  DD 36 18 D9             LD (ix+SPR_GHOST_STG2),217  ; ocultamos el esqueleto
     432   00:4E91  DD 36 1C D9             LD (ix+SPR_GHOST_STG2+4),217  ; ocultamos el esqueleto
     433   00:4E95  CD 2B 4C                CALL STAGE1
     434   00:4E98                      
     435   00:4E98                      .no_screen_change:
     436   00:4E98                      
     437   00:4E98  CD CD 41                call DUMP_SPR_ATTS    
     438   00:4E9B                          ; Movemos el esqueleto
     439   00:4E9B  3A 0F C0                LD A,(CHAR_GHOST_DEAD_STG2)
     440   00:4E9E  FE 01                   CP $01
     441   00:4EA0  CA 25 4F                JP Z,.continue
     442   00:4EA3  DD 7E 19                LD A, (ix+SPR_GHOST_STG2+1)          ;cargamos la X del Esqueleto
     443   00:4EA6  2A 0D C0            	LD HL, (CHAR_SPEED_X_GHOST_STG2)
     444   00:4EA9  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     445   00:4EAA                          
     446   00:4EAA  DD 77 19            	LD (ix+SPR_GHOST_STG2+1), A	
     447   00:4EAD  DD 77 1D                LD (ix+SPR_GHOST_STG2+5), A
     448   00:4EB0  FE 16                   CP $16
     449   00:4EB2  CA CA 4E                JP Z,.CHANGE_DIR_RIGHT
     450   00:4EB5  FE B9                   CP $B9
     451   00:4EB7  CA D7 4E                JP Z,.CHANGE_DIR_LEFT
     452   00:4EBA                      
     453   00:4EBA  3A 10 C0                LD A, (CHAR_MIN_STEP_STG2)		
     454   00:4EBD  FE 06                   CP MAX_CHAR_STEPS_STG2
     455   00:4EBF  CA E0 4E                JP Z,.check_pattern
     456   00:4EC2  C6 01                   ADD 1
     457   00:4EC4  32 10 C0                LD (CHAR_MIN_STEP_STG2), A
     458   00:4EC7  C3 25 4F                JP .continue
     459   00:4ECA                      
     460   00:4ECA                      .CHANGE_DIR_RIGHT:
     461   00:4ECA  3E 01                   LD A, MOV_SPEED_GHOST
     462   00:4ECC  32 0D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     463   00:4ECF  3E FF                   LD A,$FF
     464   00:4ED1  32 12 C0                LD (CHAR_DIR_GHOST_STG2),A
     465   00:4ED4  C3 E0 4E                JP .check_pattern
     466   00:4ED7                      
     467   00:4ED7                      .CHANGE_DIR_LEFT:
     468   00:4ED7  3E FF                   LD A, -MOV_SPEED_GHOST
     469   00:4ED9  32 0D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     470   00:4EDC  AF                      XOR A   ; Pone A a 0
     471   00:4EDD  32 12 C0                LD (CHAR_DIR_GHOST_STG2),A
     472   00:4EE0                      
     473   00:4EE0                      .check_pattern:
     474   00:4EE0  AF                      XOR A
     475   00:4EE1  32 10 C0                LD (CHAR_MIN_STEP_STG2), A
     476   00:4EE4  3A 12 C0                LD A,(CHAR_DIR_GHOST_STG2)
     477   00:4EE7  FE FF                   CP $FF
     478   00:4EE9  CA 0A 4F                JP Z,.check_pattern_RIGHT
     479   00:4EEC  DD 7E 1A                LD A, (ix+SPR_GHOST_STG2+2)       ; Cargamos el patrón y lo cambiamos
     480   00:4EEF  FE 3C                   CP SPR_GHOST_STG2_PTRN_L1
     481   00:4EF1  CA FF 4E                jp z,.change_pattern_L
     482   00:4EF4  DD 36 1A 3C             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_L1
     483   00:4EF8  DD 36 1E 40             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_L1+4
     484   00:4EFC  C3 25 4F                jp .continue
     485   00:4EFF                      .change_pattern_L:
     486   00:4EFF  DD 36 1A 44             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_L2
     487   00:4F03  DD 36 1E 48             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_L2+4
     488   00:4F07  C3 25 4F                jp .continue
     489   00:4F0A                      
     490   00:4F0A                      .check_pattern_RIGHT
     491   00:4F0A  DD 7E 1A                LD A, (ix+SPR_GHOST_STG2+2)       ; Cargamos el patrón y lo cambiamos
     492   00:4F0D  FE 4C                   CP SPR_GHOST_STG2_PTRN_R1
     493   00:4F0F  CA 1D 4F                jp z,.change_pattern_R
     494   00:4F12  DD 36 1A 4C             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_R1
     495   00:4F16  DD 36 1E 50             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_R1+4
     496   00:4F1A  C3 25 4F                jp .continue
     497   00:4F1D                      .change_pattern_R:
     498   00:4F1D  DD 36 1A 54             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_R2
     499   00:4F21  DD 36 1E 58             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_R2+4
     500   00:4F25                      
     501   00:4F25                      .continue:
     502   00:4F25  CD 41 44                CALL MOVE_SHOOT    
     503   00:4F28                      
     504   00:4F28  3E 08                   ld a, 8
     505   00:4F2A  CD 41 01            	call SNSMAT   
     506   00:4F2D  4F                      LD C,A    
     507   00:4F2E                              
     508   00:4F2E  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es RIGHT?
     509   00:4F30  CC 89 42                call z, move_right
     510   00:4F33                          
     511   00:4F33  CB 61                   BIT KB_LEFT, C			; La tecla presionada es LEFT?
     512   00:4F35  CC E8 42                call z, move_left
     513   00:4F38                      
     514   00:4F38  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     515   00:4F3A  CC 14 42                call z, move_up
     516   00:4F3D                      
     517   00:4F3D  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     518   00:4F3F  CC 4E 42                call z, move_down
     519   00:4F42                      
     520   00:4F42  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     521   00:4F44  CC 9E 4D                call z,SHOOT_MAIN_CHAR
     522   00:4F47                      
     523   00:4F47  CB 59                   BIT KB_DEL, C			; La tecla presionada es DEL    
     524   00:4F49  C8                      ret z
     525   00:4F4A                      
     526   00:4F4A  C3 68 4E                jp MAIN_LOOP2
     527   00:4F4D                      
     528   00:4F4D                      
     529   00:4F4D                      SONG:
     530   00:4F4D  (009F)              	incbin "musica_sin_cabacera.pt3"
     531   00:4FEC                          ;incbin "sfx\test.pt3"
     532   00:4FEC                      include "include\BTH_data.asm"
       1.  00:4FEC                      SPRITE_P1_UP:
       2.  00:4FEC                          ; UP 1        
       3.  00:4FEC                          ; mask 0
       4.  00:4FEC                          DB $07,$0F,$05,$1F,$1F,$3F,$3F,$7F
       4.  00:4FEC  07 0F 05 1F 1F 3F 3F 7F 
       5.  00:4FF4                          DB $00,$4F,$70,$38,$0C,$0E,$07,$04
       5.  00:4FF4  00 4F 70 38 0C 0E 07 04 
       6.  00:4FFC                          DB $E0,$F0,$A0,$F8,$F8,$F8,$FC,$FE
       6.  00:4FFC  E0 F0 A0 F8 F8 F8 FC FE 
       7.  00:5004                          DB $06,$F2,$1E,$3C,$30,$70,$C0,$00
       7.  00:5004  06 F2 1E 3C 30 70 C0 00 
       8.  00:500C                          ; mask 1
       9.  00:500C                          DB $00,$00,$18,$00,$1F,$00,$00,$00
       9.  00:500C  00 00 18 00 1F 00 00 00 
      10.  00:5014                          DB $7F,$50,$4F,$3F,$0F,$0F,$07,$02
      10.  00:5014  7F 50 4F 3F 0F 0F 07 02 
      11.  00:501C                          DB $00,$00,$10,$00,$FC,$00,$00,$00
      11.  00:501C  00 00 10 00 FC 00 00 00 
      12.  00:5024                          DB $F2,$0E,$FE,$FC,$F0,$F0,$A0,$00
      12.  00:5024  F2 0E FE FC F0 F0 A0 00 
      13.  00:502C                          ; mask 2
      14.  00:502C                          DB $00,$00,$1A,$00,$00,$00,$00,$00
      14.  00:502C  00 00 1A 00 00 00 00 00 
      15.  00:5034                          DB $7F,$60,$00,$00,$00,$00,$07,$00
      15.  00:5034  7F 60 00 00 00 00 07 00 
      16.  00:503C                          DB $00,$00,$50,$00,$00,$00,$00,$00
      16.  00:503C  00 00 50 00 00 00 00 00 
      17.  00:5044                          DB $FA,$0E,$00,$00,$00,$00,$80,$00
      17.  00:5044  FA 0E 00 00 00 00 80 00 
      18.  00:504C                          
      19.  00:504C                          ; UP 2
      20.  00:504C                          ; mask 0
      21.  00:504C                          DB $07,$0F,$05,$1F,$1F,$3F,$3F,$7F
      21.  00:504C  07 0F 05 1F 1F 3F 3F 7F 
      22.  00:5054                          DB $10,$4F,$70,$38,$0C,$0E,$05,$00
      22.  00:5054  10 4F 70 38 0C 0E 05 00 
      23.  00:505C                          DB $E0,$F0,$A0,$F8,$F8,$F8,$FC,$FE
      23.  00:505C  E0 F0 A0 F8 F8 F8 FC FE 
      24.  00:5064                          DB $02,$F2,$1E,$3C,$30,$70,$E0,$40
      24.  00:5064  02 F2 1E 3C 30 70 E0 40 
      25.  00:506C                          ; mask 1
      26.  00:506C                          DB $00,$00,$18,$00,$1F,$00,$00,$00
      26.  00:506C  00 00 18 00 1F 00 00 00 
      27.  00:5074                          DB $4F,$70,$7F,$3F,$0F,$0F,$03,$00
      27.  00:5074  4F 70 7F 3F 0F 0F 03 00 
      28.  00:507C                          DB $00,$00,$10,$00,$FC,$00,$00,$00
      28.  00:507C  00 00 10 00 FC 00 00 00 
      29.  00:5084                          DB $FE,$06,$F2,$FC,$F0,$F0,$E0,$20
      29.  00:5084  FE 06 F2 FC F0 F0 E0 20 
      30.  00:508C                          ; mask 2
      31.  00:508C                          DB $00,$00,$1A,$00,$00,$00,$00,$00
      31.  00:508C  00 00 1A 00 00 00 00 00 
      32.  00:5094                          DB $6F,$70,$00,$00,$00,$00,$01,$00
      32.  00:5094  6F 70 00 00 00 00 01 00 
      33.  00:509C                          DB $00,$00,$50,$00,$00,$00,$00,$00
      33.  00:509C  00 00 50 00 00 00 00 00 
      34.  00:50A4                          DB $FE,$0A,$00,$00,$00,$00,$E0,$00
      34.  00:50A4  FE 0A 00 00 00 00 E0 00 
      35.  00:50AC                          
      36.  00:50AC                      SPRITE_P1_DOWN:
      37.  00:50AC                          ; DOWN 1 - 00h
      38.  00:50AC                          ; mask 0
      39.  00:50AC                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
      39.  00:50AC  07 0F 04 06 0F 07 1F 3F 
      40.  00:50B4                          DB $4C,$4E,$4E,$3C,$0C,$0E,$0F,$08
      40.  00:50B4  4C 4E 4E 3C 0C 0E 0F 08 
      41.  00:50BC                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
      41.  00:50BC  E0 F0 20 20 70 E0 F8 FC 
      42.  00:50C4                          DB $32,$72,$7E,$7C,$70,$F0,$C0,$00    
      42.  00:50C4  32 72 7E 7C 70 F0 C0 00 
      43.  00:50CC                          ; mask 1
      44.  00:50CC                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
      44.  00:50CC  00 00 19 19 10 3A 3A 78 
      45.  00:50D4                          DB $5F,$5E,$7E,$3C,$0C,$0E,$0F,$04
      45.  00:50D4  5F 5E 7E 3C 0C 0E 0F 04 
      46.  00:50DC                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
      46.  00:50DC  00 00 90 D8 88 58 5C 1E 
      47.  00:50E4                          DB $F6,$FE,$FE,$3C,$30,$70,$A0,$00    
      47.  00:50E4  F6 FE FE 3C 30 70 A0 00 
      48.  00:50EC                          ; mask 2
      49.  00:50EC                          DB $00,$00,$1B,$00,$10,$00,$00,$00
      49.  00:50EC  00 00 1B 00 10 00 00 00 
      50.  00:50F4                          DB $6F,$6F,$7F,$3F,$0F,$0F,$0F,$00
      50.  00:50F4  6F 6F 7F 3F 0F 0F 0F 00 
      51.  00:50FC                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
      51.  00:50FC  00 00 D0 00 8C 00 00 00 
      52.  00:5104                          DB $FA,$7E,$7E,$BC,$B0,$70,$80,$00
      52.  00:5104  FA 7E 7E BC B0 70 80 00 
      53.  00:510C                          
      54.  00:510C                          ; DOWN 2
      55.  00:510C                          ; mask 0 - 0Ch    
      56.  00:510C                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
      56.  00:510C  07 0F 04 06 0F 07 1F 3F 
      57.  00:5114                          DB $4C,$4E,$7E,$3C,$0C,$0E,$05,$00
      57.  00:5114  4C 4E 7E 3C 0C 0E 05 00 
      58.  00:511C                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
      58.  00:511C  E0 F0 20 20 70 E0 F8 FC 
      59.  00:5124                          DB $32,$72,$72,$7C,$70,$F0,$E0,$40    
      59.  00:5124  32 72 72 7C 70 F0 E0 40 
      60.  00:512C                          ; mask 1
      61.  00:512C                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
      61.  00:512C  00 00 19 19 10 3A 3A 78 
      62.  00:5134                          DB $5F,$7E,$7E,$3C,$0C,$0E,$03,$00
      62.  00:5134  5F 7E 7E 3C 0C 0E 03 00 
      63.  00:513C                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
      63.  00:513C  00 00 90 D8 88 58 5C 1E 
      64.  00:5144                          DB $F6,$F6,$FE,$3C,$30,$70,$E0,$20    
      64.  00:5144  F6 F6 FE 3C 30 70 E0 20 
      65.  00:514C                          ; mask 2
      66.  00:514C                          DB $00,$00,$1B,$00,$10,$00,$00,$00
      66.  00:514C  00 00 1B 00 10 00 00 00 
      67.  00:5154                          DB $6F,$7F,$7F,$3F,$0F,$0F,$01,$00
      67.  00:5154  6F 7F 7F 3F 0F 0F 01 00 
      68.  00:515C                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
      68.  00:515C  00 00 D0 00 8C 00 00 00 
      69.  00:5164                          DB $FA,$7A,$7E,$BC,$B0,$70,$E0,$00
      69.  00:5164  FA 7A 7E BC B0 70 E0 00 
      70.  00:516C                      
      71.  00:516C                      SPRITE_P1_LEFT:         
      72.  00:516C                          ; --- Slot 3
      73.  00:516C                          ; mask 0
      74.  00:516C                          DB $07,$0F,$02,$05,$07,$07,$0F,$0F
      74.  00:516C  07 0F 02 05 07 07 0F 0F 
      75.  00:5174                          DB $07,$03,$03,$03,$01,$03,$03,$04
      75.  00:5174  07 03 03 03 01 03 03 04 
      76.  00:517C                          DB $E0,$F0,$80,$00,$A0,$E0,$C0,$C0
      76.  00:517C  E0 F0 80 00 A0 E0 C0 C0 
      77.  00:5184                          DB $E0,$B0,$70,$F0,$F0,$F0,$C0,$00    
      77.  00:5184  E0 B0 70 F0 F0 F0 C0 00 
      78.  00:518C                          ; mask 1
      79.  00:518C                          DB $00,$00,$18,$1A,$08,$0A,$12,$10
      79.  00:518C  00 00 18 1A 08 0A 12 10 
      80.  00:5194                          DB $08,$03,$02,$02,$01,$03,$03,$03
      80.  00:5194  08 03 02 02 01 03 03 03 
      81.  00:519C                          DB $00,$00,$78,$F8,$5C,$1C,$7E,$7E
      81.  00:519C  00 00 78 F8 5C 1C 7E 7E 
      82.  00:51A4                          DB $FE,$3E,$7E,$7C,$F8,$F8,$B0,$00
      82.  00:51A4  FE 3E 7E 7C F8 F8 B0 00 
      83.  00:51AC                          ; mask 2
      84.  00:51AC                          DB $00,$00,$1D,$00,$28,$00,$00,$00
      84.  00:51AC  00 00 1D 00 28 00 00 00 
      85.  00:51B4                          DB $00,$07,$06,$06,$07,$07,$03,$00
      85.  00:51B4  00 07 06 06 07 07 03 00 
      86.  00:51BC                          DB $00,$00,$78,$00,$5C,$00,$00,$00
      86.  00:51BC  00 00 78 00 5C 00 00 00 
      87.  00:51C4                          DB $00,$7E,$FE,$7C,$F8,$F8,$80,$00
      87.  00:51C4  00 7E FE 7C F8 F8 80 00 
      88.  00:51CC                          ; --- Slot 4
      89.  00:51CC                          ; mask 0
      90.  00:51CC                          DB $07,$0F,$02,$05,$07,$07,$0F,$0F
      90.  00:51CC  07 0F 02 05 07 07 0F 0F 
      91.  00:51D4                          DB $07,$03,$03,$03,$01,$03,$04,$00
      91.  00:51D4  07 03 03 03 01 03 04 00 
      92.  00:51DC                          DB $E0,$F0,$80,$00,$A0,$E0,$C0,$C0
      92.  00:51DC  E0 F0 80 00 A0 E0 C0 C0 
      93.  00:51E4                          DB $E0,$B0,$D0,$D0,$F0,$F0,$E0,$40
      93.  00:51E4  E0 B0 D0 D0 F0 F0 E0 40 
      94.  00:51EC                          ; mask 1
      95.  00:51EC                          DB $00,$00,$18,$1A,$08,$0A,$12,$10
      95.  00:51EC  00 00 18 1A 08 0A 12 10 
      96.  00:51F4                          DB $08,$03,$03,$03,$01,$03,$03,$00
      96.  00:51F4  08 03 03 03 01 03 03 00 
      97.  00:51FC                          DB $00,$00,$78,$F8,$5C,$1C,$7E,$7E
      97.  00:51FC  00 00 78 F8 5C 1C 7E 7E 
      98.  00:5204                          DB $FE,$3E,$9E,$9C,$98,$F8,$E0,$30
      98.  00:5204  FE 3E 9E 9C 98 F8 E0 30 
      99.  00:520C                          ; mask 2
     100.  00:520C                          DB $00,$00,$1D,$00,$28,$00,$00,$00
     100.  00:520C  00 00 1D 00 28 00 00 00 
     101.  00:5214                          DB $00,$07,$07,$07,$07,$07,$00,$00
     101.  00:5214  00 07 07 07 07 07 00 00 
     102.  00:521C                          DB $00,$00,$78,$00,$5C,$00,$00,$00
     102.  00:521C  00 00 78 00 5C 00 00 00 
     103.  00:5224                          DB $00,$7E,$BE,$BC,$98,$F8,$E0,$00
     103.  00:5224  00 7E BE BC 98 F8 E0 00 
     104.  00:522C                      
     105.  00:522C                      SPRITE_P1_RIGHT:
     106.  00:522C                          ; --- Slot 0
     107.  00:522C                          ; mask 0
     108.  00:522C                          DB $07,$0F,$01,$00,$05,$07,$03,$03
     108.  00:522C  07 0F 01 00 05 07 03 03 
     109.  00:5234                          DB $07,$0D,$0E,$0F,$0F,$0F,$03,$00
     109.  00:5234  07 0D 0E 0F 0F 0F 03 00 
     110.  00:523C                          DB $E0,$F0,$40,$A0,$E0,$E0,$F0,$F0
     110.  00:523C  E0 F0 40 A0 E0 E0 F0 F0 
     111.  00:5244                          DB $E0,$C0,$C0,$C0,$80,$C0,$C0,$20
     111.  00:5244  E0 C0 C0 C0 80 C0 C0 20 
     112.  00:524C                          ; mask 1
     113.  00:524C                          DB $00,$00,$1E,$1F,$3A,$38,$7E,$7E
     113.  00:524C  00 00 1E 1F 3A 38 7E 7E 
     114.  00:5254                          DB $7F,$7C,$7E,$3E,$1F,$1F,$0D,$00
     114.  00:5254  7F 7C 7E 3E 1F 1F 0D 00 
     115.  00:525C                          DB $00,$00,$18,$58,$10,$50,$48,$08
     115.  00:525C  00 00 18 58 10 50 48 08 
     116.  00:5264                          DB $10,$C0,$40,$40,$80,$C0,$C0,$C0
     116.  00:5264  10 C0 40 40 80 C0 C0 C0 
     117.  00:526C                          ; mask 2
     118.  00:526C                          DB $00,$00,$1E,$00,$3A,$00,$00,$00
     118.  00:526C  00 00 1E 00 3A 00 00 00 
     119.  00:5274                          DB $00,$7E,$7F,$3E,$1F,$1F,$01,$00
     119.  00:5274  00 7E 7F 3E 1F 1F 01 00 
     120.  00:527C                          DB $00,$00,$B8,$00,$14,$00,$00,$00
     120.  00:527C  00 00 B8 00 14 00 00 00 
     121.  00:5284                          DB $00,$E0,$60,$60,$E0,$E0,$C0,$00
     121.  00:5284  00 E0 60 60 E0 E0 C0 00 
     122.  00:528C                          
     123.  00:528C                          ; --- Slot 2
     124.  00:528C                         ; mask 0
     125.  00:528C                          DB $07,$0F,$01,$00,$05,$07,$03,$03
     125.  00:528C  07 0F 01 00 05 07 03 03 
     126.  00:5294                          DB $07,$0D,$0B,$0B,$0F,$0F,$07,$02
     126.  00:5294  07 0D 0B 0B 0F 0F 07 02 
     127.  00:529C                          DB $E0,$F0,$40,$A0,$E0,$E0,$F0,$F0
     127.  00:529C  E0 F0 40 A0 E0 E0 F0 F0 
     128.  00:52A4                          DB $E0,$C0,$C0,$C0,$80,$C0,$20,$00
     128.  00:52A4  E0 C0 C0 C0 80 C0 20 00 
     129.  00:52AC                          ; mask 1
     130.  00:52AC                          DB $00,$00,$1E,$1F,$3A,$38,$7E,$7E
     130.  00:52AC  00 00 1E 1F 3A 38 7E 7E 
     131.  00:52B4                          DB $7F,$7C,$79,$39,$19,$1F,$07,$0C
     131.  00:52B4  7F 7C 79 39 19 1F 07 0C 
     132.  00:52BC                          DB $00,$00,$18,$58,$10,$50,$48,$08
     132.  00:52BC  00 00 18 58 10 50 48 08 
     133.  00:52C4                          DB $10,$C0,$C0,$C0,$80,$C0,$C0,$00
     133.  00:52C4  10 C0 C0 C0 80 C0 C0 00 
     134.  00:52CC                              ; mask 2
     135.  00:52CC                          DB $00,$00,$1E,$00,$3A,$00,$00,$00
     135.  00:52CC  00 00 1E 00 3A 00 00 00 
     136.  00:52D4                          DB $00,$7E,$7D,$3D,$19,$1F,$07,$00
     136.  00:52D4  00 7E 7D 3D 19 1F 07 00 
     137.  00:52DC                          DB $00,$00,$B8,$00,$14,$00,$00,$00
     137.  00:52DC  00 00 B8 00 14 00 00 00 
     138.  00:52E4                          DB $00,$E0,$E0,$E0,$E0,$E0,$00,$00
     138.  00:52E4  00 E0 E0 E0 E0 E0 00 00 
     139.  00:52EC                          
     140.  00:52EC                      SPRITE_PATTERN:    
     141.  00:52EC                          ; P1 - DOWN 1 
     142.  00:52EC                          ; DOWN 1 - 00h
     143.  00:52EC                          ; mask 0
     144.  00:52EC                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
     144.  00:52EC  07 0F 04 06 0F 07 1F 3F 
     145.  00:52F4                          DB $4C,$4E,$4E,$3C,$0C,$0E,$0F,$08
     145.  00:52F4  4C 4E 4E 3C 0C 0E 0F 08 
     146.  00:52FC                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
     146.  00:52FC  E0 F0 20 20 70 E0 F8 FC 
     147.  00:5304                          DB $32,$72,$7E,$7C,$70,$F0,$C0,$00    
     147.  00:5304  32 72 7E 7C 70 F0 C0 00 
     148.  00:530C                          ; mask 1
     149.  00:530C                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
     149.  00:530C  00 00 19 19 10 3A 3A 78 
     150.  00:5314                          DB $5F,$5E,$7E,$3C,$0C,$0E,$0F,$04
     150.  00:5314  5F 5E 7E 3C 0C 0E 0F 04 
     151.  00:531C                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
     151.  00:531C  00 00 90 D8 88 58 5C 1E 
     152.  00:5324                          DB $F6,$FE,$FE,$3C,$30,$70,$A0,$00    
     152.  00:5324  F6 FE FE 3C 30 70 A0 00 
     153.  00:532C                          ; mask 2
     154.  00:532C                          DB $00,$00,$1B,$00,$10,$00,$00,$00
     154.  00:532C  00 00 1B 00 10 00 00 00 
     155.  00:5334                          DB $6F,$6F,$7F,$3F,$0F,$0F,$0F,$00
     155.  00:5334  6F 6F 7F 3F 0F 0F 0F 00 
     156.  00:533C                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
     156.  00:533C  00 00 D0 00 8C 00 00 00 
     157.  00:5344                          DB $FA,$7E,$7E,$BC,$B0,$70,$80,$00
     157.  00:5344  FA 7E 7E BC B0 70 80 00 
     158.  00:534C                          
     159.  00:534C                          ; DOWN 2
     160.  00:534C                          ; mask 0 - 0Ch    
     161.  00:534C                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
     161.  00:534C  07 0F 04 06 0F 07 1F 3F 
     162.  00:5354                          DB $4C,$4E,$7E,$3C,$0C,$0E,$05,$00
     162.  00:5354  4C 4E 7E 3C 0C 0E 05 00 
     163.  00:535C                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
     163.  00:535C  E0 F0 20 20 70 E0 F8 FC 
     164.  00:5364                          DB $32,$72,$72,$7C,$70,$F0,$E0,$40    
     164.  00:5364  32 72 72 7C 70 F0 E0 40 
     165.  00:536C                          ; mask 1
     166.  00:536C                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
     166.  00:536C  00 00 19 19 10 3A 3A 78 
     167.  00:5374                          DB $5F,$7E,$7E,$3C,$0C,$0E,$03,$00
     167.  00:5374  5F 7E 7E 3C 0C 0E 03 00 
     168.  00:537C                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
     168.  00:537C  00 00 90 D8 88 58 5C 1E 
     169.  00:5384                          DB $F6,$F6,$FE,$3C,$30,$70,$E0,$20    
     169.  00:5384  F6 F6 FE 3C 30 70 E0 20 
     170.  00:538C                          ; mask 2
     171.  00:538C                          DB $00,$00,$1B,$00,$10,$00,$00,$00
     171.  00:538C  00 00 1B 00 10 00 00 00 
     172.  00:5394                          DB $6F,$7F,$7F,$3F,$0F,$0F,$01,$00
     172.  00:5394  6F 7F 7F 3F 0F 0F 01 00 
     173.  00:539C                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
     173.  00:539C  00 00 D0 00 8C 00 00 00 
     174.  00:53A4                          DB $FA,$7A,$7E,$BC,$B0,$70,$E0,$00
     174.  00:53A4  FA 7A 7E BC B0 70 E0 00 
     175.  00:53AC                          
     176.  00:53AC                          ; Antichrist - RIGHT
     177.  00:53AC                          ; mask 0 - 18h    
     178.  00:53AC                          DB $00,$00,$00,$01,$01,$01,$01,$01
     178.  00:53AC  00 00 00 01 01 01 01 01 
     179.  00:53B4                          DB $01,$01,$07,$07,$01,$01,$00,$00
     179.  00:53B4  01 01 07 07 01 01 00 00 
     180.  00:53BC                          DB $00,$00,$00,$80,$80,$80,$80,$80
     180.  00:53BC  00 00 00 80 80 80 80 80 
     181.  00:53C4                          DB $80,$80,$E0,$E0,$80,$80,$00,$00
     181.  00:53C4  80 80 E0 E0 80 80 00 00 
     182.  00:53CC                      
     183.  00:53CC                          ;Ghost 1 Left - 1CH
     184.  00:53CC                          ; mask 0
     185.  00:53CC                          DB $03,$04,$08,$68,$B5,$90,$50,$40
     185.  00:53CC  03 04 08 68 B5 90 50 40 
     186.  00:53D4                          DB $22,$20,$10,$10,$08,$06,$03,$00
     186.  00:53D4  22 20 10 10 08 06 03 00 
     187.  00:53DC                          DB $C0,$E0,$70,$36,$BB,$33,$26,$06
     187.  00:53DC  C0 E0 70 36 BB 33 26 06 
     188.  00:53E4                          DB $0C,$18,$3E,$19,$07,$0C,$F8,$E0
     188.  00:53E4  0C 18 3E 19 07 0C F8 E0 
     189.  00:53EC                          ; mask 1    20h
     190.  00:53EC                          DB $00,$07,$0F,$6F,$DF,$FF,$6F,$7F
     190.  00:53EC  00 07 0F 6F DF FF 6F 7F 
     191.  00:53F4                          DB $3F,$3F,$1F,$1F,$0F,$05,$03,$00
     191.  00:53F4  3F 3F 1F 1F 0F 05 03 00 
     192.  00:53FC                          DB $00,$20,$90,$D6,$DD,$DD,$DA,$FA
     192.  00:53FC  00 20 90 D6 DD DD DA FA 
     193.  00:5404                          DB $F4,$E8,$CE,$EF,$FB,$F4,$18,$00
     193.  00:5404  F4 E8 CE EF FB F4 18 00 
     194.  00:540C                          
     195.  00:540C                          ; Ghost 2 Left - 24h
     196.  00:540C                          ; mask 0    24-h
     197.  00:540C                          DB $03,$04,$08,$08,$65,$B0,$90,$40
     197.  00:540C  03 04 08 08 65 B0 90 40 
     198.  00:5414                          DB $22,$20,$10,$10,$08,$06,$01,$00
     198.  00:5414  22 20 10 10 08 06 01 00 
     199.  00:541C                          DB $C0,$E0,$70,$30,$B6,$3B,$27,$06
     199.  00:541C  C0 E0 70 30 B6 3B 27 06 
     200.  00:5424                          DB $0C,$18,$3C,$1A,$06,$0C,$F0,$C0
     200.  00:5424  0C 18 3C 1A 06 0C F0 C0 
     201.  00:542C                          ; mask 1    28h
     202.  00:542C                          DB $00,$07,$0F,$0F,$6F,$DF,$EF,$7F
     202.  00:542C  00 07 0F 0F 6F DF EF 7F 
     203.  00:5434                          DB $3F,$3F,$1F,$1F,$0F,$05,$01,$00
     203.  00:5434  3F 3F 1F 1F 0F 05 01 00 
     204.  00:543C                          DB $00,$20,$90,$D0,$D6,$DD,$D9,$FA
     204.  00:543C  00 20 90 D0 D6 DD D9 FA 
     205.  00:5444                          DB $F4,$E8,$CC,$EE,$FA,$F4,$30,$00
     205.  00:5444  F4 E8 CC EE FA F4 30 00 
     206.  00:544C                      
     207.  00:544C                          ; Ghost 1 Right - 2Ch
     208.  00:544C                          ; mask 0
     209.  00:544C                          DB $03,$07,$0E,$6C,$DD,$CC,$64,$60
     209.  00:544C  03 07 0E 6C DD CC 64 60 
     210.  00:5454                          DB $30,$18,$7C,$98,$E0,$30,$1F,$07
     210.  00:5454  30 18 7C 98 E0 30 1F 07 
     211.  00:545C                          DB $C0,$20,$10,$16,$AD,$09,$0A,$02
     211.  00:545C  C0 20 10 16 AD 09 0A 02 
     212.  00:5464                          DB $44,$04,$08,$08,$10,$60,$C0,$00
     212.  00:5464  44 04 08 08 10 60 C0 00 
     213.  00:546C                          ; mask 1    - 30h
     214.  00:546C                          DB $00,$04,$09,$6B,$BB,$BB,$5B,$5F
     214.  00:546C  00 04 09 6B BB BB 5B 5F 
     215.  00:5474                          DB $2F,$17,$73,$F7,$DF,$2F,$18,$00
     215.  00:5474  2F 17 73 F7 DF 2F 18 00 
     216.  00:547C                          DB $00,$E0,$F0,$F6,$FB,$FF,$F6,$FE
     216.  00:547C  00 E0 F0 F6 FB FF F6 FE 
     217.  00:5484                          DB $FC,$FC,$F8,$F8,$F0,$A0,$C0,$00
     217.  00:5484  FC FC F8 F8 F0 A0 C0 00 
     218.  00:548C                          
     219.  00:548C                          ; Ghost 2 Right - 34h
     220.  00:548C                          ; mask 0
     221.  00:548C                          DB $03,$07,$0E,$0C,$6D,$DC,$E4,$60
     221.  00:548C  03 07 0E 0C 6D DC E4 60 
     222.  00:5494                          DB $30,$18,$3C,$58,$60,$30,$0F,$03
     222.  00:5494  30 18 3C 58 60 30 0F 03 
     223.  00:549C                          DB $C0,$20,$10,$10,$A6,$0D,$09,$02
     223.  00:549C  C0 20 10 10 A6 0D 09 02 
     224.  00:54A4                          DB $44,$04,$08,$08,$10,$60,$80,$00
     224.  00:54A4  44 04 08 08 10 60 80 00 
     225.  00:54AC                          ; mask 1    38h
     226.  00:54AC                          DB $00,$04,$09,$0B,$6B,$BB,$9B,$5F
     226.  00:54AC  00 04 09 0B 6B BB 9B 5F 
     227.  00:54B4                          DB $2F,$17,$33,$77,$5F,$2F,$0C,$00
     227.  00:54B4  2F 17 33 77 5F 2F 0C 00 
     228.  00:54BC                          DB $00,$E0,$F0,$F0,$F6,$FB,$F7,$FE
     228.  00:54BC  00 E0 F0 F0 F6 FB F7 FE 
     229.  00:54C4                          DB $FC,$FC,$F8,$F8,$F0,$A0,$80,$00
     229.  00:54C4  FC FC F8 F8 F0 A0 80 00 
     230.  00:54CC                          
     231.  00:54CC                      
     232.  00:54CC                          ; Esqueleto Left - 1
     233.  00:54CC                          ; mask 0 - 3Ch
     234.  00:54CC                          DB $1F,$1B,$2E,$24,$3F,$1F,$1F,$00
     234.  00:54CC  1F 1B 2E 24 3F 1F 1F 00 
     235.  00:54D4                          DB $03,$05,$09,$04,$01,$02,$02,$04
     235.  00:54D4  03 05 09 04 01 02 02 04 
     236.  00:54DC                          DB $80,$C0,$C0,$C0,$80,$00,$00,$80
     236.  00:54DC  80 C0 C0 C0 80 00 00 80 
     237.  00:54E4                          DB $E0,$D0,$C8,$C4,$C0,$20,$20,$40
     237.  00:54E4  E0 D0 C8 C4 C0 20 20 40 
     238.  00:54EC                          ; mask 1 - 40h
     239.  00:54EC                          DB $1F,$1F,$3F,$3F,$3F,$1E,$0A,$00
     239.  00:54EC  1F 1F 3F 3F 3F 1E 0A 00 
     240.  00:54F4                          DB $03,$05,$09,$04,$01,$00,$00,$00
     240.  00:54F4  03 05 09 04 01 00 00 00 
     241.  00:54FC                          DB $00,$80,$80,$80,$00,$00,$00,$00
     241.  00:54FC  00 80 80 80 00 00 00 00 
     242.  00:5504                          DB $80,$10,$88,$84,$80,$00,$00,$00
     242.  00:5504  80 10 88 84 80 00 00 00 
     243.  00:550C                      
     244.  00:550C                          ; Esqueleto Left - 2
     245.  00:550C                          ; mask 0 - 44h
     246.  00:550C                          ; mask 0
     247.  00:550C                          DB $0F,$0D,$17,$12,$1F,$0F,$0F,$00
     247.  00:550C  0F 0D 17 12 1F 0F 0F 00 
     248.  00:5514                          DB $03,$05,$09,$10,$01,$06,$08,$00
     248.  00:5514  03 05 09 10 01 06 08 00 
     249.  00:551C                          DB $C0,$E0,$60,$60,$C0,$80,$80,$80
     249.  00:551C  C0 E0 60 60 C0 80 80 80 
     250.  00:5524                          DB $E0,$D0,$C8,$D0,$C0,$20,$20,$50
     250.  00:5524  E0 D0 C8 D0 C0 20 20 50 
     251.  00:552C                          ; mask 1 - 48h
     252.  00:552C                          DB $0F,$0F,$1F,$1F,$1F,$0F,$05,$00
     252.  00:552C  0F 0F 1F 1F 1F 0F 05 00 
     253.  00:5534                          DB $03,$05,$09,$10,$01,$00,$00,$00
     253.  00:5534  03 05 09 10 01 00 00 00 
     254.  00:553C                          DB $80,$C0,$C0,$C0,$80,$00,$00,$00
     254.  00:553C  80 C0 C0 C0 80 00 00 00 
     255.  00:5544                          DB $80,$10,$88,$90,$80,$00,$20,$40
     255.  00:5544  80 10 88 90 80 00 20 40 
     256.  00:554C                          
     257.  00:554C                          ; Esqueleto Right - 1
     258.  00:554C                          ; mask 0 - 4Ch
     259.  00:554C                          DB $01,$03,$03,$03,$01,$00,$00,$01
     259.  00:554C  01 03 03 03 01 00 00 01 
     260.  00:5554                          DB $07,$0B,$13,$23,$03,$04,$04,$02
     260.  00:5554  07 0B 13 23 03 04 04 02 
     261.  00:555C                          DB $F8,$D8,$74,$24,$FC,$F8,$F8,$00
     261.  00:555C  F8 D8 74 24 FC F8 F8 00 
     262.  00:5564                          DB $C0,$A0,$90,$20,$80,$40,$40,$20
     262.  00:5564  C0 A0 90 20 80 40 40 20 
     263.  00:556C                          ; mask 1 - 50h
     264.  00:556C                          DB $00,$01,$01,$01,$00,$00,$00,$00
     264.  00:556C  00 01 01 01 00 00 00 00 
     265.  00:5574                          DB $01,$08,$11,$21,$01,$00,$00,$00
     265.  00:5574  01 08 11 21 01 00 00 00 
     266.  00:557C                          DB $F8,$F8,$FC,$FC,$FC,$78,$50,$00
     266.  00:557C  F8 F8 FC FC FC 78 50 00 
     267.  00:5584                          DB $C0,$A0,$90,$20,$80,$00,$00,$00
     267.  00:5584  C0 A0 90 20 80 00 00 00 
     268.  00:558C                          
     269.  00:558C                          ; Esqueleto Right - 2
     270.  00:558C                          ; mask 0 - 54h
     271.  00:558C                          DB $03,$07,$06,$06,$03,$01,$01,$01
     271.  00:558C  03 07 06 06 03 01 01 01 
     272.  00:5594                          DB $07,$0B,$13,$0B,$03,$04,$04,$0A
     272.  00:5594  07 0B 13 0B 03 04 04 0A 
     273.  00:559C                          DB $F0,$B0,$E8,$48,$F8,$F0,$F0,$00
     273.  00:559C  F0 B0 E8 48 F8 F0 F0 00 
     274.  00:55A4                          DB $C0,$A0,$90,$08,$80,$60,$10,$00
     274.  00:55A4  C0 A0 90 08 80 60 10 00 
     275.  00:55AC                          ; mask 1 - 58h
     276.  00:55AC                          DB $01,$03,$03,$03,$01,$00,$00,$00
     276.  00:55AC  01 03 03 03 01 00 00 00 
     277.  00:55B4                          DB $01,$08,$11,$09,$01,$00,$04,$02
     277.  00:55B4  01 08 11 09 01 00 04 02 
     278.  00:55BC                          DB $F0,$F0,$F8,$F8,$F8,$F0,$A0,$00
     278.  00:55BC  F0 F0 F8 F8 F8 F0 A0 00 
     279.  00:55C4                          DB $C0,$A0,$90,$08,$80,$00,$00,$00
     279.  00:55C4  C0 A0 90 08 80 00 00 00 
     280.  00:55CC                      
     281.  00:55CC                      SPRITE_COLOR_TABLE:       
     282.  00:55CC                           ;P1 - DOWN 1
     283.  00:55CC                          ;DOWN 1
     284.  00:55CC                          ; attr 0
     285.  00:55CC                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     285.  00:55CC  05 05 0A 0B 0B 0B 0B 0B 
     286.  00:55D4                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     286.  00:55D4  04 04 04 0A 0A 0A 08 08 
     287.  00:55DC                          ; attr 1
     288.  00:55DC                          DB $00,$00,$44,$45,$45,$45,$45,$45
     288.  00:55DC  00 00 44 45 45 45 45 45 
     289.  00:55E4                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     289.  00:55E4  4A 4A 4A 44 44 44 45 45 
     290.  00:55EC                          ; attr 2
     291.  00:55EC                          DB $00,$00,$41,$00,$40,$00,$00,$00
     291.  00:55EC  00 00 41 00 40 00 00 00 
     292.  00:55F4                          DB $41,$41,$41,$41,$41,$41,$42,$00
     292.  00:55F4  41 41 41 41 41 41 42 00 
     293.  00:55FC                               
     294.  00:55FC                          ; Cada posición ha de corresponder con la tabla de atributos    
     295.  00:55FC                          ; Disparo - antichrist    
     296.  00:55FC                          DB $00,$00,$00,$0A,$0A,$0A,$0A,$0A
     296.  00:55FC  00 00 00 0A 0A 0A 0A 0A 
     297.  00:5604                          DB $0A,$0A,$0A,$0A,$0A,$0A,$00,$00
     297.  00:5604  0A 0A 0A 0A 0A 0A 00 00 
     298.  00:560C                          ; Fantasma
     299.  00:560C                          ; attr 0
     300.  00:560C                          DB $0F,$08,$08,$08,$08,$08,$08,$08
     300.  00:560C  0F 08 08 08 08 08 08 08 
     301.  00:5614                          DB $08,$08,$08,$08,$08,$08,$08,$0F
     301.  00:5614  08 08 08 08 08 08 08 0F 
     302.  00:561C                          ; attr 1
     303.  00:561C                          DB $00,$47,$47,$47,$47,$47,$47,$47
     303.  00:561C  00 47 47 47 47 47 47 47 
     304.  00:5624                          DB $47,$47,$47,$47,$47,$47,$47,$00
     304.  00:5624  47 47 47 47 47 47 47 00 
     305.  00:562C                          
     306.  00:562C                          
     307.  00:562C                          ; Esqueleto Left 1
     308.  00:562C                          ; attr 0
     309.  00:562C                          DB $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E
     309.  00:562C  0E 0E 0E 0E 0E 0E 0E 0E 
     310.  00:5634                          DB $0E,$0E,$0E,$0E,$0E,$0F,$0F,$0F
     310.  00:5634  0E 0E 0E 0E 0E 0F 0F 0F 
     311.  00:563C                          ; attr 1
     312.  00:563C                          DB $41,$49,$49,$49,$41,$41,$41,$00
     312.  00:563C  41 49 49 49 41 41 41 00 
     313.  00:5644                          DB $41,$41,$41,$41,$41,$00,$00,$00
     313.  00:5644  41 41 41 41 41 00 00 00 
     314.  00:564C                      
     315.  00:564C                      SPRITE_COLOR_P1_UP:
     316.  00:564C                          ;UP 1
     317.  00:564C                          ; attr 0
     318.  00:564C                          DB $05,$05,$0A,$05,$05,$05,$05,$05
     318.  00:564C  05 05 0A 05 05 05 05 05 
     319.  00:5654                          DB $0A,$05,$0B,$0A,$0A,$0A,$08,$08
     319.  00:5654  0A 05 0B 0A 0A 0A 08 08 
     320.  00:565C                          ; attr 1
     321.  00:565C                          DB $00,$00,$44,$00,$40,$00,$00,$00
     321.  00:565C  00 00 44 00 40 00 00 00 
     322.  00:5664                          DB $44,$4A,$45,$45,$45,$45,$45,$45    
     322.  00:5664  44 4A 45 45 45 45 45 45 
     323.  00:566C                          ; attr 2
     324.  00:566C                          DB $00,$00,$41,$00,$00,$00,$00,$00
     324.  00:566C  00 00 41 00 00 00 00 00 
     325.  00:5674                          DB $41,$41,$00,$00,$00,$00,$42,$00
     325.  00:5674  41 41 00 00 00 00 42 00 
     326.  00:567C                          
     327.  00:567C                          ;SPRITE_COLOR_P1_UP2:
     328.  00:567C                          ;UP 1
     329.  00:567C                          ; attr 0
     330.  00:567C                          DB $05,$05,$0A,$05,$05,$05,$05,$05
     330.  00:567C  05 05 0A 05 05 05 05 05 
     331.  00:5684                          DB $0A,$05,$0B,$0A,$0A,$0A,$08,$08
     331.  00:5684  0A 05 0B 0A 0A 0A 08 08 
     332.  00:568C                          ; attr 1
     333.  00:568C                          DB $00,$00,$44,$00,$40,$00,$00,$00
     333.  00:568C  00 00 44 00 40 00 00 00 
     334.  00:5694                          DB $44,$4A,$45,$45,$45,$45,$45,$45
     334.  00:5694  44 4A 45 45 45 45 45 45 
     335.  00:569C                          ; attr 2
     336.  00:569C                          DB $00,$00,$41,$00,$00,$00,$00,$00
     336.  00:569C  00 00 41 00 00 00 00 00 
     337.  00:56A4                          DB $41,$41,$00,$00,$00,$00,$42,$00
     337.  00:56A4  41 41 00 00 00 00 42 00 
     338.  00:56AC                      
     339.  00:56AC                      
     340.  00:56AC                      SPRITE_COLOR_P1_DOWN:
     341.  00:56AC                          ;DOWN 1
     342.  00:56AC                          ; attr 0
     343.  00:56AC                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     343.  00:56AC  05 05 0A 0B 0B 0B 0B 0B 
     344.  00:56B4                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     344.  00:56B4  04 04 04 0A 0A 0A 08 08 
     345.  00:56BC                          ; attr 1
     346.  00:56BC                          DB $00,$00,$44,$45,$45,$45,$45,$45
     346.  00:56BC  00 00 44 45 45 45 45 45 
     347.  00:56C4                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     347.  00:56C4  4A 4A 4A 44 44 44 45 45 
     348.  00:56CC                          ; attr 2
     349.  00:56CC                          DB $00,$00,$41,$00,$40,$00,$00,$00
     349.  00:56CC  00 00 41 00 40 00 00 00 
     350.  00:56D4                          DB $41,$41,$41,$41,$41,$41,$42,$00
     350.  00:56D4  41 41 41 41 41 41 42 00 
     351.  00:56DC                          ;SPRITE_COLOR_P1_DOWN2:
     352.  00:56DC                          ;DOWN 1
     353.  00:56DC                          ; attr 0
     354.  00:56DC                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     354.  00:56DC  05 05 0A 0B 0B 0B 0B 0B 
     355.  00:56E4                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     355.  00:56E4  04 04 04 0A 0A 0A 08 08 
     356.  00:56EC                          ; attr 1
     357.  00:56EC                          DB $00,$00,$44,$45,$45,$45,$45,$45
     357.  00:56EC  00 00 44 45 45 45 45 45 
     358.  00:56F4                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     358.  00:56F4  4A 4A 4A 44 44 44 45 45 
     359.  00:56FC                          ; attr 2
     360.  00:56FC                          DB $00,$00,$41,$00,$40,$00,$00,$00
     360.  00:56FC  00 00 41 00 40 00 00 00 
     361.  00:5704                          DB $41,$41,$41,$41,$41,$41,$42,$00
     361.  00:5704  41 41 41 41 41 41 42 00 
     362.  00:570C                      
     363.  00:570C                      SPRITE_COLOR_P1_RIGHT:
     364.  00:570C                          ; attr 0
     365.  00:570C                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     365.  00:570C  05 05 0A 0B 0B 0B 0B 0B 
     366.  00:5714                          DB $0B,$0A,$0A,$0B,$0A,$0A,$08,$08    
     366.  00:5714  0B 0A 0A 0B 0A 0A 08 08 
     367.  00:571C                          ; attr 1
     368.  00:571C                          DB $00,$00,$44,$45,$45,$45,$45,$45
     368.  00:571C  00 00 44 45 45 45 45 45 
     369.  00:5724                          DB $45,$44,$44,$44,$44,$44,$45,$45    
     369.  00:5724  45 44 44 44 44 44 45 45 
     370.  00:572C                          ; attr 2
     371.  00:572C                          DB $00,$00,$41,$00,$40,$00,$00,$00
     371.  00:572C  00 00 41 00 40 00 00 00 
     372.  00:5734                          DB $00,$41,$41,$41,$41,$41,$42,$00
     372.  00:5734  00 41 41 41 41 41 42 00 
     373.  00:573C                             
     374.  00:573C                          ; attr 0
     375.  00:573C                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     375.  00:573C  05 05 0A 0B 0B 0B 0B 0B 
     376.  00:5744                          DB $0B,$0A,$0A,$0A,$0B,$0A,$08,$08    
     376.  00:5744  0B 0A 0A 0A 0B 0A 08 08 
     377.  00:574C                          ; attr 1
     378.  00:574C                          DB $00,$00,$44,$45,$45,$45,$45,$45
     378.  00:574C  00 00 44 45 45 45 45 45 
     379.  00:5754                          DB $45,$44,$44,$44,$44,$44,$45,$45
     379.  00:5754  45 44 44 44 44 44 45 45 
     380.  00:575C                          ; attr 2
     381.  00:575C                          DB $00,$00,$41,$00,$40,$00,$00,$00
     381.  00:575C  00 00 41 00 40 00 00 00 
     382.  00:5764                          DB $00,$41,$41,$41,$41,$41,$42,$00
     382.  00:5764  00 41 41 41 41 41 42 00 
     383.  00:576C                      
     384.  00:576C                      mapa1:
     385.  00:576C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     385.  00:576C  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     385.  00:577C  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     386.  00:578C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     386.  00:578C  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     386.  00:579C  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     387.  00:57AC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     387.  00:57AC  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     387.  00:57BC  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     388.  00:57CC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     388.  00:57CC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     388.  00:57DC  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     389.  00:57EC                            db #01,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     389.  00:57EC  01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 
     389.  00:57FC  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     390.  00:580C                            db #01,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     390.  00:580C  01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 
     390.  00:581C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     391.  00:582C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     391.  00:582C  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     391.  00:583C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     392.  00:584C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     392.  00:584C  01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     392.  00:585C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     393.  00:586C                          
     394.  00:586C                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     394.  00:586C  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     394.  00:587C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     395.  00:588C                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     395.  00:588C  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     395.  00:589C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     396.  00:58AC                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01        
     396.  00:58AC  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     396.  00:58BC  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     397.  00:58CC                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     397.  00:58CC  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     397.  00:58DC  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     398.  00:58EC                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     398.  00:58EC  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     398.  00:58FC  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     399.  00:590C                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     399.  00:590C  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     399.  00:591C  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     400.  00:592C                            db #01,#01,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01        
     400.  00:592C  01 01 00 00 00 00 00 01 01 01 01 01 01 00 00 00 
     400.  00:593C  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     401.  00:594C                            db #01,#01,#00,#00,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     401.  00:594C  01 01 00 00 00 00 00 01 01 00 00 00 00 00 00 00 
     401.  00:595C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     402.  00:596C                      
     403.  00:596C                            db #01,#01,#00,#00,#00,#00,#01,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     403.  00:596C  01 01 00 00 00 00 01 01 01 00 00 00 00 00 00 00 
     403.  00:597C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     404.  00:598C                            db #01,#01,#00,#00,#00,#00,#01,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     404.  00:598C  01 01 00 00 00 00 01 01 01 00 00 00 00 00 00 00 
     404.  00:599C  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     405.  00:59AC                            db #01,#01,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     405.  00:59AC  01 01 00 00 01 01 01 01 01 01 01 01 01 00 00 00 
     405.  00:59BC  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     406.  00:59CC                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     406.  00:59CC  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     406.  00:59DC  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     407.  00:59EC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     407.  00:59EC  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     407.  00:59FC  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     408.  00:5A0C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     408.  00:5A0C  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     408.  00:5A1C  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     409.  00:5A2C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     409.  00:5A2C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     409.  00:5A3C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     410.  00:5A4C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     410.  00:5A4C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     410.  00:5A5C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     411.  00:5A6C                      
     412.  00:5A6C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     412.  00:5A6C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     412.  00:5A7C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     413.  00:5A8C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     413.  00:5A8C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     413.  00:5A9C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     414.  00:5AAC                      
     415.  00:5AAC                      mapa2:
     416.  00:5AAC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     416.  00:5AAC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     416.  00:5ABC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     417.  00:5ACC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     417.  00:5ACC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     417.  00:5ADC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     418.  00:5AEC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     418.  00:5AEC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     418.  00:5AFC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     419.  00:5B0C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     419.  00:5B0C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     419.  00:5B1C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     420.  00:5B2C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     420.  00:5B2C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     420.  00:5B3C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     421.  00:5B4C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     421.  00:5B4C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     421.  00:5B5C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     422.  00:5B6C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     422.  00:5B6C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     422.  00:5B7C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     423.  00:5B8C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     423.  00:5B8C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     423.  00:5B9C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     424.  00:5BAC                            
     425.  00:5BAC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     425.  00:5BAC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     425.  00:5BBC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     426.  00:5BCC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     426.  00:5BCC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     426.  00:5BDC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     427.  00:5BEC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     427.  00:5BEC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     427.  00:5BFC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     428.  00:5C0C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     428.  00:5C0C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     428.  00:5C1C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     429.  00:5C2C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     429.  00:5C2C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     429.  00:5C3C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     430.  00:5C4C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     430.  00:5C4C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     430.  00:5C5C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     431.  00:5C6C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     431.  00:5C6C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     431.  00:5C7C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     432.  00:5C8C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     432.  00:5C8C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     432.  00:5C9C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     433.  00:5CAC                            
     434.  00:5CAC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     434.  00:5CAC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     434.  00:5CBC  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     435.  00:5CCC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     435.  00:5CCC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     435.  00:5CDC  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     436.  00:5CEC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     436.  00:5CEC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     436.  00:5CFC  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     437.  00:5D0C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     437.  00:5D0C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     437.  00:5D1C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     438.  00:5D2C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     438.  00:5D2C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     438.  00:5D3C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     439.  00:5D4C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     439.  00:5D4C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     439.  00:5D5C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     440.  00:5D6C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     440.  00:5D6C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     440.  00:5D7C  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     441.  00:5D8C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     441.  00:5D8C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     441.  00:5D9C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     442.  00:5DAC                            
     443.  00:5DAC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     443.  00:5DAC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     443.  00:5DBC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     444.  00:5DCC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     444.  00:5DCC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     444.  00:5DDC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     445.  00:5DEC                      
     446.  00:5DEC                      
     447.  00:5DEC                      mapa0:      
     448.  00:5DEC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     448.  00:5DEC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     448.  00:5DFC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     449.  00:5E0C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     449.  00:5E0C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     449.  00:5E1C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     450.  00:5E2C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     450.  00:5E2C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     450.  00:5E3C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     451.  00:5E4C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     451.  00:5E4C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     451.  00:5E5C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     452.  00:5E6C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     452.  00:5E6C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     452.  00:5E7C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     453.  00:5E8C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     453.  00:5E8C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     453.  00:5E9C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     454.  00:5EAC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01       
     454.  00:5EAC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     454.  00:5EBC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     455.  00:5ECC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     455.  00:5ECC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     455.  00:5EDC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     456.  00:5EEC                            
     457.  00:5EEC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     457.  00:5EEC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     457.  00:5EFC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     458.  00:5F0C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     458.  00:5F0C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     458.  00:5F1C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     459.  00:5F2C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     459.  00:5F2C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     459.  00:5F3C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     460.  00:5F4C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     460.  00:5F4C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     460.  00:5F5C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     461.  00:5F6C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     461.  00:5F6C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     461.  00:5F7C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     462.  00:5F8C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     462.  00:5F8C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     462.  00:5F9C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     463.  00:5FAC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     463.  00:5FAC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     463.  00:5FBC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     464.  00:5FCC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     464.  00:5FCC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     464.  00:5FDC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     465.  00:5FEC                      
     466.  00:5FEC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     466.  00:5FEC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     466.  00:5FFC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     467.  00:600C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     467.  00:600C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     467.  00:601C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     468.  00:602C                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     468.  00:602C  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     468.  00:603C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     469.  00:604C                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     469.  00:604C  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     469.  00:605C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     470.  00:606C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     470.  00:606C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     470.  00:607C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     471.  00:608C                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     471.  00:608C  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     471.  00:609C  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     472.  00:60AC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     472.  00:60AC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     472.  00:60BC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     473.  00:60CC                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01   
     473.  00:60CC  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     473.  00:60DC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     474.  00:60EC                            
     475.  00:60EC                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     475.  00:60EC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     475.  00:60FC  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     476.  00:610C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     476.  00:610C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     476.  00:611C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     477.  00:612C                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     477.  00:612C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     477.  00:613C  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     478.  00:614C                          
     479.  00:614C                      
     480.  00:614C                      SPRITE_COLOR_P1_LEFT:
     481.  00:614C                          ; attr 0
     482.  00:614C                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     482.  00:614C  05 05 0A 0B 0B 0B 0B 0B 
     483.  00:6154                          DB $0B,$0A,$0A,$0B,$0A,$0A,$08,$08
     483.  00:6154  0B 0A 0A 0B 0A 0A 08 08 
     484.  00:615C                          ; attr 1
     485.  00:615C                          DB $00,$00,$44,$45,$45,$45,$45,$45
     485.  00:615C  00 00 44 45 45 45 45 45 
     486.  00:6164                          DB $45,$44,$44,$44,$44,$44,$45,$45
     486.  00:6164  45 44 44 44 44 44 45 45 
     487.  00:616C                          ; attr 2
     488.  00:616C                          DB $00,$00,$41,$00,$40,$00,$00,$00
     488.  00:616C  00 00 41 00 40 00 00 00 
     489.  00:6174                          DB $00,$41,$41,$41,$41,$41,$42,$00
     489.  00:6174  00 41 41 41 41 41 42 00 
     490.  00:617C                          ;SPRITE_COLOR_P1_LEFT2:    
     491.  00:617C                          ; attr 0
     492.  00:617C                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     492.  00:617C  05 05 0A 0B 0B 0B 0B 0B 
     493.  00:6184                          DB $0B,$0A,$0A,$0A,$0B,$0A,$08,$08
     493.  00:6184  0B 0A 0A 0A 0B 0A 08 08 
     494.  00:618C                          ; attr 1
     495.  00:618C                          DB $00,$00,$44,$45,$45,$45,$45,$45
     495.  00:618C  00 00 44 45 45 45 45 45 
     496.  00:6194                          DB $45,$44,$44,$44,$44,$44,$45,$45
     496.  00:6194  45 44 44 44 44 44 45 45 
     497.  00:619C                          ; attr 2
     498.  00:619C                          DB $00,$00,$41,$00,$40,$00,$00,$00
     498.  00:619C  00 00 41 00 40 00 00 00 
     499.  00:61A4                          DB $00,$41,$41,$41,$41,$41,$42,$00
     499.  00:61A4  00 41 41 41 41 41 42 00 
     500.  00:61AC                      
     501.  00:61AC                      BLANK_DATA:
     502.  00:61AC                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     502.  00:61AC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     502.  00:61BC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     503.  00:61CC                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     503.  00:61CC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     503.  00:61DC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     504.  00:61EC                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     504.  00:61EC  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     504.  00:61FC  00 00 00 00 
     505.  00:6200                          
     506.  00:6200                      PaletteData:
     507.  00:6200                      			;  data 1 (red 0-7; blue 0-7); data 2 (0000; green 0-7)
     508.  00:6200  00 00                   db 0x00, 0x00 ; Color index 0
     509.  00:6202  30 00                   db 0x30, 0x00 ; Color index 1
     510.  00:6204  70 06                   db 0x70, 0x06 ; Color index 2
     511.  00:6206  50 00                   db 0x50, 0x00 ; Color index 3
     512.  00:6208  11 01                   db 0x11, 0x01 ; Color index 4
     513.  00:620A  22 02                   db 0x22, 0x02 ; Color index 5
     514.  00:620C  06 02                   db 0x06, 0x02 ; Color index 6
     515.  00:620E  77 07                   db 0x77, 0x07 ; Color index 7
     516.  00:6210  33 03                   db 0x33, 0x03 ; Color index 8
     517.  00:6212  66 06                   db 0x66, 0x06 ; Color index 9
     518.  00:6214  70 00                   db 0x70, 0x00 ; Color index 10
     519.  00:6216  64 05                   db 0x64, 0x05 ; Color index 11
     520.  00:6218  50 03                   db 0x50, 0x03 ; Color index 12
     521.  00:621A  02 04                   db 0x02, 0x04 ; Color index 13
     522.  00:621C  01 02                   db 0x01, 0x02 ; Color index 14
     523.  00:621E  00 00                   db 0x00, 0x00 ; Color index 15
     533   00:6220                      
     534   00:6220  (01)                 PAGE 1
     535   01:8000                      ; CODE O NO
     536   01:8000                      
     537   01:8000  (02)                 PAGE 2
     538   02:8000                      
     539   02:8000  (03)                 PAGE 3
     540   03:8000                      
     541   03:8000  (04)                 PAGE 4
     542   04:8000  (05)                 PAGE 5
     543   05:8000  (06)                 PAGE 6
     544   06:8000                      FONT:
     545   06:8000  (07F7)               INCBIN "gfx\FONT.SC5",#7
     546   06:87F7  (07)                 PAGE 7
     547   07:8000                      CEMENTER1
     548   07:8000  (4000)               INCBIN "gfx\CEMENTER1.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     549   07:C000  (08)                 PAGE 8
     550   08:8000  (2A00)               INCBIN "gfx\CEMENTER1.SC5",#4007			; Cada página tiene 16K = 4000h 
     551   08:AA00  (09)                 PAGE 9
     552   09:8000                      GRAPHIC
     553   09:8000  (4000)               INCBIN "gfx\BTH.SR8",#7,#4000			; Cada página tiene 16K = 4000h
     554   09:C000  (0A)                 PAGE 10
     555   0A:8000  (4000)               INCBIN "gfx\BTH.SR8",#4007,#4000
     556   0A:C000                      
     557   0A:C000  (0B)                 PAGE 11
     558   0B:8000  (4000)               INCBIN "gfx\BTH.SR8",#8007,#4000
     559   0B:C000                      
     560   0B:C000  (0C)                 PAGE 12
     561   0C:8000  (1400)               INCBIN "gfx\BTH.SR8",#C007
     562   0C:9400                      
     563   0C:9400  (0D)                 PAGE 13
     564   0D:8000                      CEMENTER2
     565   0D:8000  (4000)               INCBIN "gfx\CEMENTER2.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     566   0D:C000  (0E)                 PAGE 14
     567   0E:8000  (2A00)               INCBIN "gfx\CEMENTER2.SC5",#4007			; Cada página tiene 16K = 4000h 
     568   0E:AA00  (0F)                 PAGE 15
     569   0F:C000                      ;---------------------------------------------------------
     570   0F:C000                      ; Variables
     571   0F:C000                      ;---------------------------------------------------------
     572   0F:C000                      	
     573   0F:C000  (C000)              	MAP #C000  ;Ram page 3
     574   0F:C000                      ;	MAP #E5FF  ;Ram page 3
     575   0F:C000                      ;NAME #1  ;a byte is reserved for this variable
     576   0F:C000                      ;ETC
     577   0F:C000                      ;
     578   0F:C000                      	include "include\BTH_RAM.asm"
       1.  0F:C000  00 (1)              SHOWING_MIKE_DIALOG  DS 1
       2.  0F:C001  00 (1)              SHOWING_JOHN_DIALOG  DS 1
       3.  0F:C002  00 (1)              SHOWING_GUS_DIALOG  DS 1
       4.  0F:C003  (0F:0008)           FONT_HEIGHT EQU 8
       5.  0F:C003  (0F:0008)           FONT_WIDTH  EQU 8
       6.  0F:C003  00 (2)              CHR_ACR DS 2
       7.  0F:C005  00 (1)              PTR_STR_DX DS 1
       8.  0F:C006  00 (1)              PTR_STR_DY DS 1
       9.  0F:C007                      
      10.  0F:C007  00 (1)              LAST_KEY_PRESSED DS 1
      11.  0F:C008  00 (1)              OLD_KEY_PRESSED DS 1
      12.  0F:C009  00                  JIFFY_TEMP DB $00
      13.  0F:C00A  00                  CHAR_SPEED_X DB $00
      14.  0F:C00B  00                  CHAR_SPEED_Y DB $00
      15.  0F:C00C  00                  CHAR_SPEED_X_GHOST DB $00
      16.  0F:C00D  00                  CHAR_SPEED_X_GHOST_STG2 DB $00
      17.  0F:C00E  00 (1)              CHAR_GHOST_DEAD DS 1
      18.  0F:C00F  00 (1)              CHAR_GHOST_DEAD_STG2 DS 1
      19.  0F:C010  00 (1)              CHAR_MIN_STEP_STG2 DS 1
      20.  0F:C011  00                  CHAR_DIR_GHOST1 DB $00      ; $00 - LEFT, $FF - RIGHT
      21.  0F:C012  00                  CHAR_DIR_GHOST_STG2 DB $00      ; $00 - LEFT, $FF - RIGHT
      22.  0F:C013  00                  CHAR_DIR_MAIN DB $00        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
      23.  0F:C014  00 (1)              CHAR_NEW_DIR_MAIN DS 1
      24.  0F:C015  00 (1)              CHAR_MAIN_SHOOT DS 1        ; $01 - SHOOT LEFT $02 - SHOOT RIGHT $03 - SHOOT UP $04 - SHOOT DOWN
      25.  0F:C016  00 (1)              CHAR_MIN_STEP DS 1          ; número de ciclos antes de cambiar de patrón
      26.  0F:C017  00 (1)              CHAR_DISTANCE_SHOOT DS 1
      27.  0F:C018  00 (1)              CHAR_SPEED_SHOOT DS 1
      28.  0F:C019                      SPRITE_ATTRS:
      29.  0F:C019  00 (128)                DS 128
      30.  0F:C099                      SLOTBIOS:
      31.  0F:C099  00 (1)                  DS 1
      32.  0F:C09A                      SLOTGAME:
      33.  0F:C09A  00 (1)                  DS 1
      34.  0F:C09B                      SLOTRAM:
      35.  0F:C09B  00 (1)                  DS 1
      36.  0F:C09C                      SPRITE_PTR_REPLACE:
      37.  0F:C09C  00 (2)                  DS 2
      38.  0F:C09E                      SPRITE_COLOR_REPLACE:
      39.  0F:C09E  00 (2)                  DS 2
      40.  0F:C0A0                      SPRITE_COLOR_REPLACE2:
      41.  0F:C0A0  00 (2)                  DS 2
      42.  0F:C0A2                      MAPA:
      43.  0F:C0A2  00 (2)                  DS 2
      44.  0F:C0A4                      BITMAP:
      45.  0F:C0A4  00 (2)                  DS 2
     579   0F:C0A6  (F240)              	ENDMAP

    LABELS
-------------------------------------------------
00:00004000 X PageSize
00:00006000 X _bank1
00:00007000   _bank2
00:0000009F X CHGET
00:000000A2 X CHPUT
00:0000005F   CHGMOD
00:0000005C   LDIRVM
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000F3DB   CLIKSW
00:00000141   SNSMAT
00:0000FC9E X JIFFY
00:00000041   DISSCR
00:00000044   ENASCR
00:00000072 X INIGRP
00:00000138   RSLREG
00:00000024   ENASLT
00:00005C28   FIRST_LINE_DLG_BOX
00:00006028   SEC_LINE_DLG_BOX
00:00006428   THIRD_LINE_DLG_BOX
00:00000001 X ROMMODE
00:00000007   KB_RIGHT
00:00000006   KB_DOWN
00:00000005   KB_UP
00:00000004   KB_LEFT
00:00000003   KB_DEL
00:00000000   KB_SPACE
00:00000001   MOV_SPEED
00:00000001   MOV_SPEED_GHOST
00:00000003   MOV_SPEED_SHOOT
00:00000030   MAX_DISTANCE_SHOOT
00:00000005   MAX_CHAR_STEPS
00:00000006   MAX_CHAR_STEPS_STG2
00:0000FFE8   REG9SAV
00:00000098   PORT_0
00:00000099   PORT_1
00:0000009A X PORT_2
00:0000009B X PORT_3
00:0000F3E0   RG15AV
00:0000F3E9   FORCLR
00:000000C8   MIKE_TOMB_STG1_X
00:00000029   JOHN_TOMB_STG1_X
00:00000049   GUS_TOMB_STG1_X
00:00000078   GUS_TOMB_STG1_Y
00:0000000C   SPR_SHOOT_P1
00:00000018   SPR_SHOOT_P1_PTRN
00:00000010   SPR_GHOST_STG1
00:0000001C   SPR_GHOST_STG1_PTRN_L1
00:00000024   SPR_GHOST_STG1_PTRN_L2
00:0000002C   SPR_GHOST_STG1_PTRN_R1
00:00000034   SPR_GHOST_STG1_PTRN_R2
00:00000018   SPR_GHOST_STG2
00:0000003C   SPR_GHOST_STG2_PTRN_L1
00:00000044   SPR_GHOST_STG2_PTRN_L2
00:0000004C   SPR_GHOST_STG2_PTRN_R1
00:00000054   SPR_GHOST_STG2_PTRN_R2
00:00004010   mike_tomb_strings
00:00004016   string01M
00:0000401C   string02M
00:0000402F   string03M
00:00004038   john_tomb_strings
00:0000403E   string01J
00:00004044   string02J
00:00004056   string03J
00:0000405F   gus_tomb_strings
00:00004065   string01G
00:0000406A   string02G
00:0000407E   string03G
00:00004087   check_spr_collision
00:00004094   check_spr_collision.no_collision
00:00004097   get_bloque_en_X_Y
00:000040B8   SetVdp_Write
00:000040D4   Set212Lines
00:000040E0   ClearVram_MSX2
00:000040EA   ClearVram_MSX2.loop_2
00:000040EC   ClearVram_MSX2.loop_1
00:000040EE   ClearVram_MSX2.loop
00:000040FB X opening_screen
00:0000411E   load_screen
00:00004140   _vdpsetvramwr
00:00004151 X _vdpsetvramwr14
00:0000415A   GETSLOT
00:00004171   EXIT
00:00004173   SETPAGES32K
00:00004178   NOPRET
00:00004186   SET_SCREEN5_MODE
00:000041A8   DUMP_SPR_ALL
00:000041CD   DUMP_SPR_ATTS
00:000041E7 X DUMP_SPR_ATTS.DUMP_SPR_ATTS_END
00:000041E8   DUMP_SPR_P1
00:00004205   SetPalette
00:00004214   move_up
00:0000424E   move_down
00:00004289   move_right
00:0000429A   move_right.KB_UPDOWN_PRESSED
00:000042E8   move_left
00:000042F9   move_left.KB_UPDOWN_PRESSED
00:00004347   CHECK_DIRECTION_MAIN
00:00004369   CHECK_DIRECTION_MAIN.SET_DIR_DOWN
00:0000437E   CHECK_DIRECTION_MAIN.SET_DIR_UP
00:00004393   CHECK_DIRECTION_MAIN.SET_DIR_LEFT
00:000043A8   CHECK_DIRECTION_MAIN.SET_DIR_RIGHT
00:000043BD   CHECK_DIRECTION_MAIN.FINISH
00:000043D4   UPDATE_MOVEMENT
00:000043FC   ANIMATE_P1
00:00004423   ANIMATE_P1.SET_SPR_1P_2
00:0000443A   ANIMATE_P1.NO_CHAR_PATTERN_CHANGE
00:00004440   NO_MOVEMENT
00:00004441   MOVE_SHOOT
00:00004459   MOVE_SHOOT.MOVE_SHOOT_RIGHT
00:00004461   MOVE_SHOOT.MOVE_SHOOT_UP
00:00004469   MOVE_SHOOT.MOVE_SHOOT_DOWN
00:00004471   MOVE_SHOOT.MOVE_SHOOT_LEFT
00:00004476   MOVE_SHOOT.CHECK_SHOOT_DISTANCE
00:0000448B   MOVE_SHOOT.ADD_SHOOT_Y
00:00004495   MOVE_SHOOT.ADD_DISTANCE
00:000044A0 X MOVE_SHOOT.HIDE_SHOOT
00:000044AC   print_strings_dialog_box
00:000044D9   print_string
00:000044D9   print_string.loop_str
00:000044F4   print_string.first_line_font
00:0000450D   print_char
00:00004544   CLEAR_DIALOG_BOX
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:00004576   CHECKLP
00:00004587 X PT3_MUTE
00:00004593 X PT3_INIT
00:000045D2   PT3_INIT.TP_0
00:000045DE   PT3_INIT.TP_1
00:000045E5   PT3_INIT.TP_2
00:00004653   PT3_INIT.L1
00:00004660   PT3_INIT.L2
00:00004664 X PT3_INIT.L3
00:0000468B   PT3_INIT.CORR_1
00:00004699   PT3_INIT.CORR_2
00:000046A0   PT3_INIT.TC_EXIT
00:000046AB   PT3_INIT.INITV1
00:000046B3   PT3_INIT.INITV2
00:000046C7   PT3_INIT.INITV3
00:000046CB   PD_OrSm
00:000046D5   PD_SAM
00:000046D6   PD_SAM_
00:000046EC   PD_VOL
00:000046F5   PD_EOff
00:000046FD   PD_SorE
00:00004707   PD_ENV
00:0000470C   PD_ORN
00:00004711   PD_ESAM
00:0000471E   PTDECOD
00:0000472D   PD_LOOP
00:00004730   PD_LP2
00:0000475D   PD_NOIS
00:00004762   PD_REL
00:00004768   PD_NOTE
00:00004770   PD_RES
00:00004782   PD_FIN
00:00004789   C_PORTM
00:000047D4   C_PORTM.NOSIG
00:000047DE   SET_STP
00:000047EA   C_GLISS
00:000047FD   C_SMPOS
00:00004803   C_ORPOS
00:00004809   C_VIBRT
00:00004821   C_ENGLS
00:00004833   C_DELAY
00:00004839   SETENV
00:00004854   C_NOP
00:00004855   SETORN
00:0000486E   SPCCOMS
00:0000488E   CHREGS
00:000048B1   CHREGS.CH_ORPS
00:000048BC   CHREGS.CH_NTP
00:000048C2   CHREGS.CH_NOK
00:000048DD   CHREGS.CH_SMPS
00:000048F3   CHREGS.CH_NOAC
00:0000493A   CHREGS.CH_STPP
00:0000494F   CHREGS.CH_AMP
00:00004961   CHREGS.CH_AMIN
00:00004966   CHREGS.CH_SVAM
00:00004969   CHREGS.CH_NOAM
00:00004972   CHREGS.CH_APOS
00:00004978   CHREGS.CH_VOL
00:00004983 X CHREGS.CH_ENV
00:0000498A   CHREGS.CH_NOEN
00:000049A4   CHREGS.NO_ENAC
00:000049AB   CHREGS.NO_ENSL
00:000049B9   CHREGS.CH_MIX
00:000049BD   CHREGS.CH_EXIT
00:000049DC   CHREGS.CH_ONDL
00:000049E0 X PT3_PLAY
00:00004A14   PT3_PLAY.PLNLP
00:00004A3B   PT3_PLAY.PL1A
00:00004A46   PT3_PLAY.PL1B
00:00004A5B   PT3_PLAY.PL1C
00:00004A70   PT3_PLAY.PL1D
00:00004A76   PT3_PLAY.PL2
00:00004AD8 X PT3_ROUT
00:00004AD9   ROUT_A0
00:00004AE5   ROUT_A0.LOUT
00:00004AF9   NT_DATA
00:00004B09   T_
00:00004B09   TCOLD_0
00:00004B15   TCNEW_1
00:00004B15   TCOLD_1
00:00004B17   TCOLD_2
00:00004B29   TCNEW_3
00:00004B2A   TCOLD_3
00:00004B33   TCNEW_0
00:00004B3E   TCNEW_2
00:00004B49   EMPTYSAMORN
00:00004B4D   T_PACK
00:0000F000   PT3_SETUP
00:0000F001   PT3_MODADDR
00:0000F003   PT3_CrPsPtr
00:0000F005   PT3_SAMPTRS
00:0000F007   PT3_OrnPtrs
00:0000F009   PT3_PDSP
00:0000F00B   PT3_CSP
00:0000F00D   PT3_PSP
00:0000F00F   PT3_PrNote
00:0000F010   PT3_PrSlide
00:0000F012   PT3_AdInPtA
00:0000F014   PT3_AdInPtB
00:0000F016   PT3_AdInPtC
00:0000F018   PT3_LPosPtr
00:0000F01A   PT3_PatsPtr
00:0000F01C   PT3_Delay
00:0000F01D   PT3_AddToEn
00:0000F01E   PT3_Env_Del
00:0000F01F   PT3_ESldAdd
00:0000F021   PT3_NTL3
00:0000F023   VARS
00:0000F023   ChanA
00:0000F040   ChanB
00:0000F05D   ChanC
00:0000F07A   DelyCnt
00:0000F07B   CurESld
00:0000F07D   CurEDel
00:0000F07E   Ns_Base_AddToNs
00:0000F07E   Ns_Base
00:0000F07F   AddToNs
00:0000F080   NT_
00:0000F140   AYREGS
00:0000F140   VT_
00:0000F14E   EnvBase
00:0000F150   VAR0END
00:0000F150   T1_
00:0000F150   T_NEW_1
00:0000F150   T_OLD_1
00:0000F168   T_OLD_2
00:0000F180   T_NEW_3
00:0000F180   T_OLD_3
00:0000F182   T_OLD_0
00:0000F182   T_NEW_0
00:0000F19A   T_NEW_2
00:00004B82   START
00:00004BA5   INIT_CHARS_VARS
00:00004C2B   STAGE1
00:00004C48   MAIN_LOOP
00:00004C53 X MAIN_LOOP.check_tombs
00:00004C6F   MAIN_LOOP.check_john_tomb
00:00004C88   MAIN_LOOP.check_gus_tomb
00:00004CA8   MAIN_LOOP.check_dialog_box
00:00004CB8   MAIN_LOOP.check_gus_dialog
00:00004CC8   MAIN_LOOP.check_john_dialog
00:00004CD6   MAIN_LOOP.animate_ghost
00:00004CF8   MAIN_LOOP.CHANGE_DIR_RIGHT
00:00004D05   MAIN_LOOP.CHANGE_DIR_LEFT
00:00004D0E   MAIN_LOOP.check_pattern
00:00004D29   MAIN_LOOP.change_pattern_L
00:00004D34   MAIN_LOOP.check_pattern_RIGHT
00:00004D47   MAIN_LOOP.change_pattern_R
00:00004D4F   MAIN_LOOP.continue
00:00004D52 X MAIN_LOOP.CHECK_GHOST
00:00004D6E X MAIN_LOOP.KILL_GHOST
00:00004D7B   MAIN_LOOP.check_KB
00:00004D96 X no_arrows
00:00004D9E   SHOOT_MAIN_CHAR
00:00004DD8   SHOOT_MAIN_CHAR.SHOOT_RIGHT
00:00004DE7   SHOOT_MAIN_CHAR.SHOOT_UP
00:00004DFA   SHOOT_MAIN_CHAR.SHOOT_DOWN
00:00004E0A   SHOOT_MAIN_CHAR.CONTINUE
00:00004E0E   STAGE2
00:00004E68   MAIN_LOOP2
00:00004E8D   MAIN_LOOP2.GHOST_DEAD
00:00004E98   MAIN_LOOP2.no_screen_change
00:00004ECA   MAIN_LOOP2.CHANGE_DIR_RIGHT
00:00004ED7   MAIN_LOOP2.CHANGE_DIR_LEFT
00:00004EE0   MAIN_LOOP2.check_pattern
00:00004EFF   MAIN_LOOP2.change_pattern_L
00:00004F0A   MAIN_LOOP2.check_pattern_RIGHT
00:00004F1D   MAIN_LOOP2.change_pattern_R
00:00004F25   MAIN_LOOP2.continue
00:00004F4D X SONG
00:00004FEC   SPRITE_P1_UP
00:000050AC   SPRITE_P1_DOWN
00:0000516C   SPRITE_P1_LEFT
00:0000522C   SPRITE_P1_RIGHT
00:000052EC   SPRITE_PATTERN
00:000055CC   SPRITE_COLOR_TABLE
00:0000564C   SPRITE_COLOR_P1_UP
00:000056AC   SPRITE_COLOR_P1_DOWN
00:0000570C   SPRITE_COLOR_P1_RIGHT
00:0000576C   mapa1
00:00005AAC   mapa2
00:00005DEC X mapa0
00:0000614C   SPRITE_COLOR_P1_LEFT
00:000061AC   BLANK_DATA
00:00006200   PaletteData
06:00008000   FONT
07:00008000   CEMENTER1
09:00008000   GRAPHIC
0D:00008000   CEMENTER2
0F:0000C000   SHOWING_MIKE_DIALOG
0F:0000C001   SHOWING_JOHN_DIALOG
0F:0000C002   SHOWING_GUS_DIALOG
0F:00000008 X FONT_HEIGHT
0F:00000008 X FONT_WIDTH
0F:0000C003   CHR_ACR
0F:0000C005 X PTR_STR_DX
0F:0000C006 X PTR_STR_DY
0F:0000C007 X LAST_KEY_PRESSED
0F:0000C008   OLD_KEY_PRESSED
0F:0000C009   JIFFY_TEMP
0F:0000C00A   CHAR_SPEED_X
0F:0000C00B   CHAR_SPEED_Y
0F:0000C00C   CHAR_SPEED_X_GHOST
0F:0000C00D   CHAR_SPEED_X_GHOST_STG2
0F:0000C00E   CHAR_GHOST_DEAD
0F:0000C00F   CHAR_GHOST_DEAD_STG2
0F:0000C010   CHAR_MIN_STEP_STG2
0F:0000C011   CHAR_DIR_GHOST1
0F:0000C012   CHAR_DIR_GHOST_STG2
0F:0000C013   CHAR_DIR_MAIN
0F:0000C014   CHAR_NEW_DIR_MAIN
0F:0000C015   CHAR_MAIN_SHOOT
0F:0000C016   CHAR_MIN_STEP
0F:0000C017   CHAR_DISTANCE_SHOOT
0F:0000C018   CHAR_SPEED_SHOOT
0F:0000C019   SPRITE_ATTRS
0F:0000C099 X SLOTBIOS
0F:0000C09A X SLOTGAME
0F:0000C09B X SLOTRAM
0F:0000C09C   SPRITE_PTR_REPLACE
0F:0000C09E   SPRITE_COLOR_REPLACE
0F:0000C0A0   SPRITE_COLOR_REPLACE2
0F:0000C0A2   MAPA
0F:0000C0A4   BITMAP


 Output: .\BTH.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: BTH.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00004000  Used: 00002226

   Address   Length Align   Label
   00004000    8736         mike_tomb_strings
   00006220       6         
   00006226    7642       <empty>

 Page: 01
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 02
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 03
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 04
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 05
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 06
  Org: 00008000  Size: 00004000  Used: 000007F7

   Address   Length Align   Label
   00008000    2039         FONT
   000087F7   14345       <empty>

 Page: 07
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER1

 Page: 08
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 09
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         GRAPHIC

 Page: 0A
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0B
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0C
  Org: 00008000  Size: 00004000  Used: 00001400

   Address   Length Align   Label
   00008000    5120         
   00009400   11264       <empty>

 Page: 0D
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER2

 Page: 0E
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 0F
  Org: 0000C000  Size: 00004000  Used: 000000A6

   Address   Length Align   Label
   0000C000     166         SHOWING_MIKE_DIALOG
   0000C0A6   16218       <empty>
