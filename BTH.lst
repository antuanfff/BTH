Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2024.03.14 - 21:06:19]

.\bth.asm
Errors: 0

       1   00:0000                      	output "BTH.rom" 
       2   00:5715                      
       3   00:5715                      ;ROM ASCII16
       4   00:5715                      		defpage	0,0x4000, 0x4000
       5   00:5715                      		defpage	1,0x8000, 0x4000        
       6   00:5715                      		defpage	2..14 ;Here it is determined rom size        
       7   00:5715                              defpage	15,0xC000, 0x4000
       8   00:5715                      
       9   00:5715  (00:4000)           PageSize:	    equ	0x4000	        ; 16kB
      10   00:5715  (00:6000)           _bank1	equ	6000h
      11   00:5715  (00:7000)           _bank2	equ	7000h
      12   00:5715  32 00 70 32 FF 77   		DB 32h,0,70h,32h,0FFh,77h		; Para evitar seleccionar el tipo de ROM ASCII16 en OpenMSX
      13   00:571B  (00)                		page 0			
      14   00:4000                              org 4000h		
      15   00:4000                              dw  4241h,START,0,0,0,0,0,0
      15   00:4000  41 42 DD 41 00 00 00 00 00 00 00 00 00 00 00 00 
      16   00:4010                      
      17   00:4010                      ;Llamadas a rutinas bios
      18   00:4010                          include "include\System_BIOSCalls.asm"
       1.  00:4010  (00:009F)           CHGET                   equ #009F    ; Se queda esperando que se pulse una tecla
       2.  00:4010  (00:00A2)           CHPUT                   equ #00A2    ; escribe el caracter ascii almacenado en a                         
       3.  00:4010  (00:005F)           CHGMOD                  equ #005F   ; Cambia el modo de screen pero previamente necesita que se le asigne el modo en el registro a
       4.  00:4010  (00:005C)           LDIRVM                  equ #005C   ;Tansfiere bloques de la RAM a la VRAM, es la más importante, necesita previamente asignar valor al registro bc con la longitud, dc con la dirección de inicio de la VRAM y hl con la dirección de inicio de la RAM:
       5.  00:4010  (00:013E)           RDVDP                   equ #013E    ; Lee el registro de estado del VDP
       6.  00:4010  (00:0047)           WRTVDP                  equ #0047   ; Escribe en los registros del VDP 
       7.  00:4010  (00:F3DB)           CLIKSW                  equ $F3DB ; Keyboard click sound
       8.  00:4010  (00:0141)           SNSMAT					equ #0141
       9.  00:4010  (00:FC9E)           JIFFY 					equ #FC9E
      10.  00:4010  (00:0041)           DISSCR                  equ #0041   ; Disable screen
      11.  00:4010  (00:0044)           ENASCR                  equ #0044   ; Enable screen
      12.  00:4010  (00:0072)           INIGRP                  equ #0072   ; Enable Screen 2
      13.  00:4010  (00:0138)           RSLREG                  equ #0138   ; Leemos el contenido del registro de seleccion de slots
      14.  00:4010  (00:0024)           ENASLT                  equ #0024   ; Switches indicated slot at indicated page on perpetually Input    : A - Slot ID, see RDSLT            H - Bit 6 and 7 must contain the page number (00-11)
      19   00:4010                      
      20   00:4010                      ;Constantes
      21   00:4010                          include "include\BTH_const.asm"
       1.  00:4010  (00:0001)           ROMMODE                 equ 1 ; 0 Dos Mode 1 Rom Mode
       2.  00:4010  (00:0007)           KB_RIGHT 				equ 7
       3.  00:4010  (00:0006)           KB_DOWN 				equ 6
       4.  00:4010  (00:0005)           KB_UP 					equ	5        
       5.  00:4010  (00:0004)           KB_LEFT 				equ	4
       6.  00:4010  (00:0003)           KB_DEL 					equ	3
       7.  00:4010  (00:0000)           KB_SPACE				equ	0
       8.  00:4010                      
       9.  00:4010  (00:0001)           MOV_SPEED				equ 1
      10.  00:4010  (00:0001)           MOV_SPEED_GHOST			equ 1
      11.  00:4010  (00:0003)           MOV_SPEED_SHOOT         equ 3
      12.  00:4010  (00:0030)           MAX_DISTANCE_SHOOT      equ 48
      13.  00:4010  (00:0004)           MAX_CHAR_STEPS          equ 4       ; #steps pattern change MAIN CHAR
      14.  00:4010  (00:FFE8)           REG9SAV                 equ #FFE8
      15.  00:4010  (00:0098)           PORT_0                  equ 0x98
      16.  00:4010  (00:0099)           PORT_1                  equ 0x99
      17.  00:4010  (00:009A)           PORT_2                  equ 0x9a
      18.  00:4010  (00:009B)           PORT_3                  equ 0x9b
      19.  00:4010                      
      20.  00:4010  (00:F3E0)           RG15AV equ #F3E0 ; alamcena el valor del registro 1 de escritura del VDP, hay unas rutinas de la bios que guardan es entas direcciones valores globals del sistema
      21.  00:4010  (00:F3E9)           FORCLR equ $F3E9 ; Foreground colour
      22.  00:4010                      
      22   00:4010                      
      23   00:4010                      ; Funciones auxiliares
      24   00:4010                      	include "include\BTH_func.asm"
       1.  00:4010                      ; Dadas las coordenadas X,Y en pixels de dos sprites, devuelve 1 si hay colision
       2.  00:4010                      ;Entrada:
       3.  00:4010                      ;   b - Y SPR1
       4.  00:4010                      ;   C - X SPR1
       5.  00:4010                      
       6.  00:4010                      ;   d - Y SPR2
       7.  00:4010                      ;   e - X SPR2
       8.  00:4010                      ;Salida:
       9.  00:4010                      ;   a - bloque
      10.  00:4010                      ;Modifica:
      11.  00:4010                      ;   a, hl, de
      12.  00:4010                      check_spr_collision:        
      13.  00:4010  78                          LD A,B          ; a = Y SPR1
      14.  00:4011  BA                          CP D
      15.  00:4012  C2 1D 40                    JP NZ,.no_collision
      16.  00:4015                      
      17.  00:4015  79                          LD A,C          ; a = X SPR1
      18.  00:4016  BB                          CP E
      19.  00:4017  C2 1D 40                    JP NZ,.no_collision
      20.  00:401A                      
      21.  00:401A  3E 01                       LD A,1
      22.  00:401C  C9                          RET
      23.  00:401D                      .no_collision
      24.  00:401D  3E 00                   LD A,0
      25.  00:401F  C9                      RET
      26.  00:4020                      
      27.  00:4020                      ; Dadas las coordenadas X,Y en pixels, devuelve el bloque de 8x8 al que corresponde esas coordenadas
      28.  00:4020                      ; La tabla de colisiones es la tabla de nombres con 32x24 = 756 bytes
      29.  00:4020                      ;Entrada:
      30.  00:4020                      ;   d - X
      31.  00:4020                      ;   e - y
      32.  00:4020                      ;Salida:
      33.  00:4020                      ;   a - bloque
      34.  00:4020                      ;Modifica:
      35.  00:4020                      ;   a, hl, de
      36.  00:4020                      get_bloque_en_X_Y:
      37.  00:4020                              ;(y/8)*32+(x/8)
      38.  00:4020  7B                          ld a,e      ;a=y
      39.  00:4021  CB 3F CB 3F CB 3F   [3]     srl a       ;a=y/8
      40.  00:4027  26 00                       ld h,0
      41.  00:4029  6F                          ld l,a      ;hl=y/8
      42.  00:402A  29 29 29 29 29      [5]     add hl,hl   ;x32    ;a=(y/8)*32
      43.  00:402F                      
      44.  00:402F  7A                          ld a,d      ;a=x
      45.  00:4030  CB 3F CB 3F CB 3F   [3]     srl a       ;a=x/8
      46.  00:4036  16 00                       ld d,0
      47.  00:4038  5F                          ld e,a      ;de=x/8
      48.  00:4039  19                          add hl,de   ;hl=(y/8)*32+(x/8)
      49.  00:403A                      
      50.  00:403A  ED 5B 95 C0                 ld de,(MAPA)
      51.  00:403E  19                          add hl,de   ;hl=mapa + hl=(y/8)*32+(x/8)
      52.  00:403F                      
      53.  00:403F  7E                          ld a,[hl]
      54.  00:4040  C9                          ret
      55.  00:4041                      
      56.  00:4041                      ; SCREEN 8
      57.  00:4041                      SetVdp_Write:
      58.  00:4041                      
      59.  00:4041                      	; transform address from 
      60.  00:4041                      	;
      61.  00:4041                      	; |           Register A            |           Register H            |           Register L            |
      62.  00:4041                      	; | --- --- --- --- --- --- --- A16 | A15 A14 A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      63.  00:4041                      	;
      64.  00:4041                      	; to
      65.  00:4041                      	;
      66.  00:4041                      	; |           Register A            |           Register H            |           Register L            |
      67.  00:4041                      	; | --- --- --- --- --- A16 A15 A14 | --- --- A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      68.  00:4041  CB 04                   rlc     h
      69.  00:4043  17                      rla
      70.  00:4044  CB 04                   rlc     h
      71.  00:4046  17                      rla
      72.  00:4047  CB 3C                   srl     h
      73.  00:4049  CB 3C                   srl     h
      74.  00:404B                      
      75.  00:404B  F3                      di
      76.  00:404C                      	    ; write bits a14-16 of address to R#14
      77.  00:404C  D3 99               	    out     (PORT_1), a
      78.  00:404E  3E 8E               	    ld      a, 14 + 128
      79.  00:4050  D3 99               	    out     (PORT_1), a
      80.  00:4052                      
      81.  00:4052                      	    ; write the other address bits to VDP PORT_1
      82.  00:4052  7D                  	    ld      a, l
      83.  00:4053  00                  	    nop
      84.  00:4054  D3 99               	    out     (PORT_1), a
      85.  00:4056  7C                  	    ld      a, h
      86.  00:4057  F6 40               	    or      64
      87.  00:4059  FB                      ei
      88.  00:405A  D3 99                   out     (PORT_1),a
      89.  00:405C  C9                      ret
      90.  00:405D                      
      91.  00:405D                      Set212Lines:
      92.  00:405D                              ; set LN (bit 7) of R#9 to 1
      93.  00:405D  3A E8 FF                    ld      a, (REG9SAV)
      94.  00:4060  F6 80                       or      10000000b
      95.  00:4062  47                          ld      b, a
      96.  00:4063  0E 09                       ld      c, 9            ; register #
      97.  00:4065  CD 47 00                    call    WRTVDP
      98.  00:4068  C9                          ret
      99.  00:4069                      
     100.  00:4069                      ClearVram_MSX2:
     101.  00:4069  AF                          xor     a           ; set vram write base address
     102.  00:406A  21 00 00                    ld      hl, 0     	; to 1st byte of page 0
     103.  00:406D  CD 41 40                    call    SetVdp_Write
     104.  00:4070  AF                          xor		a
     105.  00:4071                      
     106.  00:4071                          ; TODO: 
     107.  00:4071                          ;   use VDP command (currently is taking almost 1 second)
     108.  00:4071                          ;   disable screen/sprites (should I ??)
     109.  00:4071                      
     110.  00:4071                          ; clear all 128kb of VRAM
     111.  00:4071  16 02               	ld		d, 2		; 2 repetitions
     112.  00:4073                      .loop_2:
     113.  00:4073  0E 00               	ld		c, 0		; 256 repetitions
     114.  00:4075                      .loop_1:
     115.  00:4075  06 00               	ld		b, 0		; 256 repetitions
     116.  00:4077                      .loop:
     117.  00:4077  D3 98               	out		(PORT_0), a
     118.  00:4079  10 FC               	djnz	.loop
     119.  00:407B  0D                  	dec		c
     120.  00:407C  C2 75 40            	jp		nz, .loop_1
     121.  00:407F  15                  	dec		d
     122.  00:4080  C2 73 40            	jp		nz, .loop_2
     123.  00:4083                      
     124.  00:4083  C9                  	ret
     125.  00:4084                      
     126.  00:4084                      ; MEGAROM
     127.  00:4084                      
     128.  00:4084                      opening_screen		
     129.  00:4084  0E 00               		ld		c,0
     130.  00:4086  11 00 00            		ld		de,0
     131.  00:4089  CD C9 40            		call	_vdpsetvramwr
     132.  00:408C  1E 04               		ld	e,4
     133.  00:408E  3E 09               		ld	a, :GRAPHIC
     134.  00:4090  57                  		ld	d,a
     135.  00:4091  32 00 70            2:		ld	(_bank2),a
     136.  00:4094  21 00 80            		ld	hl,GRAPHIC
     137.  00:4097  01 98 00            		ld	bc,0x98
     138.  00:409A  3E 40               		ld	a,32*2
     139.  00:409C  ED B3               1:		otir
     140.  00:409E  3D                  		dec	a
     141.  00:409F  20 FB               		jr	nz,1b
     142.  00:40A1  14                  		inc	d
     143.  00:40A2  7A                  		ld	a,d
     144.  00:40A3  1D                  		dec	e
     145.  00:40A4  20 EB               		jr	nz,2b
     146.  00:40A6  C9                  		ret 
     147.  00:40A7                      
     148.  00:40A7                      load_screen
     149.  00:40A7  0E 00               		ld		c,0
     150.  00:40A9  11 00 00            		ld		de,0
     151.  00:40AC  CD C9 40            		call	_vdpsetvramwr
     152.  00:40AF  1E 02               		ld	e,2					; #pages
     153.  00:40B1  78                  		ld	a, b			; 1st page bitmap
     154.  00:40B2  57                  		ld	d,a
     155.  00:40B3  32 00 70            2:		ld	(_bank2),a
     156.  00:40B6  2A 97 C0            		ld	hl,(BITMAP)		; Bitmap address
     157.  00:40B9  01 98 00            		ld	bc,0x98
     158.  00:40BC  3E 40               		ld	a,64
     159.  00:40BE  ED B3               1:		otir
     160.  00:40C0  3D                  		dec	a
     161.  00:40C1  20 FB               		jr	nz,1b
     162.  00:40C3  14                  		inc	d
     163.  00:40C4  7A                  		ld	a,d
     164.  00:40C5  1D                  		dec	e
     165.  00:40C6  20 EB               		jr	nz,2b
     166.  00:40C8  C9                  		ret 
     167.  00:40C9                      
     168.  00:40C9                      ;Set VDP for writing at address CDE (17-bit) 
     169.  00:40C9                      
     170.  00:40C9                      _vdpsetvramwr:
     171.  00:40C9  79                  	ld a,c
     172.  00:40CA  CB 02               	rlc d
     173.  00:40CC  17                  	rla
     174.  00:40CD  CB 02               	rlc d
     175.  00:40CF  17                  	rla
     176.  00:40D0  CB 3A               	srl d ; primo shift, il secondo dopo la out
     177.  00:40D2                      
     178.  00:40D2  D3 99               	out (0x99),a ;set bits 14-16
     179.  00:40D4  3E 8E               	ld a,14+128
     180.  00:40D6  D3 99               	out (0x99),a
     181.  00:40D8  CB 3A               	srl d ; secondo shift.     
     182.  00:40DA                      _vdpsetvramwr14
     183.  00:40DA  7B                  	ld a,e ;set bits 0-7
     184.  00:40DB  D3 99               	out (0x99),a
     185.  00:40DD  7A                  	ld a,d ;set bits 8-13
     186.  00:40DE  F6 40               	or 0x40 ; + write access
     187.  00:40E0  D3 99               	out (0x99),a
     188.  00:40E2  C9                  	ret
     189.  00:40E3                      
     190.  00:40E3                      
     191.  00:40E3                      
     192.  00:40E3                      		; --- RUTINAS PARA COLOCAR LAS PAGINAS DEL CARTUCHO ---
     193.  00:40E3                      		; -----------------------------------------------------
     194.  00:40E3                      		; --- SIEMPRE DEBEN IR EN LA PAGINA 1 DEL CARTUCHO! ---
     195.  00:40E3                      		; -----------------------------------------------------
     196.  00:40E3                      
     197.  00:40E3                      		; --- RUTINAS PRINCIPALES DEL MODULO ---
     198.  00:40E3                      		; GETSLOT:	OBTIENE EL VALOR DEL SLOT QUE LE INDIQUEMOS
     199.  00:40E3                      		; SETPAGES32K:	BIOS-ROM-YY-ZZ	 -> BIOS-ROM-ROM-ZZ (SITUA PAGINA 2)
     200.  00:40E3                      
     201.  00:40E3                      		; --- VARIABLES EN RAM NECESARIAS ---
     202.  00:40E3                      		; NINGUNA
     203.  00:40E3                      
     204.  00:40E3                      GETSLOT:	; --- Rutina que construye el valor del SLOT para llamar a ENASLT ---
     205.  00:40E3                      		; --- Entrada: a = SLOT                                           ---
     206.  00:40E3                      		; --- Salida: a = valor para ENASLT                               ---
     207.  00:40E3                      		; --- AUTOR: Konamiman                                            ---
     208.  00:40E3  E6 03               		and	$03				; Proteccion, nos aseguramos de que el valor esta en 0-3
     209.  00:40E5  4F                  		ld	c,a				; c = slot de la pagina
     210.  00:40E6  06 00               		ld	b,0				; bc = slot de la pagina
     211.  00:40E8  21 C1 FC            		ld	hl,$FCC1			; Tabla de slots expandidos
     212.  00:40EB  09                  		add	hl,bc				; hl -> variable que indica si este slot esta expandido
     213.  00:40EC  7E                  		ld	a,(hl)				; Tomamos el valor
     214.  00:40ED  E6 80               		and	$80				; Si el bit mas alto es cero...
     215.  00:40EF  28 09               		jr	z,EXIT			; ...nos vamos a @@EXIT
     216.  00:40F1                      		; --- El slot esta expandido ---
     217.  00:40F1  B1                  		or	c				; Slot basico en el lugar adecuado
     218.  00:40F2  4F                  		ld	c,a				; Guardamos el valor en c
     219.  00:40F3  23                  		inc	hl				; Incrementamos hl una...
     220.  00:40F4  23                  		inc	hl				; ...dos...
     221.  00:40F5  23                  		inc	hl				; ...tres...
     222.  00:40F6  23                  		inc	hl				; ...cuatro veces
     223.  00:40F7  7E                  		ld	a,(hl)				; a = valor del registro de subslot del slot donde estamos
     224.  00:40F8  E6 0C               		and	$0C				; Nos quedamos con el valor donde esta nuestro cartucho
     225.  00:40FA  B1                  EXIT:		or	c				; Slot extendido/basico en su lugar
     226.  00:40FB  C9                  		ret					; Volvemos
     227.  00:40FC                      
     228.  00:40FC                      SETPAGES32K:	; --- Posiciona las paginas de un megarom o un 32K ---
     229.  00:40FC  3E C9               		ld	a,$C9				; Codigo de RET
     230.  00:40FE  32 01 41            		ld	(NOPRET),a			; Modificamos la siguiente instruccion si estamos en RAM
     231.  00:4101  00                  NOPRET:	nop					; No hacemos nada si no estamos en RAM
     232.  00:4102                      		; --- Si llegamos aqui no estamos en RAM, hay que posicionar la pagina ---
     233.  00:4102  CD 38 01            		call	RSLREG  			; Leemos el contenido del registro de seleccion de slots
     234.  00:4105  0F                  		rrca					; Rotamos a la derecha...
     235.  00:4106  0F                  		rrca					; ...dos veces
     236.  00:4107  CD E3 40            		call	GETSLOT				; Obtenemos el slot de la pagina 1 ($4000-$BFFF)
     237.  00:410A  26 80               		ld	h,$80				; Seleccionamos pagina 2 ($8000-$BFFF)
     238.  00:410C  C3 24 00            		jp	ENASLT ;ENASLT
     239.  00:410F                      
     240.  00:410F                      SET_SCREEN5_MODE:
     241.  00:410F                           ;Cambiamos el modo de pantalla
     242.  00:410F                          ; BASIC: COLOR 15,1,1
     243.  00:410F                          ; Establecer los colores
     244.  00:410F  21 E9 F3            	ld hl,FORCLR ; Variable del Sistema
     245.  00:4112  36 0F               	ld [hl],15 ; Color del primer plano 15=blanco
     246.  00:4114  23                  	inc hl ; FORCLR+1
     247.  00:4115  36 01               	ld [hl],1 ; Color de fondo 1=negro
     248.  00:4117  23                  	inc hl ; FORCLR+2
     249.  00:4118  36 01               	ld [hl],1 ; Color del borde 1=negro
     250.  00:411A                      
     251.  00:411A  3E 05                   ld  a,5     ; La rutina CHGMOD nos obliga a poner en el registro A el modo de pantalla que queremos
     252.  00:411C  CD 5F 00                call CHGMOD ; Mira arriba, pone la explicación
     253.  00:411F                      ;
     254.  00:411F  3A E0 F3                ld a,(RG15AV) ; esta dirección de memoria almacena el valor del registro de lectura del VDP, mira arriba
     255.  00:4122                          ;En or 0+0=0, 0+1=1, 1+1=1
     256.  00:4122                          ;En and 0+0=0, 0+1=0, 1+1=1
     257.  00:4122                          ;Con eso queremos cambiar los bits 7 y 8 del registro de escritura 1 del z80, queremos poner el 7 a 1 y también el 8 a 1
     258.  00:4122                          ;el bit 7 del registro 1 pone los sprites en modo 16x16 (los que nostros queremos dibujar)
     259.  00:4122                          ;el bit 8 queremos desactivarlo para no utilizar los sprites agrandados
     260.  00:4122  F6 02                   or 00000010b ; con or poniendo un 0 siempre respetamos los bits que hay y poniendo 1 1 obligamos a que sea 1
     261.  00:4124                          ;and 11111110b ; con and obligamos a que el ultimo bit valga 0
     262.  00:4124  E6 FE                   and 11111110b ; con and obligamos a que el ultimo bit valga 0
     263.  00:4126                      
     264.  00:4126  47                      ld b,a ;carga en b el valor de a
     265.  00:4127  0E 01                   ld c,1 ; La rutina WRTVDP necesta que le carguemos previamente el entero en C del z80 del registro que queroms modificar
     266.  00:4129  CD 47 00                call WRTVDP ;Escribe en los registros del VDP 
     267.  00:412C  AF                      xor a ; ld a,0
     268.  00:412D  32 DB F3            	ld [CLIKSW],a ; Variable BIOS desactivar sonido teclas
     269.  00:4130  C9                      ret
     270.  00:4131                      
     271.  00:4131                      DUMP_SPR_ALL:
     272.  00:4131                      
     273.  00:4131                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     274.  00:4131                      
     275.  00:4131  21 65 49                ld hl, SPRITE_PATTERN ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     276.  00:4134  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     277.  00:4137  01 80 01                ld bc, 8*4*12; 8 byte de cada tile * 4 que son los sprites de 16x16 y * #sprites
     278.  00:413A  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     279.  00:413D                      
     280.  00:413D                      ;-----------------------------Definición de los atributos en #7600 y volcado a la VRAM------------------------------------
     281.  00:413D                      
     282.  00:413D  21 0C C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     283.  00:4140  11 00 76                ld de, #7600; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     284.  00:4143  01 80 00                ld bc,128; 4 x #Sprites
     285.  00:4146  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     286.  00:4149                      
     287.  00:4149                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     288.  00:4149                      
     289.  00:4149  21 05 4B                ld hl, SPRITE_COLOR_TABLE ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     290.  00:414C  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     291.  00:414F  01 A0 00                ld bc,16*10; 16 x #Sprites
     292.  00:4152  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     293.  00:4155  C9                      ret
     294.  00:4156                      	
     295.  00:4156                      DUMP_SPR_ATTS:
     296.  00:4156                      
     297.  00:4156                      ;-----------------------------Definición de los atributos en #1E00 y volcado a la VRAM------------------------------------
     298.  00:4156                      
     299.  00:4156  21 0C C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     300.  00:4159  11 00 76                ld de, #7600	; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     301.  00:415C  01 14 00                ld bc,20		; 5 x #Sprites
     302.  00:415F  CD 5C 00                call  LDIRVM 	; Mira arriba, pone la explicación
     303.  00:4162                      
     304.  00:4162                      ;	ld a, (SPRITE_COLOR_REPLACE2)
     305.  00:4162                      ;	JP Z,.DUMP_SPR_ATTS_END
     306.  00:4162  2A 93 C0            	ld hl, (SPRITE_COLOR_REPLACE2) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     307.  00:4165  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     308.  00:4168  C5                      PUSH BC
     309.  00:4169  01 30 00            	ld bc,16*3; 16 x #Sprites
     310.  00:416C  CD 5C 00                call  LDIRVM 
     311.  00:416F  C1                  	POP BC
     312.  00:4170                      
     313.  00:4170                      .DUMP_SPR_ATTS_END:
     314.  00:4170  C9                      ret
     315.  00:4171                      
     316.  00:4171                      DUMP_SPR_P1:    
     317.  00:4171                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     318.  00:4171                      
     319.  00:4171  2A 8F C0                ld hl, (SPRITE_PTR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     320.  00:4174  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     321.  00:4177  C5                      PUSH BC
     322.  00:4178  01 C0 00            	ld bc, 192; 32 bytes por sprite * 3 planos * 2 frames
     323.  00:417B  CD 5C 00                call  LDIRVM 
     324.  00:417E  C1                  	POP BC
     325.  00:417F                      
     326.  00:417F                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     327.  00:417F                      
     328.  00:417F  2A 91 C0                ld hl, (SPRITE_COLOR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     329.  00:4182  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     330.  00:4185  C5                      PUSH BC
     331.  00:4186  01 30 00            	ld bc,16*3; 16 x #Sprites
     332.  00:4189  CD 5C 00                call  LDIRVM 
     333.  00:418C  C1                  	POP BC
     334.  00:418D                      	
     335.  00:418D                      
     336.  00:418D                      ; Replace 4 sprites(P1) in Sprite Pattern Table
     337.  00:418D                      ;    xor a
     338.  00:418D                      ;	di			; set VRAM address to 1800h
     339.  00:418D                      ;	out (99h),a		; lower byte 00
     340.  00:418D                      ;	ld a,78h + 040h		; upper byte 7800h with flag to set the bus in write mode (3800 VRAM: Sprite Pattern Table)
     341.  00:418D                      ;	ei
     342.  00:418D                      ;	out (99h),a		; note that this is protected by the ei instruction
     343.  00:418D                      ;   push BC
     344.  00:418D                      ;	ld bc,8098h     ; 80h = 128 bytes y port 98h 
     345.  00:418D                      ;	ld hl,(SPRITE_PTR_REPLACE)
     346.  00:418D                      
     347.  00:418D                      ;.loop1:
     348.  00:418D                      ;	outi			; send the data (HL) to port 98h 
     349.  00:418D                      ;	jp nz,.loop1		; the inner loop is exactly 29 cycles. 
     350.  00:418D                      ;   POP BC
     351.  00:418D                      
     352.  00:418D                          ; Replace 2 entries in sprite color table
     353.  00:418D                      ;    xor a
     354.  00:418D                      ;	di			; set VRAM address to 1800h
     355.  00:418D                      ;	out (99h),a		; lower byte 00
     356.  00:418D                      ;	ld a,74h + 040h		; upper byte 7400h with flag to set the bus in write mode (1C00 VRAM: Sprite Color Table)
     357.  00:418D                      ;	ei
     358.  00:418D                      ;	out (99h),a		; note that this is protected by the ei instruction
     359.  00:418D                       ;   push BC
     360.  00:418D                      ;	ld bc,2098h     ; 20h = 32 bytes y port 98h 
     361.  00:418D                      ;	ld hl,(SPRITE_COLOR_REPLACE)
     362.  00:418D                      	
     363.  00:418D                      ;.loop2:
     364.  00:418D                      ;	outi			; send the data (HL) to port 98h 
     365.  00:418D                      ;	jp nz,.loop2		; the inner loop is exactly 29 cycles. 
     366.  00:418D                       ;   POP BC
     367.  00:418D                      
     368.  00:418D  C9                      ret
      25   00:418E                      	include "include\SETPAGES48K.asm"
       1.  00:418E                      		; -----------------------------------------------------
       2.  00:418E                      		; --- RUTINAS PARA COLOCAR LAS PAGINAS DEL CARTUCHO ---
       3.  00:418E                      		; --- MODO 48K                                      ---
       4.  00:418E                      		; -----------------------------------------------------
       5.  00:418E                      		; --- SIEMPRE DEBEN IR EN LA PAGINA 1 DEL CARTUCHO! ---
       6.  00:418E                      		; -----------------------------------------------------
       7.  00:418E                      
       8.  00:418E                      		; --- RUTINAS PRINCIPALES DEL MODULO ---
       9.  00:418E                      		; SETPAGES48K:	BIOS-ROM-YY-ZZ	 -> ROM-ROM-ROM-ZZ (SITUA PAGINAS 2 Y 0, EN ESTE ORDEN)
      10.  00:418E                      		;               ADEMAS GUARDA LOS SLOTS DEL JUEGO Y LA BIOS POR SI HAY QUE INTERCAMBIAR
      11.  00:418E                      		; SETGAMEPAGE0:	XX-ROM-YY-ZZ     -> ROM-ROM-YY-ZZ (NO TOCA LA PAGINA 2)
      12.  00:418E                      		; RESTOREBIOS:  XX-ROM-YY-ZZ     -> BIOS-ROM-YY-ZZ (VUELVE A SITUAR LA BIOS)
      13.  00:418E                      		; SETPAGE0:	POSICIONA SLOT EN LA PAGINA 0
      14.  00:418E                      
      15.  00:418E                      		; --- VARIABLES EN RAM NECESARIAS ---
      16.  00:418E                      		; SLOTBIOS:	BYTE PARA ALMACENAR EL SLOT DE LA BIOS
      17.  00:418E                      		; SLOTGAME:	BYTE PARA ALMACENAR EL SLOT DEL JUEGO
      18.  00:418E                      
      19.  00:418E                      		;INCLUDE	"SETPAGES32K.ASM"
      20.  00:418E                      
      21.  00:418E                      SETPAGES48K:	; --- Posiciona las paginas de un cartucho de 48K ---
      22.  00:418E  CD FC 40            		call	SETPAGES32K			; Colocamos la pagina 2 del cartucho
      23.  00:4191                      		; --- Guardamos el slot de la BIOS por si tenemos que restaurarla ---
      24.  00:4191  3A C1 FC            		ld	a,[$FCC1]			; Valor del slot de la BIOS
      25.  00:4194  32 8C C0            		ld	[SLOTBIOS],a			; Grabamos el slot de la BIOS para recuperarlo si hace falta
      26.  00:4197                      		; --- Guardamos el slot del juego por si hay que restaurarlo ---
      27.  00:4197  CD 38 01            		call	RSLREG				; Leemos el contenido del registro de seleccion de slots
      28.  00:419A  0F                  		rrca					; Rotamos a la derecha...
      29.  00:419B  0F                  		rrca					; ...dos veces
      30.  00:419C  CD E3 40            		call	GETSLOT				; Obtenemos el slot de la pagina 1 ($4000-$7FFF) y volvemos
      31.  00:419F  32 8D C0            		ld	[SLOTGAME],a			; Grabamos el slot del juego para recuperarlo si hace falta
      32.  00:41A2                      SETGAMEPAGE0:	; --- RUTINA QUE POSICIONA LA PAGINA 0 DEL JUEGO ---
      33.  00:41A2                      		; ---     ANTES HAY QUE LLAMAR A SETPAGES48K     ---
      34.  00:41A2  3A 8D C0            		ld	a,[SLOTGAME]			; Leemos el slot del juego
      35.  00:41A5  C3 AB 41            		jp	SETPAGE0			; Situamos la pagina 0 del juego y volvemos
      36.  00:41A8                      RESTOREBIOS:	; --- RUTINA QUE VUELVE A SITUAR LA BIOS ---
      37.  00:41A8                      		; --- ANTES HAY QUE LLAMAR A SETPAGES48K ---
      38.  00:41A8  3A 8C C0            		ld	a,[SLOTBIOS]			; Leemos el slot de la BIOS
      39.  00:41AB                      SETPAGE0:	; --- RUTINA QUE POSICIONA SLOT EN LA PAGINA 0 ---
      40.  00:41AB                      		; --- AUTOR: Ramones                           ---
      41.  00:41AB                      		; --- ENTRADA: a = slot con formato FxxxSSPP   ---
      42.  00:41AB  F3                  		di					; Desactivamos las interrupciones
      43.  00:41AC  47                  		ld	b,a				; Guardamos el slot
      44.  00:41AD  DB A8               		in	a,[$0A8]			; Leemos el registro principal de slots
      45.  00:41AF  E6 FC               		and	$FC				; Nos quedamos con los valores de las tres paginas superiores
      46.  00:41B1  57                  		ld	d,a				; D = Valor del slot primario
      47.  00:41B2  78                  		ld	a,b				; Recuperamos el slot
      48.  00:41B3  E6 03               		and	$03				; Nos fijamos en el slot primario
      49.  00:41B5  B2                  		or	d				; Colocamos los bits de las paginas superiores
      50.  00:41B6  57                  		ld	d,a				; Guardamos en D el valor final para el slot primario
      51.  00:41B7                      		; Comprobamos si esta expandido
      52.  00:41B7  78                  		ld	a,b				; Recuperamos el slot
      53.  00:41B8  CB 7F               		bit	7,a				; Miramos el bit de expansion
      54.  00:41BA  28 1D               		jr	z,.SETPRIMARY			; ...y saltamos si no esta expandido
      55.  00:41BC                      		; Si llegamos aqui el slot esta expandido
      56.  00:41BC  E6 03               		and	03h				; Nos quedamos con el slot primario
      57.  00:41BE  0F                  		rrca					; Rotamos ciclicamente a la derecha una...
      58.  00:41BF  0F                  		rrca					; ...y dos veces
      59.  00:41C0  4F                  		ld	c,a				; Guardamos el valor en c
      60.  00:41C1  7A                  		ld	a,d				; Recuperamos el valor final para el slot primario
      61.  00:41C2  E6 3F               		and	$3F				; Nos quedamos con las paginas 0, 1 y 2
      62.  00:41C4  B1                  		or	c				; Colocamos los bits para la pagina 3
      63.  00:41C5  4F                  		ld	c,a				; C:=valor del slot primario incluso en pagina 3
      64.  00:41C6  78                  		ld	a,b				; Recuperamos otra vez el slot
      65.  00:41C7  E6 0C               		and	$0C				; Nos quedamos con el valor del subslot
      66.  00:41C9  0F                  		rrca					; Rotamos ciclicamente a la derecha una...
      67.  00:41CA  0F                  		rrca					; ...y dos veces
      68.  00:41CB  47                  		ld	b,a				; B:= Slot expandido en pagina 3
      69.  00:41CC  79                  		ld	a,c				; valor del slot primario incluyendo pagina 3
      70.  00:41CD  D3 A8               		out	[$A8],a				; Slots : Primario, xx, xx, Primario
      71.  00:41CF  3A FF FF            		ld	a,[$FFFF]			; Leemos registro de seleccion de subslots
      72.  00:41D2  2F                  		cpl					; Complementamos (recordemos que siempre hay que complementarlo)
      73.  00:41D3  E6 FC               		and	$FC				; Nos quedamos con las paginas superiores
      74.  00:41D5  B0                  		or	b				; Colocamos el valor del slot expandido en pagina 0
      75.  00:41D6  32 FF FF            		ld	[$FFFF],a			; Seleccionamos el slot expandido
      76.  00:41D9                      .SETPRIMARY:	; --- Colocamos el slot primario ---
      77.  00:41D9  7A                  		ld	a,d				; Valor final del slot primario
      78.  00:41DA  D3 A8               		out	[$A8],a				; Slots: Seleccionado, xx, xx, Ram
      79.  00:41DC  C9                  		ret					; Volvemos
      26   00:41DD                      
      27   00:41DD                      START
      28   00:41DD                      	; CODE
      29   00:41DD                      	;LD A,8
      30   00:41DD                      	;CALL CHGMOD    	
      31   00:41DD  CD FC 40                CALL SETPAGES32K
      32   00:41E0                      ;	CALL opening_screen
      33   00:41E0  3E 01               	LD A,1
      34   00:41E2  32 00 70            	LD (_bank2),A
      35   00:41E5                      ;	CALL CHGET
      36   00:41E5                      	; Empieza el juego    
      37   00:41E5  CD 69 40            	call ClearVram_MSX2		
      38   00:41E8  CD 0F 41            	call SET_SCREEN5_MODE    
      39   00:41EB  CD 5D 40                call Set212Lines
      40   00:41EE  21 00 80                LD HL, CEMENTER1
      41   00:41F1  22 97 C0                LD (BITMAP), HL
      42   00:41F4  06 07                   LD B, :CEMENTER1
      43   00:41F6  CD A7 40                call load_screen
      44   00:41F9                          
      45   00:41F9  CD 0E 42                call INIT_CHARS_VARS
      46   00:41FC  3E FF                   LD A, -MOV_SPEED_GHOST
      47   00:41FE  32 03 C0            	LD (CHAR_SPEED_X_GHOST), A
      48   00:4201  CD 31 41                call DUMP_SPR_ALL
      49   00:4204  21 95 4C                LD HL, mapa1
      50   00:4207  22 95 C0                LD (MAPA), HL
      51   00:420A  CD 7C 42                call MAIN_LOOP
      52   00:420D                          ;CALL CHGET
      53   00:420D  C9                  	ret
      54   00:420E                      
      55   00:420E                      
      56   00:420E                      INIT_CHARS_VARS:    
      57   00:420E  DD 21 0C C0             ld ix, SPRITE_ATTRS           
      58   00:4212                          
      59   00:4212  DD 36 00 07             ld (ix), 07h        ; Sprite 1 - $AF abajo
      60   00:4216  DD 36 01 09             ld (ix+1), 09h
      61   00:421A  DD 36 02 00             ld (ix+2), 00h    
      62   00:421E                      
      63   00:421E  DD 36 04 07             ld (ix+4), 07h     ; Sprite 2
      64   00:4222  DD 36 05 09             ld (ix+5), 09h
      65   00:4226  DD 36 06 04             ld (ix+6), 04h        
      66   00:422A                      
      67   00:422A  DD 36 08 07             ld (ix+8), 07h     ; Sprite 3
      68   00:422E  DD 36 09 09             ld (ix+9), 09h
      69   00:4232  DD 36 0A 08             ld (ix+10), 08h        
      70   00:4236                      
      71   00:4236  DD 36 0C 07             ld (ix+12), $07      ; Sprite 1 - Ghost
      72   00:423A  DD 36 0D B9             ld (ix+13), $B9
      73   00:423E  DD 36 0E 18             ld (ix+14), $18
      74   00:4242                          
      75   00:4242  AF                      XOR A
      76   00:4243  32 00 C0                LD (JIFFY_TEMP),A
      77   00:4246  32 01 C0                LD (CHAR_SPEED_X),A
      78   00:4249  32 02 C0                LD (CHAR_SPEED_Y),A
      79   00:424C  32 03 C0                LD (CHAR_SPEED_X_GHOST),A
      80   00:424F  32 05 C0                LD (CHAR_DIR_GHOST1),A      ; $00 - LEFT, $FF - RIGHT
      81   00:4252  32 07 C0                LD (CHAR_NEW_DIR_MAIN),A    
      82   00:4255  32 08 C0                LD (CHAR_MAIN_SHOOT),A      ; Indica si el personaje está disparando - $FF
      83   00:4258  32 0A C0                LD (CHAR_DISTANCE_SHOOT),A
      84   00:425B  32 0B C0                LD (CHAR_SPEED_SHOOT),A
      85   00:425E  32 04 C0                LD (CHAR_GHOST_DEAD),A
      86   00:4261  32 09 C0                LD (CHAR_MIN_STEP), A
      87   00:4264  32 93 C0                LD (SPRITE_COLOR_REPLACE2), A
      88   00:4267  3E 01                   LD A,$01
      89   00:4269  32 06 C0                LD (CHAR_DIR_MAIN),A        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
      90   00:426C                      
      91   00:426C  21 25 47                ld hl, SPRITE_P1_DOWN
      92   00:426F  22 8F C0                ld (SPRITE_PTR_REPLACE), HL    
      93   00:4272  21 D5 4B                ld hl, SPRITE_COLOR_P1_DOWN
      94   00:4275  22 91 C0                ld (SPRITE_COLOR_REPLACE), HL
      95   00:4278  22 93 C0                LD (SPRITE_COLOR_REPLACE2), HL
      96   00:427B  C9                      ret
      97   00:427C                      
      98   00:427C                      MAIN_LOOP:
      99   00:427C                          ;halt ; sincroniza el teclado y pantalla con el procesador (que va muy rápido)    
     100   00:427C  DD 7E 00                LD A, (ix)  ; Cargamos la Y
     101   00:427F  FE 00                   CP $00
     102   00:4281  CA 2E 46                JP Z, STAGE2
     103   00:4284  CD 56 41                call DUMP_SPR_ATTS    
     104   00:4287                          
     105   00:4287  3A 04 C0                LD A,(CHAR_GHOST_DEAD)
     106   00:428A  FE 01                   CP $01
     107   00:428C  CA ED 42                JP Z,.continue
     108   00:428F  DD 7E 0D                LD A, (ix+13)          ;cargamos la X del Fantasma
     109   00:4292  2A 03 C0            	LD HL, (CHAR_SPEED_X_GHOST)
     110   00:4295  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     111   00:4296                          
     112   00:4296  DD 77 0D            	LD (ix+13), A	
     113   00:4299  FE 16                   CP $16
     114   00:429B  CA A6 42                JP Z,.CHANGE_DIR_RIGHT
     115   00:429E  FE B9                   CP $B9
     116   00:42A0  CA B3 42                JP Z,.CHANGE_DIR_LEFT
     117   00:42A3                          		
     118   00:42A3  C3 BC 42                JP .check_pattern
     119   00:42A6                      
     120   00:42A6                      .CHANGE_DIR_RIGHT:
     121   00:42A6  3E 01                   LD A, MOV_SPEED_GHOST
     122   00:42A8  32 03 C0            	LD (CHAR_SPEED_X_GHOST), A
     123   00:42AB  3E FF                   LD A,$FF
     124   00:42AD  32 05 C0                LD (CHAR_DIR_GHOST1),A
     125   00:42B0  C3 BC 42                JP .check_pattern
     126   00:42B3                      
     127   00:42B3                      .CHANGE_DIR_LEFT:
     128   00:42B3  3E FF                   LD A, -MOV_SPEED_GHOST
     129   00:42B5  32 03 C0            	LD (CHAR_SPEED_X_GHOST), A
     130   00:42B8  AF                      XOR A   ; Pone A a 0
     131   00:42B9  32 05 C0                LD (CHAR_DIR_GHOST1),A
     132   00:42BC                      
     133   00:42BC                      .check_pattern:
     134   00:42BC  3A 05 C0                LD A,(CHAR_DIR_GHOST1)
     135   00:42BF  FE FF                   CP $FF
     136   00:42C1  CA DA 42                JP Z,.check_pattern_RIGHT
     137   00:42C4  DD 7E 0E                LD A, (ix+14)       ; Cargamos el patrón y lo cambiamos
     138   00:42C7  FE 18                   CP $18
     139   00:42C9  CA D3 42                jp z,.change_pattern_L
     140   00:42CC  DD 36 0E 18             LD (ix+14),$18
     141   00:42D0  C3 ED 42                jp .continue
     142   00:42D3                      .change_pattern_L:
     143   00:42D3  DD 36 0E 1C             LD (ix+14),$1C
     144   00:42D7  C3 ED 42                jp .continue
     145   00:42DA                      
     146   00:42DA                      .check_pattern_RIGHT
     147   00:42DA  DD 7E 0E                LD A, (ix+14)       ; Cargamos el patrón y lo cambiamos
     148   00:42DD  FE 20                   CP $20
     149   00:42DF  CA E9 42                jp z,.change_pattern_R
     150   00:42E2  DD 36 0E 20             LD (ix+14),$20
     151   00:42E6  C3 ED 42                jp .continue
     152   00:42E9                      .change_pattern_R:
     153   00:42E9  DD 36 0E 24             LD (ix+14),$24
     154   00:42ED                      
     155   00:42ED                      .continue:    
     156   00:42ED  3A 08 C0                LD A,(CHAR_MAIN_SHOOT)    
     157   00:42F0  FE 01                   CP $01
     158   00:42F2  CA 1F 43                JP Z,.MOVE_SHOOT_LEFT
     159   00:42F5  FE 02                   CP $02
     160   00:42F7  CA 07 43                JP Z,.MOVE_SHOOT_RIGHT
     161   00:42FA  FE 03                   CP $03
     162   00:42FC  CA 0F 43                JP Z,.MOVE_SHOOT_UP    
     163   00:42FF  FE 04                   CP $04
     164   00:4301  CA 17 43                JP Z,.MOVE_SHOOT_DOWN
     165   00:4304  C3 83 43                JP .check_KB
     166   00:4307                      
     167   00:4307                      .MOVE_SHOOT_RIGHT:        
     168   00:4307  3E 03                   LD A, MOV_SPEED_SHOOT
     169   00:4309  32 0B C0            	LD (CHAR_SPEED_SHOOT), A    
     170   00:430C  C3 24 43                JP .CHECK_SHOOT_DISTANCE
     171   00:430F                      
     172   00:430F                      .MOVE_SHOOT_UP:        
     173   00:430F  3E FD                   LD A, -MOV_SPEED_SHOOT
     174   00:4311  32 0B C0            	LD (CHAR_SPEED_SHOOT), A    
     175   00:4314  C3 24 43                JP .CHECK_SHOOT_DISTANCE
     176   00:4317                      
     177   00:4317                      .MOVE_SHOOT_DOWN:
     178   00:4317  3E 03                   LD A, MOV_SPEED_SHOOT
     179   00:4319  32 0B C0            	LD (CHAR_SPEED_SHOOT), A    
     180   00:431C  C3 24 43                JP .CHECK_SHOOT_DISTANCE
     181   00:431F                      
     182   00:431F                      .MOVE_SHOOT_LEFT:    
     183   00:431F  3E FD                   LD A, -MOV_SPEED_SHOOT
     184   00:4321  32 0B C0            	LD (CHAR_SPEED_SHOOT), A    
     185   00:4324                      
     186   00:4324                      .CHECK_SHOOT_DISTANCE:
     187   00:4324                          ; Miramos si va a izq o der
     188   00:4324  3A 08 C0                LD A,(CHAR_MAIN_SHOOT)    
     189   00:4327  D6 03                   SUB 3   ; Restar 3 a 1 o 2 provoca salto de carro, si es 3 o 4 no provoca el salto de carro
     190   00:4329  D2 39 43                JP NC,.ADD_SHOOT_Y
     191   00:432C                          ; Movemos el disparo
     192   00:432C  DD 7E 11                LD A, (ix+17)          ;cargamos la X del disparo
     193   00:432F  2A 0B C0            	LD HL, (CHAR_SPEED_SHOOT)
     194   00:4332  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     195   00:4333  DD 77 11                LD (ix+17), A
     196   00:4336  C3 43 43                JP .CHECK_GHOST
     197   00:4339                      .ADD_SHOOT_Y
     198   00:4339                          ; Movemos el disparo
     199   00:4339  DD 7E 10                LD A, (ix+16)          ;cargamos la X del disparo
     200   00:433C  2A 0B C0            	LD HL, (CHAR_SPEED_SHOOT)
     201   00:433F  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     202   00:4340  DD 77 10                LD (ix+16), A
     203   00:4343                      
     204   00:4343                      .CHECK_GHOST:
     205   00:4343                          ; Comprobamos si hay colision con el fantasma
     206   00:4343  3A 04 C0                LD A,(CHAR_GHOST_DEAD)  ; si está muerto,no lo miramos
     207   00:4346  FE 01                   CP $01
     208   00:4348  CA 5F 43                JP Z,.ADD_DISTANCE
     209   00:434B                      
     210   00:434B  DD 46 10                LD B,(ix+16)         ; Y del disparo
     211   00:434E  DD 4E 11                LD C,(ix+17)         ; X del disparo
     212   00:4351  DD 56 0C                LD D,(ix+12)         ; Y del fantasma 
     213   00:4354  DD 5E 0D                LD E,(ix+13)         ; X del fantasma
     214   00:4357  CD 10 40                call check_spr_collision
     215   00:435A  FE 01                   CP 1
     216   00:435C  CA 6F 43                JP Z,.KILL_GHOST
     217   00:435F                      .ADD_DISTANCE:
     218   00:435F  3A 0A C0                LD A,(CHAR_DISTANCE_SHOOT)
     219   00:4362  C6 03                   ADD MOV_SPEED_SHOOT
     220   00:4364  32 0A C0                LD (CHAR_DISTANCE_SHOOT),A    
     221   00:4367  FE 30                   CP MAX_DISTANCE_SHOOT
     222   00:4369  C2 83 43                JP NZ,.check_KB
     223   00:436C  C3 78 43                JP .HIDE_SHOOT
     224   00:436F                      
     225   00:436F                      .KILL_GHOST:
     226   00:436F  3E 01                   LD A,1
     227   00:4371  32 04 C0                LD (CHAR_GHOST_DEAD),A
     228   00:4374  DD 36 0C D9             LD (ix+12),217    
     229   00:4378                      
     230   00:4378                      .HIDE_SHOOT:
     231   00:4378  DD 36 10 D9             LD (ix+16),217          ; Y = 217 para ocultar el Sprite
     232   00:437C  AF                      XOR A
     233   00:437D  32 08 C0                LD (CHAR_MAIN_SHOOT),A   ; Desactivo el estado disparando 
     234   00:4380  32 0A C0                LD (CHAR_DISTANCE_SHOOT),A
     235   00:4383                      
     236   00:4383                      .check_KB:
     237   00:4383  76                      halt    
     238   00:4384                      
     239   00:4384  3E 08                   ld a, 8
     240   00:4386  CD 41 01            	call SNSMAT   
     241   00:4389  4F                      LD C,A    
     242   00:438A                          
     243   00:438A  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es DOWN?
     244   00:438C  CA 94 44                jp z, move_right
     245   00:438F                          
     246   00:438F  CB 61                   BIT KB_LEFT, C			; La tecla presionada es DOWN?
     247   00:4391  CA E3 44                jp z, move_left
     248   00:4394                      
     249   00:4394  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     250   00:4396  CA 23 44                jp z, move_up
     251   00:4399                      
     252   00:4399  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     253   00:439B  CA 5B 44                jp z, move_down
     254   00:439E                      
     255   00:439E                      no_arrows:
     256   00:439E  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     257   00:43A0  CC A9 43                call z,SHOOT_MAIN_CHAR
     258   00:43A3                      
     259   00:43A3  CB 59                   BIT KB_DEL, C			; La tecla presionada es DEL    
     260   00:43A5  C8                      ret z
     261   00:43A6                      
     262   00:43A6  C3 7C 42                jp MAIN_LOOP
     263   00:43A9                      
     264   00:43A9                      SHOOT_MAIN_CHAR:    
     265   00:43A9  3A 08 C0                LD A, (CHAR_MAIN_SHOOT)
     266   00:43AC  FE 01                   CP $01                  ; Si ya está disparando esperamos a que termine
     267   00:43AE  CA 7C 42                JP Z,MAIN_LOOP
     268   00:43B1  FE 02                   CP $02                  ; Si ya está disparando esperamos a que termine
     269   00:43B3  CA 7C 42                JP Z,MAIN_LOOP
     270   00:43B6  FE 03                   CP $03                  ; Si ya está disparando esperamos a que termine
     271   00:43B8  CA 7C 42                JP Z,MAIN_LOOP
     272   00:43BB  FE 04                   CP $04                  ; Si ya está disparando esperamos a que termine
     273   00:43BD  CA 7C 42                JP Z,MAIN_LOOP
     274   00:43C0                      
     275   00:43C0  DD 36 12 28             ld (ix+18), $28     ; Sprite Disparo
     276   00:43C4                      
     277   00:43C4  DD 7E 00                LD A, (ix)          
     278   00:43C7  DD 77 10                ld (ix+16), A       ; Asignamos la Y del personaje    
     279   00:43CA                      
     280   00:43CA  3A 06 C0                LD A, (CHAR_DIR_MAIN)
     281   00:43CD  FE 03                   CP $03
     282   00:43CF  CA EB 43                JP Z,.SHOOT_RIGHT
     283   00:43D2  FE 00                   CP $00
     284   00:43D4  CA FA 43                JP Z,.SHOOT_UP
     285   00:43D7  FE 01                   CP $01
     286   00:43D9  CA 0D 44                JP Z,.SHOOT_DOWN
     287   00:43DC                          ; SHOOT LEFT
     288   00:43DC  3E 01                   LD A,$01                ; SHOOT LEFT
     289   00:43DE  32 08 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando izquierda
     290   00:43E1  DD 7E 01                LD A, (ix+1)			;cargamos la X - Si no es derecha, debe ser izquierda
     291   00:43E4  21 F4 FF            	LD HL, -12
     292   00:43E7  85                  	ADD L
     293   00:43E8                          
     294   00:43E8  C3 1D 44                JP .CONTINUE
     295   00:43EB                      
     296   00:43EB                      .SHOOT_RIGHT:
     297   00:43EB  3E 02                   LD A,$02
     298   00:43ED  32 08 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando derecha
     299   00:43F0                          
     300   00:43F0  DD 7E 01                LD A, (ix+1)			;cargamos la X
     301   00:43F3  21 0C 00            	LD HL, 12
     302   00:43F6  85                  	ADD L
     303   00:43F7  C3 1D 44                JP .CONTINUE
     304   00:43FA                      
     305   00:43FA                      .SHOOT_UP:
     306   00:43FA  3E 03                   LD A,$03
     307   00:43FC  32 08 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando derecha
     308   00:43FF                          
     309   00:43FF                          ; Sumamos el desplazamiento a la Y
     310   00:43FF  DD 7E 10                LD A, (ix+16)
     311   00:4402  D6 10                   SUB 16
     312   00:4404  DD 77 10                LD (ix+16), A    
     313   00:4407                          ;LD (ix+17), D
     314   00:4407  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     315   00:440A  C3 1D 44                JP .CONTINUE
     316   00:440D                      
     317   00:440D                      .SHOOT_DOWN
     318   00:440D  3E 04               	LD A,$04
     319   00:440F  32 08 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando derecha
     320   00:4412                          
     321   00:4412                          ; Sumamos el desplazamiento a la Y
     322   00:4412  DD 7E 10                LD A, (ix+16)
     323   00:4415  C6 10                   ADD 16
     324   00:4417  DD 77 10                LD (ix+16), A    
     325   00:441A                          ;LD (ix+17), D
     326   00:441A  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     327   00:441D                      
     328   00:441D                      .CONTINUE:
     329   00:441D                          ;ld (ix+16), B       ; Asignamos la Y del personaje
     330   00:441D  DD 77 11                ld (ix+17), A       ; Asignamos la X del personaje + el desplazamiento        
     331   00:4420  C3 7C 42                jp MAIN_LOOP
     332   00:4423                      
     333   00:4423                      move_up:
     334   00:4423                          ; Actualizamos la última tecla de dirección pulsada
     335   00:4423  AF                      XOR A
     336   00:4424  32 07 C0                LD (CHAR_NEW_DIR_MAIN),A
     337   00:4427  CD 32 45                CALL CHECK_DIRECTION_MAIN
     338   00:442A                      
     339   00:442A  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
     340   00:442D  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VDP
     341   00:442F  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     342   00:4430  DD 7E 01                ld a,(ix+1)
     343   00:4433  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     344   00:4434  CD 20 40                call get_bloque_en_X_Y
     345   00:4437  FE 01                   cp 1
     346   00:4439  CA 2A 46                jp z,NO_MOVEMENT
     347   00:443C                      
     348   00:443C  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
     349   00:443F  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VGP
     350   00:4441  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     351   00:4442  DD 7E 01                ld a,(ix+1)
     352   00:4445  C6 0A                   add 10 ; miramos la segunda tile 8+2
     353   00:4447  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     354   00:4448  CD 20 40                call get_bloque_en_X_Y
     355   00:444B  FE 01                   cp 1
     356   00:444D  CA 2A 46                jp z,NO_MOVEMENT
     357   00:4450                            
     358   00:4450  3E FF               	LD A, -MOV_SPEED
     359   00:4452  32 02 C0            	LD (CHAR_SPEED_Y), A
     360   00:4455  CD BF 45                call UPDATE_MOVEMENT   
     361   00:4458  C3 9E 43                JP no_arrows
     362   00:445B                          ;ret
     363   00:445B                      
     364   00:445B                      move_down:    
     365   00:445B                          ; Actualizamos la última tecla de dirección pulsada
     366   00:445B  3E 01                   LD A,$01
     367   00:445D  32 07 C0                LD (CHAR_NEW_DIR_MAIN),A
     368   00:4460  CD 32 45                CALL CHECK_DIRECTION_MAIN
     369   00:4463                      
     370   00:4463  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
     371   00:4466  C6 11                   add 17 ; incrementamos en 15+2 el valor
     372   00:4468  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     373   00:4469  DD 7E 01                ld a,(ix+1)
     374   00:446C  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     375   00:446D  CD 20 40                call get_bloque_en_X_Y
     376   00:4470  FE 01                   cp 1
     377   00:4472  CA 2A 46                jp z,NO_MOVEMENT
     378   00:4475                      
     379   00:4475  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
     380   00:4478  C6 11                   add 17 ; incrementamos en 15 el valor
     381   00:447A  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     382   00:447B  DD 7E 01                ld a,(ix+1)
     383   00:447E  C6 0A                   add 10 ; miramos la segunda tile 8+2
     384   00:4480  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision    
     385   00:4481  CD 20 40                call get_bloque_en_X_Y
     386   00:4484  FE 01                   cp 1
     387   00:4486  CA 2A 46                jp z,NO_MOVEMENT
     388   00:4489                          
     389   00:4489  3E 01                   LD A, MOV_SPEED
     390   00:448B  32 02 C0            	LD (CHAR_SPEED_Y), A
     391   00:448E  CD BF 45                call UPDATE_MOVEMENT    
     392   00:4491  C3 9E 43                JP no_arrows
     393   00:4494                          ;ret
     394   00:4494                      
     395   00:4494                      move_right:
     396   00:4494                          ; Actualizamos la última tecla de dirección pulsada
     397   00:4494  3E 03                   LD A,$03
     398   00:4496  32 07 C0                LD (CHAR_NEW_DIR_MAIN),A
     399   00:4499  CD 32 45                CALL CHECK_DIRECTION_MAIN
     400   00:449C                      
     401   00:449C  DD 7E 01                ld a,(ix+1); obtenemos el valor actual de la posicion x   
     402   00:449F  C6 10                   add 16; incrementamos en 3 el valor
     403   00:44A1  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     404   00:44A2  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     405   00:44A5  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
     406   00:44A7  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     407   00:44A8  CD 20 40                call get_bloque_en_X_Y
     408   00:44AB  FE 01                   cp 1
     409   00:44AD  CA 2A 46                jp z,NO_MOVEMENT
     410   00:44B0                      
     411   00:44B0                          ;Miramos el tile del byte inferior del sprite - centro personaje
     412   00:44B0  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
     413   00:44B3  C6 10                   add 16; incrementamos en 2 tiles el valor
     414   00:44B5  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     415   00:44B6  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
     416   00:44B9  C6 08                   add 8 ; Añadimos 8 para mirar el tile inferior - centro
     417   00:44BB  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     418   00:44BC  CD 20 40                call get_bloque_en_X_Y
     419   00:44BF  FE 01                   cp 1
     420   00:44C1  CA 2A 46                jp z,NO_MOVEMENT
     421   00:44C4                      
     422   00:44C4                          ;Miramos el tile del byte inferior del sprite - esquina inferior derecha
     423   00:44C4  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
     424   00:44C7  C6 10                   add 16; incrementamos en 2 tiles el valor
     425   00:44C9  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     426   00:44CA  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
     427   00:44CD  C6 0F                   add 15 ; Añadimos 8+1 para mirar la esquina inferior derecha del tile inferior
     428   00:44CF  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     429   00:44D0  CD 20 40                call get_bloque_en_X_Y
     430   00:44D3  FE 01                   cp 1
     431   00:44D5  CA 2A 46                jp z,NO_MOVEMENT    
     432   00:44D8                          
     433   00:44D8  3E 01                   LD A, MOV_SPEED
     434   00:44DA  32 01 C0            	LD (CHAR_SPEED_X), A
     435   00:44DD  CD BF 45                call UPDATE_MOVEMENT      
     436   00:44E0  C3 9E 43                JP no_arrows
     437   00:44E3                          ;ret
     438   00:44E3                      
     439   00:44E3                      move_left:
     440   00:44E3                          ; Actualizamos la última tecla de dirección pulsada
     441   00:44E3  3E 02                   LD A,$02
     442   00:44E5  32 07 C0                LD (CHAR_NEW_DIR_MAIN),A
     443   00:44E8  CD 32 45                CALL CHECK_DIRECTION_MAIN
     444   00:44EB  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     445   00:44EE  D6 02                   sub 2 ; decrementamos en 2 el valor
     446   00:44F0  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     447   00:44F1  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     448   00:44F4  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
     449   00:44F6  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     450   00:44F7  CD 20 40                call get_bloque_en_X_Y
     451   00:44FA  FE 01                   cp 1
     452   00:44FC  CA 2A 46                jp z,NO_MOVEMENT
     453   00:44FF                      
     454   00:44FF                          ;Miramos el tile inferior parte central del personaje
     455   00:44FF  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     456   00:4502  D6 02                   sub 2 ; decrementamos en 2 el valor
     457   00:4504  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     458   00:4505  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     459   00:4508  C6 08                   add 8   ; incrementamos en 8 para mirar la parte central del personaje
     460   00:450A  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     461   00:450B  CD 20 40                call get_bloque_en_X_Y
     462   00:450E  FE 01                   cp 1
     463   00:4510  CA 2A 46                jp z,NO_MOVEMENT
     464   00:4513                      
     465   00:4513                          ;Miramos el tile inferior esquina inferior izquierda
     466   00:4513  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     467   00:4516  D6 02                   sub 2 ; decrementamos en 2 el valor
     468   00:4518  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     469   00:4519  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     470   00:451C  C6 0F                   add 15   ; incrementamos en 8 para mirar la parte central del personaje (-1 por el offset del VGP)
     471   00:451E  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     472   00:451F  CD 20 40                call get_bloque_en_X_Y
     473   00:4522  FE 01                   cp 1
     474   00:4524  CA 2A 46                jp z,NO_MOVEMENT
     475   00:4527                      
     476   00:4527  3E FF                   LD A, -MOV_SPEED
     477   00:4529  32 01 C0            	LD (CHAR_SPEED_X), A
     478   00:452C  CD BF 45                call UPDATE_MOVEMENT     
     479   00:452F  C3 9E 43                JP no_arrows
     480   00:4532                          ;ret
     481   00:4532                      
     482   00:4532                      CHECK_DIRECTION_MAIN:
     483   00:4532  3A 06 C0                LD A, (CHAR_DIR_MAIN)		                ;Cargamos el valor anterior de direccion
     484   00:4535  2A 07 C0            	LD HL, (CHAR_NEW_DIR_MAIN)		            ;Cargamos el valor actual de direccion
     485   00:4538  BD                  	CP L		            	                ;Son iguales?
     486   00:4539  C8                  	RET Z                           			;Si son iguales, vuelvo
     487   00:453A  3A 07 C0                LD A,(CHAR_NEW_DIR_MAIN)
     488   00:453D  FE 01                   CP $01
     489   00:453F  CA 54 45                JP Z,.SET_DIR_DOWN
     490   00:4542  FE 00                   CP $00
     491   00:4544  CA 69 45                JP Z,.SET_DIR_UP
     492   00:4547  FE 03                   CP $03
     493   00:4549  CA 93 45                JP Z,.SET_DIR_RIGHT
     494   00:454C  FE 02                   CP $02
     495   00:454E  CA 7E 45                JP Z,.SET_DIR_LEFT
     496   00:4551  C3 A8 45                JP .FINISH
     497   00:4554                          
     498   00:4554                      .SET_DIR_DOWN:    
     499   00:4554  21 25 47                ld hl, SPRITE_P1_DOWN
     500   00:4557  22 8F C0                ld (SPRITE_PTR_REPLACE), HL
     501   00:455A                          
     502   00:455A  21 D5 4B                ld hl, SPRITE_COLOR_P1_DOWN
     503   00:455D  22 91 C0                ld (SPRITE_COLOR_REPLACE), HL    
     504   00:4560  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     505   00:4563  CD 71 41                CALL DUMP_SPR_P1    
     506   00:4566                      
     507   00:4566  C3 A8 45                JP .FINISH
     508   00:4569                      
     509   00:4569                      .SET_DIR_UP:
     510   00:4569  21 65 46                ld hl, SPRITE_P1_UP
     511   00:456C  22 8F C0                ld (SPRITE_PTR_REPLACE), HL
     512   00:456F                          
     513   00:456F  21 75 4B                ld hl, SPRITE_COLOR_P1_UP
     514   00:4572  22 91 C0                ld (SPRITE_COLOR_REPLACE), HL
     515   00:4575  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     516   00:4578  CD 71 41                CALL DUMP_SPR_P1
     517   00:457B  C3 A8 45                JP .FINISH
     518   00:457E                      
     519   00:457E                      .SET_DIR_LEFT:    
     520   00:457E  21 E5 47                ld hl, SPRITE_P1_LEFT
     521   00:4581  22 8F C0                ld (SPRITE_PTR_REPLACE), HL
     522   00:4584                          
     523   00:4584  21 B5 56                ld hl, SPRITE_COLOR_P1_LEFT
     524   00:4587  22 91 C0                ld (SPRITE_COLOR_REPLACE), HL
     525   00:458A  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     526   00:458D  CD 71 41                CALL DUMP_SPR_P1   
     527   00:4590  C3 A8 45                JP .FINISH
     528   00:4593                      
     529   00:4593                      .SET_DIR_RIGHT:
     530   00:4593  21 A5 48                ld hl, SPRITE_P1_RIGHT
     531   00:4596  22 8F C0                ld (SPRITE_PTR_REPLACE), HL
     532   00:4599                          
     533   00:4599  21 35 4C                ld hl, SPRITE_COLOR_P1_RIGHT
     534   00:459C  22 91 C0                ld (SPRITE_COLOR_REPLACE), HL
     535   00:459F  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     536   00:45A2                          ;    ld (ix+13), $10      ; Sprite 1 - Ghost
     537   00:45A2  CD 71 41                CALL DUMP_SPR_P1
     538   00:45A5  C3 A8 45                JP .FINISH
     539   00:45A8                      
     540   00:45A8                      .FINISH:
     541   00:45A8  AF                      XOR A   ; reseteamos el contador de pasos
     542   00:45A9  32 09 C0                LD (CHAR_MIN_STEP), A   
     543   00:45AC  3A 07 C0                LD A, (CHAR_NEW_DIR_MAIN)   ; Actualizamos la nueva dirección del personaje
     544   00:45AF  32 06 C0                LD (CHAR_DIR_MAIN),A    
     545   00:45B2                      
     546   00:45B2                          ; ponemos el primer frame del sprite
     547   00:45B2  DD 36 02 00             LD (ix+2), $00
     548   00:45B6  DD 36 06 04             LD (ix+6), $04
     549   00:45BA  DD 36 0A 08             LD (ix+10), $08
     550   00:45BE                          ;CALL DUMP_SPR_ATTS
     551   00:45BE  C9                      RET
     552   00:45BF                      
     553   00:45BF                      UPDATE_MOVEMENT:
     554   00:45BF  DD 7E 00            	LD A, (ix)          ;cargamos la Y			
     555   00:45C2  2A 02 C0            	LD HL, (CHAR_SPEED_Y)
     556   00:45C5  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     557   00:45C6                          
     558   00:45C6  DD 77 00            	LD (ix), A
     559   00:45C9  DD 77 04                LD (ix+4), A
     560   00:45CC  DD 77 08                LD (ix+8), A
     561   00:45CF                      	
     562   00:45CF  DD 7E 01            	LD A, (ix+1)			;cargamos la X
     563   00:45D2  2A 01 C0            	LD HL, (CHAR_SPEED_X)
     564   00:45D5  85                  	ADD L   					; Actualizamos la posicion en base a la velocidad
     565   00:45D6                          
     566   00:45D6  DD 77 01            	LD (ix+1), A
     567   00:45D9  DD 77 05                LD (ix+5), A
     568   00:45DC  DD 77 09                LD (ix+9), A	
     569   00:45DF                      
     570   00:45DF  AF                      XOR A            ; reseteamos las variables de movimiento para el siguiente ciclo
     571   00:45E0  32 01 C0                LD (CHAR_SPEED_X),A
     572   00:45E3  32 02 C0                LD (CHAR_SPEED_Y),A	
     573   00:45E6                      
     574   00:45E6                          ; Animación/pasos de personaje	
     575   00:45E6  3A 09 C0                LD A, (CHAR_MIN_STEP)
     576   00:45E9  FE 04                   CP MAX_CHAR_STEPS
     577   00:45EB  C2 24 46                JP NZ,.NO_CHAR_PATTERN_CHANGE
     578   00:45EE                          
     579   00:45EE  AF                      XOR A
     580   00:45EF  32 09 C0                LD (CHAR_MIN_STEP), A   ; reseteamos el contador de pasos
     581   00:45F2  DD 7E 02                LD A, (ix+2)    ; Cargamos el patrón
     582   00:45F5  FE 00                   CP $00
     583   00:45F7  CA 0D 46                JP Z,.SET_SPR_1P_2
     584   00:45FA  DD 36 02 00             LD (ix+2), $00
     585   00:45FE  DD 36 06 04             LD (ix+6), $04
     586   00:4602  DD 36 0A 08             LD (ix+10), $08
     587   00:4606  2A 91 C0                ld hl, (SPRITE_COLOR_REPLACE)
     588   00:4609  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     589   00:460C  C9                      ret
     590   00:460D                      
     591   00:460D                      .SET_SPR_1P_2:
     592   00:460D  DD 36 02 0C             LD (ix+2), $0C
     593   00:4611  DD 36 06 10             LD (ix+6), $10
     594   00:4615  DD 36 0A 14             LD (ix+10), $14
     595   00:4619                              
     596   00:4619  2A 91 C0                ld HL, (SPRITE_COLOR_REPLACE)
     597   00:461C  11 30 00                ld DE,48
     598   00:461F  19                      ADD HL, DE
     599   00:4620  22 93 C0                ld (SPRITE_COLOR_REPLACE2), HL
     600   00:4623                          ;ld a, 0
     601   00:4623  C9                  	ret
     602   00:4624                      
     603   00:4624                      .NO_CHAR_PATTERN_CHANGE    
     604   00:4624  C6 01                   ADD 1
     605   00:4626  32 09 C0                LD (CHAR_MIN_STEP), A    
     606   00:4629  C9                      ret
     607   00:462A                      
     608   00:462A                      NO_MOVEMENT:    
     609   00:462A                          
     610   00:462A  CD 7C 42                call MAIN_LOOP
     611   00:462D  C9                      ret
     612   00:462E                      
     613   00:462E                      STAGE2:
     614   00:462E  21 00 80                LD HL, CEMENTER2
     615   00:4631  22 97 C0                LD (BITMAP), HL
     616   00:4634  06 0D                   LD B, :CEMENTER2
     617   00:4636                      
     618   00:4636  CD A7 40                call load_screen
     619   00:4639  21 F5 4F                LD HL, mapa2
     620   00:463C  22 95 C0                LD (MAPA), HL
     621   00:463F                          
     622   00:463F                      MAIN_LOOP2:
     623   00:463F  76                      halt    
     624   00:4640                      
     625   00:4640  3E 08                   ld a, 8
     626   00:4642  CD 41 01            	call SNSMAT   
     627   00:4645  4F                      LD C,A    
     628   00:4646                          
     629   00:4646  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es DOWN?
     630   00:4648  CA 94 44                jp z, move_right
     631   00:464B                          
     632   00:464B  CB 61                   BIT KB_LEFT, C			; La tecla presionada es DOWN?
     633   00:464D  CA E3 44                jp z, move_left
     634   00:4650                      
     635   00:4650  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     636   00:4652  CA 23 44                jp z, move_up
     637   00:4655                      
     638   00:4655  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     639   00:4657  CA 5B 44                jp z, move_down
     640   00:465A                      
     641   00:465A                      .no_arrows:
     642   00:465A  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     643   00:465C  CC A9 43                call z,SHOOT_MAIN_CHAR
     644   00:465F                      
     645   00:465F  CB 59                   BIT KB_DEL, C			; La tecla presionada es DEL    
     646   00:4661  C8                      ret z
     647   00:4662                      
     648   00:4662  C3 3F 46                jp MAIN_LOOP2
     649   00:4665                      
     650   00:4665                      include "include\BTH_data.asm"
       1.  00:4665                      SPRITE_P1_UP:
       2.  00:4665                          ; UP 1        
       3.  00:4665                          ; mask 0
       4.  00:4665                          DB $03,$0F,$1F,$1F,$1F,$3F,$1F,$0F
       4.  00:4665  03 0F 1F 1F 1F 3F 1F 0F 
       5.  00:466D                          DB $30,$78,$60,$60,$03,$03,$06,$0E
       5.  00:466D  30 78 60 60 03 03 06 0E 
       6.  00:4675                          DB $E0,$F0,$F8,$F8,$FC,$F8,$FC,$F0
       6.  00:4675  E0 F0 F8 F8 FC F8 FC F0 
       7.  00:467D                          DB $0E,$18,$06,$00,$C0,$E0,$F0,$00    
       7.  00:467D  0E 18 06 00 C0 E0 F0 00 
       8.  00:4685                          ; mask 1
       9.  00:4685                          DB $00,$00,$00,$00,$00,$00,$00,$00
       9.  00:4685  00 00 00 00 00 00 00 00 
      10.  00:468D                          DB $0F,$00,$03,$03,$01,$01,$00,$00
      10.  00:468D  0F 00 03 03 01 01 00 00 
      11.  00:4695                          DB $00,$00,$00,$00,$00,$00,$00,$00
      11.  00:4695  00 00 00 00 00 00 00 00 
      12.  00:469D                          DB $F0,$06,$C0,$C0,$80,$80,$80,$00
      12.  00:469D  F0 06 C0 C0 80 80 80 00 
      13.  00:46A5                          ; mask 2
      14.  00:46A5                          DB $00,$00,$00,$00,$00,$00,$00,$00
      14.  00:46A5  00 00 00 00 00 00 00 00 
      15.  00:46AD                          DB $00,$07,$01,$01,$00,$00,$00,$00
      15.  00:46AD  00 07 01 01 00 00 00 00 
      16.  00:46B5                          DB $00,$00,$00,$00,$00,$00,$00,$00
      16.  00:46B5  00 00 00 00 00 00 00 00 
      17.  00:46BD                          DB $00,$E0,$80,$80,$00,$00,$00,$00    
      17.  00:46BD  00 E0 80 80 00 00 00 00 
      18.  00:46C5                      
      19.  00:46C5                          ; UP 2
      20.  00:46C5                          ; mask 0
      21.  00:46C5                          DB $03,$0F,$1F,$1F,$1F,$3F,$1F,$0F
      21.  00:46C5  03 0F 1F 1F 1F 3F 1F 0F 
      22.  00:46CD                          DB $70,$18,$60,$00,$03,$07,$0E,$00
      22.  00:46CD  70 18 60 00 03 07 0E 00 
      23.  00:46D5                          DB $E0,$F0,$F8,$F8,$FC,$F8,$FC,$F0
      23.  00:46D5  E0 F0 F8 F8 FC F8 FC F0 
      24.  00:46DD                          DB $0C,$1E,$06,$06,$C0,$C0,$E0,$70    
      24.  00:46DD  0C 1E 06 06 C0 C0 E0 70 
      25.  00:46E5                          ; mask 1
      26.  00:46E5                          DB $00,$00,$00,$00,$00,$00,$00,$00
      26.  00:46E5  00 00 00 00 00 00 00 00 
      27.  00:46ED                          DB $0F,$60,$03,$03,$01,$01,$00,$00
      27.  00:46ED  0F 60 03 03 01 01 00 00 
      28.  00:46F5                          DB $00,$00,$00,$00,$00,$00,$00,$00
      28.  00:46F5  00 00 00 00 00 00 00 00 
      29.  00:46FD                          DB $F0,$00,$C0,$C0,$80,$80,$80,$00
      29.  00:46FD  F0 00 C0 C0 80 80 80 00 
      30.  00:4705                          ; mask 2
      31.  00:4705                          DB $00,$00,$00,$00,$00,$00,$00,$00
      31.  00:4705  00 00 00 00 00 00 00 00 
      32.  00:470D                          DB $00,$07,$01,$01,$00,$00,$00,$00
      32.  00:470D  00 07 01 01 00 00 00 00 
      33.  00:4715                          DB $00,$00,$00,$00,$00,$00,$00,$00
      33.  00:4715  00 00 00 00 00 00 00 00 
      34.  00:471D                          DB $00,$E0,$80,$80,$00,$00,$00,$00
      34.  00:471D  00 E0 80 80 00 00 00 00 
      35.  00:4725                      
      36.  00:4725                      SPRITE_P1_DOWN:
      37.  00:4725                          ; DOWN 1 - 00h
      38.  00:4725                          DB $03,$0F,$00,$0A,$0E,$0D,$07,$03
      38.  00:4725  03 0F 00 0A 0E 0D 07 03 
      39.  00:472D                          DB $3E,$7B,$60,$60,$03,$03,$06,$0E
      39.  00:472D  3E 7B 60 60 03 03 06 0E 
      40.  00:4735                          DB $E0,$F0,$A0,$90,$70,$B0,$E0,$C0
      40.  00:4735  E0 F0 A0 90 70 B0 E0 C0 
      41.  00:473D                          DB $7E,$D8,$06,$00,$C0,$E0,$F0,$00
      41.  00:473D  7E D8 06 00 C0 E0 F0 00 
      42.  00:4745                          ; mask 1 - 04h
      43.  00:4745                          DB $00,$00,$1F,$15,$11,$32,$18,$0C
      43.  00:4745  00 00 1F 15 11 32 18 0C 
      44.  00:474D                          DB $01,$00,$03,$03,$01,$01,$00,$00
      44.  00:474D  01 00 03 03 01 01 00 00 
      45.  00:4755                          DB $00,$00,$58,$68,$8C,$48,$1C,$30
      45.  00:4755  00 00 58 68 8C 48 1C 30 
      46.  00:475D                          DB $80,$06,$C0,$C0,$80,$80,$80,$00
      46.  00:475D  80 06 C0 C0 80 80 80 00 
      47.  00:4765                          ; mask 2 - 08h
      48.  00:4765                          DB $00,$00,$00,$00,$00,$30,$00,$00
      48.  00:4765  00 00 00 00 00 30 00 00 
      49.  00:476D                          DB $00,$04,$00,$00,$00,$00,$00,$00
      49.  00:476D  00 04 00 00 00 00 00 00 
      50.  00:4775                          DB $00,$00,$00,$00,$00,$08,$00,$00
      50.  00:4775  00 00 00 00 00 08 00 00 
      51.  00:477D                          DB $00,$20,$00,$00,$00,$00,$00,$00
      51.  00:477D  00 20 00 00 00 00 00 00 
      52.  00:4785                      
      53.  00:4785                          ; DOWN 2
      54.  00:4785                          ; mask 0 - 0Ch
      55.  00:4785                          DB $03,$0F,$00,$0A,$0E,$0D,$07,$03
      55.  00:4785  03 0F 00 0A 0E 0D 07 03 
      56.  00:478D                          DB $7E,$1B,$60,$00,$03,$07,$0E,$00
      56.  00:478D  7E 1B 60 00 03 07 0E 00 
      57.  00:4795                          DB $E0,$F0,$A0,$90,$70,$B0,$E0,$C0
      57.  00:4795  E0 F0 A0 90 70 B0 E0 C0 
      58.  00:479D                          DB $7C,$DE,$06,$06,$C0,$C0,$E0,$70
      58.  00:479D  7C DE 06 06 C0 C0 E0 70 
      59.  00:47A5                          ; mask 1 - 10h
      60.  00:47A5                          DB $00,$00,$1F,$15,$11,$32,$18,$0C
      60.  00:47A5  00 00 1F 15 11 32 18 0C 
      61.  00:47AD                          DB $01,$60,$03,$03,$01,$01,$00,$00
      61.  00:47AD  01 60 03 03 01 01 00 00 
      62.  00:47B5                          DB $00,$00,$58,$68,$8C,$48,$1C,$30
      62.  00:47B5  00 00 58 68 8C 48 1C 30 
      63.  00:47BD                          DB $80,$00,$C0,$C0,$80,$80,$80,$00
      63.  00:47BD  80 00 C0 C0 80 80 80 00 
      64.  00:47C5                          ; mask 2 - 14h
      65.  00:47C5                          DB $00,$00,$00,$00,$00,$30,$00,$00
      65.  00:47C5  00 00 00 00 00 30 00 00 
      66.  00:47CD                          DB $00,$04,$00,$00,$00,$00,$00,$00
      66.  00:47CD  00 04 00 00 00 00 00 00 
      67.  00:47D5                          DB $00,$00,$00,$00,$00,$08,$00,$00
      67.  00:47D5  00 00 00 00 00 08 00 00 
      68.  00:47DD                          DB $00,$20,$00,$00,$00,$00,$00,$00
      68.  00:47DD  00 20 00 00 00 00 00 00 
      69.  00:47E5                      
      70.  00:47E5                      SPRITE_P1_LEFT:         
      71.  00:47E5                          ; --- Slot 1
      72.  00:47E5                          ; mask 0
      73.  00:47E5                          DB $07,$1F,$03,$07,$0B,$1F,$0F,$07
      73.  00:47E5  07 1F 03 07 0B 1F 0F 07 
      74.  00:47ED                          DB $03,$0F,$30,$30,$03,$01,$01,$03
      74.  00:47ED  03 0F 30 30 03 01 01 03 
      75.  00:47F5                          DB $C0,$E0,$00,$80,$C0,$C0,$80,$00
      75.  00:47F5  C0 E0 00 80 C0 C0 80 00 
      76.  00:47FD                          DB $C0,$80,$00,$00,$D8,$B0,$20,$00
      76.  00:47FD  C0 80 00 00 D8 B0 20 00 
      77.  00:4805                          ; mask 1
      78.  00:4805                          DB $00,$00,$0C,$18,$34,$00,$00,$00
      78.  00:4805  00 00 0C 18 34 00 00 00 
      79.  00:480D                          DB $0C,$00,$09,$03,$00,$00,$00,$00
      79.  00:480D  0C 00 09 03 00 00 00 00 
      80.  00:4815                          DB $00,$00,$F0,$78,$38,$3C,$70,$F8
      80.  00:4815  00 00 F0 78 38 3C 70 F8 
      81.  00:481D                          DB $00,$78,$C0,$F8,$18,$10,$00,$00
      81.  00:481D  00 78 C0 F8 18 10 00 00 
      82.  00:4825                          ; mask 2
      83.  00:4825                          DB $00,$00,$00,$00,$30,$00,$00,$00
      83.  00:4825  00 00 00 00 30 00 00 00 
      84.  00:482D                          DB $00,$00,$01,$00,$00,$00,$00,$00
      84.  00:482D  00 00 01 00 00 00 00 00 
      85.  00:4835                          DB $00,$00,$00,$00,$38,$00,$00,$00
      85.  00:4835  00 00 00 00 38 00 00 00 
      86.  00:483D                          DB $3C,$00,$F0,$38,$00,$00,$00,$00
      86.  00:483D  3C 00 F0 38 00 00 00 00 
      87.  00:4845                              
      88.  00:4845                          ; --- Slot 3
      89.  00:4845                          ; mask 0
      90.  00:4845                          DB $07,$1F,$03,$07,$0B,$1F,$0F,$07
      90.  00:4845  07 1F 03 07 0B 1F 0F 07 
      91.  00:484D                          DB $03,$0F,$01,$03,$03,$01,$03,$06
      91.  00:484D  03 0F 01 03 03 01 03 06 
      92.  00:4855                          DB $C0,$E0,$00,$80,$C0,$C0,$80,$00
      92.  00:4855  C0 E0 00 80 C0 C0 80 00 
      93.  00:485D                          DB $C0,$80,$F0,$F8,$D8,$D0,$40,$C0
      93.  00:485D  C0 80 F0 F8 D8 D0 40 C0 
      94.  00:4865                          ; mask 1
      95.  00:4865                          DB $00,$00,$0C,$18,$34,$00,$00,$00
      95.  00:4865  00 00 0C 18 34 00 00 00 
      96.  00:486D                          DB $0C,$30,$31,$00,$00,$00,$00,$00
      96.  00:486D  0C 30 31 00 00 00 00 00 
      97.  00:4875                          DB $00,$00,$F0,$78,$38,$3C,$70,$F8
      97.  00:4875  00 00 F0 78 38 3C 70 F8 
      98.  00:487D                          DB $00,$00,$C0,$38,$18,$10,$00,$00
      98.  00:487D  00 00 C0 38 18 10 00 00 
      99.  00:4885                          ; mask 2
     100.  00:4885                          DB $00,$00,$00,$00,$30,$00,$00,$00
     100.  00:4885  00 00 00 00 30 00 00 00 
     101.  00:488D                          DB $00,$00,$30,$00,$00,$00,$00,$00
     101.  00:488D  00 00 30 00 00 00 00 00 
     102.  00:4895                          DB $00,$00,$00,$00,$38,$00,$00,$00
     102.  00:4895  00 00 00 00 38 00 00 00 
     103.  00:489D                          DB $3C,$78,$00,$00,$00,$00,$00,$00
     103.  00:489D  3C 78 00 00 00 00 00 00 
     104.  00:48A5                      
     105.  00:48A5                      SPRITE_P1_RIGHT:
     106.  00:48A5                          ; --- Slot 0
     107.  00:48A5                          ; mask 0
     108.  00:48A5                          DB $03,$07,$00,$01,$03,$03,$01,$00
     108.  00:48A5  03 07 00 01 03 03 01 00 
     109.  00:48AD                          DB $03,$01,$00,$00,$1B,$0D,$04,$00
     109.  00:48AD  03 01 00 00 1B 0D 04 00 
     110.  00:48B5                          DB $E0,$F8,$C0,$E0,$D0,$F8,$F0,$E0
     110.  00:48B5  E0 F8 C0 E0 D0 F8 F0 E0 
     111.  00:48BD                          DB $C0,$F0,$0C,$0C,$C0,$80,$80,$C0
     111.  00:48BD  C0 F0 0C 0C C0 80 80 C0 
     112.  00:48C5                          ; mask 1
     113.  00:48C5                          DB $00,$00,$0F,$1E,$1C,$3C,$0E,$1F
     113.  00:48C5  00 00 0F 1E 1C 3C 0E 1F 
     114.  00:48CD                          DB $00,$1E,$03,$1F,$18,$08,$00,$00
     114.  00:48CD  00 1E 03 1F 18 08 00 00 
     115.  00:48D5                          DB $00,$00,$30,$18,$2C,$00,$00,$00
     115.  00:48D5  00 00 30 18 2C 00 00 00 
     116.  00:48DD                          DB $30,$00,$90,$C0,$00,$00,$00,$00
     116.  00:48DD  30 00 90 C0 00 00 00 00 
     117.  00:48E5                          ; mask 2
     118.  00:48E5                          DB $00,$00,$00,$00,$1C,$00,$00,$00
     118.  00:48E5  00 00 00 00 1C 00 00 00 
     119.  00:48ED                          DB $3C,$00,$0F,$1C,$00,$00,$00,$00
     119.  00:48ED  3C 00 0F 1C 00 00 00 00 
     120.  00:48F5                          DB $00,$00,$00,$00,$0C,$00,$00,$00
     120.  00:48F5  00 00 00 00 0C 00 00 00 
     121.  00:48FD                          DB $00,$00,$80,$00,$00,$00,$00,$00
     121.  00:48FD  00 00 80 00 00 00 00 00 
     122.  00:4905                      
     123.  00:4905                          ; --- Slot 2
     124.  00:4905                          ; mask 0
     125.  00:4905                          DB $03,$07,$00,$01,$03,$03,$01,$00
     125.  00:4905  03 07 00 01 03 03 01 00 
     126.  00:490D                          DB $03,$01,$0F,$1F,$1B,$0B,$02,$03
     126.  00:490D  03 01 0F 1F 1B 0B 02 03 
     127.  00:4915                          DB $E0,$F8,$C0,$E0,$D0,$F8,$F0,$E0
     127.  00:4915  E0 F8 C0 E0 D0 F8 F0 E0 
     128.  00:491D                          DB $C0,$F0,$80,$C0,$C0,$80,$C0,$60
     128.  00:491D  C0 F0 80 C0 C0 80 C0 60 
     129.  00:4925                          ; mask 1
     130.  00:4925                          DB $00,$00,$0F,$1E,$1C,$3C,$0E,$1F
     130.  00:4925  00 00 0F 1E 1C 3C 0E 1F 
     131.  00:492D                          DB $00,$00,$03,$1C,$18,$08,$00,$00
     131.  00:492D  00 00 03 1C 18 08 00 00 
     132.  00:4935                          DB $00,$00,$30,$18,$2C,$00,$00,$00
     132.  00:4935  00 00 30 18 2C 00 00 00 
     133.  00:493D                          DB $30,$0C,$8C,$00,$00,$00,$00,$00
     133.  00:493D  30 0C 8C 00 00 00 00 00 
     134.  00:4945                          ; mask 2
     135.  00:4945                          DB $00,$00,$00,$00,$1C,$00,$00,$00
     135.  00:4945  00 00 00 00 1C 00 00 00 
     136.  00:494D                          DB $3C,$1E,$00,$00,$00,$00,$00,$00
     136.  00:494D  3C 1E 00 00 00 00 00 00 
     137.  00:4955                          DB $00,$00,$00,$00,$0C,$00,$00,$00
     137.  00:4955  00 00 00 00 0C 00 00 00 
     138.  00:495D                          DB $00,$00,$0C,$00,$00,$00,$00,$00
     138.  00:495D  00 00 0C 00 00 00 00 00 
     139.  00:4965                      
     140.  00:4965                      SPRITE_PATTERN:    
     141.  00:4965                          ; DOWN 1 
     142.  00:4965                          ; mask 0 - 00h
     143.  00:4965                          DB $03,$0F,$00,$0A,$0E,$0D,$07,$03
     143.  00:4965  03 0F 00 0A 0E 0D 07 03 
     144.  00:496D                          DB $3E,$7B,$60,$60,$03,$03,$06,$0E
     144.  00:496D  3E 7B 60 60 03 03 06 0E 
     145.  00:4975                          DB $E0,$F0,$A0,$90,$70,$B0,$E0,$C0
     145.  00:4975  E0 F0 A0 90 70 B0 E0 C0 
     146.  00:497D                          DB $7E,$D8,$06,$00,$C0,$E0,$F0,$00
     146.  00:497D  7E D8 06 00 C0 E0 F0 00 
     147.  00:4985                          ; mask 1 - 04h
     148.  00:4985                          DB $00,$00,$1F,$15,$11,$32,$18,$0C
     148.  00:4985  00 00 1F 15 11 32 18 0C 
     149.  00:498D                          DB $01,$00,$03,$03,$01,$01,$00,$00
     149.  00:498D  01 00 03 03 01 01 00 00 
     150.  00:4995                          DB $00,$00,$58,$68,$8C,$48,$1C,$30
     150.  00:4995  00 00 58 68 8C 48 1C 30 
     151.  00:499D                          DB $80,$06,$C0,$C0,$80,$80,$80,$00
     151.  00:499D  80 06 C0 C0 80 80 80 00 
     152.  00:49A5                          ; mask 2 - 08h
     153.  00:49A5                          DB $00,$00,$00,$00,$00,$30,$00,$00
     153.  00:49A5  00 00 00 00 00 30 00 00 
     154.  00:49AD                          DB $00,$04,$00,$00,$00,$00,$00,$00
     154.  00:49AD  00 04 00 00 00 00 00 00 
     155.  00:49B5                          DB $00,$00,$00,$00,$00,$08,$00,$00
     155.  00:49B5  00 00 00 00 00 08 00 00 
     156.  00:49BD                          DB $00,$20,$00,$00,$00,$00,$00,$00
     156.  00:49BD  00 20 00 00 00 00 00 00 
     157.  00:49C5                      
     158.  00:49C5                          ; DOWN 2 
     159.  00:49C5                          ; mask 0 - 0Ch
     160.  00:49C5                          DB $03,$0F,$00,$0A,$0E,$0D,$07,$03
     160.  00:49C5  03 0F 00 0A 0E 0D 07 03 
     161.  00:49CD                          DB $7E,$1B,$60,$00,$03,$07,$0E,$00
     161.  00:49CD  7E 1B 60 00 03 07 0E 00 
     162.  00:49D5                          DB $E0,$F0,$A0,$90,$70,$B0,$E0,$C0
     162.  00:49D5  E0 F0 A0 90 70 B0 E0 C0 
     163.  00:49DD                          DB $7C,$DE,$06,$06,$C0,$C0,$E0,$70
     163.  00:49DD  7C DE 06 06 C0 C0 E0 70 
     164.  00:49E5                          ; mask 1 - 10h
     165.  00:49E5                          DB $00,$00,$1F,$15,$11,$32,$18,$0C
     165.  00:49E5  00 00 1F 15 11 32 18 0C 
     166.  00:49ED                          DB $01,$60,$03,$03,$01,$01,$00,$00
     166.  00:49ED  01 60 03 03 01 01 00 00 
     167.  00:49F5                          DB $00,$00,$58,$68,$8C,$48,$1C,$30
     167.  00:49F5  00 00 58 68 8C 48 1C 30 
     168.  00:49FD                          DB $80,$00,$C0,$C0,$80,$80,$80,$00
     168.  00:49FD  80 00 C0 C0 80 80 80 00 
     169.  00:4A05                          ; mask 2 - 14h
     170.  00:4A05                          DB $00,$00,$00,$00,$00,$30,$00,$00
     170.  00:4A05  00 00 00 00 00 30 00 00 
     171.  00:4A0D                          DB $00,$04,$00,$00,$00,$00,$00,$00
     171.  00:4A0D  00 04 00 00 00 00 00 00 
     172.  00:4A15                          DB $00,$00,$00,$00,$00,$08,$00,$00
     172.  00:4A15  00 00 00 00 00 08 00 00 
     173.  00:4A1D                          DB $00,$20,$00,$00,$00,$00,$00,$00
     173.  00:4A1D  00 20 00 00 00 00 00 00 
     174.  00:4A25                          
     175.  00:4A25                          ;Ghost 1 Left - 18H
     176.  00:4A25                          DB 00h,01h,07h,0fh,1fh,3fh,7fh,01h
     176.  00:4A25  00 01 07 0F 1F 3F 7F 01 
     177.  00:4A2D                          DB $15,$14,$7f,$3f,$3f,$3f,$3f,$7f
     177.  00:4A2D  15 14 7F 3F 3F 3F 3F 7F 
     178.  00:4A35                          DB $00,$e0,$80,$00,$00,$80,$80,$c0
     178.  00:4A35  00 E0 80 00 00 80 80 C0 
     179.  00:4A3D                          DB $c0,$e0,$f0,$f8,$fc,$fc,$fe,$ff  
     179.  00:4A3D  C0 E0 F0 F8 FC FC FE FF 
     180.  00:4A45                          
     181.  00:4A45                          ; Ghost 2 Left - 1Ch
     182.  00:4A45                          DB $00,$01,$07,$0f,$1f,$3f,$7f,$01
     182.  00:4A45  00 01 07 0F 1F 3F 7F 01 
     183.  00:4A4D                          DB $15,$14,$7f,$3f,$3f,$7f,$7f,$83
     183.  00:4A4D  15 14 7F 3F 3F 7F 7F 83 
     184.  00:4A55                          DB $00,$e0,$80,$00,$00,$80,$80,$c0
     184.  00:4A55  00 E0 80 00 00 80 80 C0 
     185.  00:4A5D                          DB $c0,$e0,$e0,$f0,$f8,$fc,$fe,$ff      
     185.  00:4A5D  C0 E0 E0 F0 F8 FC FE FF 
     186.  00:4A65                      
     187.  00:4A65                          ; Ghost 1 Right - 20h
     188.  00:4A65                          DB $00,$07,$01,$00,$00,$01,$01,$03
     188.  00:4A65  00 07 01 00 00 01 01 03 
     189.  00:4A6D                          DB $03,$07,$07,$0f,$1f,$3f,$7f,$ff
     189.  00:4A6D  03 07 07 0F 1F 3F 7F FF 
     190.  00:4A75                          DB $00,$80,$e0,$f0,$f8,$fc,$fe,$80
     190.  00:4A75  00 80 E0 F0 F8 FC FE 80 
     191.  00:4A7D                          DB $a8,$28,$fe,$fc,$fc,$fe,$fe,$c1
     191.  00:4A7D  A8 28 FE FC FC FE FE C1 
     192.  00:4A85                          
     193.  00:4A85                          ; Ghost 2 Right - 24h
     194.  00:4A85                          DB $00,$07,$01,$00,$00,$01,$01,$03
     194.  00:4A85  00 07 01 00 00 01 01 03 
     195.  00:4A8D                          DB $03,$07,$0f,$1f,$3f,$3f,$7f,$ff
     195.  00:4A8D  03 07 0F 1F 3F 3F 7F FF 
     196.  00:4A95                          DB $00,$80,$e0,$f0,$f8,$fc,$fe,$80
     196.  00:4A95  00 80 E0 F0 F8 FC FE 80 
     197.  00:4A9D                          DB $a8,$28,$fe,$fc,$fc,$fc,$fc,$fe  
     197.  00:4A9D  A8 28 FE FC FC FC FC FE 
     198.  00:4AA5                      
     199.  00:4AA5                          ; Antichrist - RIGHT
     200.  00:4AA5                          ; mask 0 - 28h
     201.  00:4AA5                          ;DB $00,$00,$00,$03,$07,$0F,$1E,$1E
     202.  00:4AA5                          ;DB $1E,$1C,$1E,$0F,$07,$03,$00,$00
     203.  00:4AA5                          ;DB $00,$00,$00,$00,$80,$C0,$E0,$F0
     204.  00:4AA5                          ;DB $F8,$70,$E0,$C0,$80,$00,$00,$00
     205.  00:4AA5                          DB $00,$00,$00,$01,$01,$01,$01,$01
     205.  00:4AA5  00 00 00 01 01 01 01 01 
     206.  00:4AAD                          DB $01,$01,$07,$07,$01,$01,$00,$00
     206.  00:4AAD  01 01 07 07 01 01 00 00 
     207.  00:4AB5                          DB $00,$00,$00,$80,$80,$80,$80,$80
     207.  00:4AB5  00 00 00 80 80 80 80 80 
     208.  00:4ABD                          DB $80,$80,$E0,$E0,$80,$80,$00,$00
     208.  00:4ABD  80 80 E0 E0 80 80 00 00 
     209.  00:4AC5                      
     210.  00:4AC5                      
     211.  00:4AC5                          ; Esqueleto
     212.  00:4AC5                          ; mask 0 - 2Ch
     213.  00:4AC5                              ; --- Slot 0    
     214.  00:4AC5                          DB $01,$03,$03,$03,$01,$00,$00,$01
     214.  00:4AC5  01 03 03 03 01 00 00 01 
     215.  00:4ACD                          DB $07,$0B,$13,$0B,$03,$04,$04,$0C
     215.  00:4ACD  07 0B 13 0B 03 04 04 0C 
     216.  00:4AD5                          DB $F8,$F8,$74,$24,$FC,$F8,$F8,$00
     216.  00:4AD5  F8 F8 74 24 FC F8 F8 00 
     217.  00:4ADD                          DB $C0,$A0,$90,$20,$80,$40,$40,$60    
     217.  00:4ADD  C0 A0 90 20 80 40 40 60 
     218.  00:4AE5                          ; mask 1 - 30h
     219.  00:4AE5                          DB $00,$01,$01,$01,$00,$00,$00,$00
     219.  00:4AE5  00 01 01 01 00 00 00 00 
     220.  00:4AED                          DB $00,$08,$11,$09,$01,$00,$00,$00
     220.  00:4AED  00 08 11 09 01 00 00 00 
     221.  00:4AF5                          DB $F8,$F8,$FC,$FC,$FC,$78,$50,$00
     221.  00:4AF5  F8 F8 FC FC FC 78 50 00 
     222.  00:4AFD                          DB $00,$A0,$90,$20,$80,$00,$00,$00    
     222.  00:4AFD  00 A0 90 20 80 00 00 00 
     223.  00:4B05                      
     224.  00:4B05                      SPRITE_COLOR_TABLE:       
     225.  00:4B05                           ;DOWN 1
     226.  00:4B05                          ; attr 0
     227.  00:4B05                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     227.  00:4B05  06 06 0B 0B 0B 0B 0B 0B 
     228.  00:4B0D                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     228.  00:4B0D  0C 0C 0B 0B 04 04 04 04 
     229.  00:4B15                          ; attr 1
     230.  00:4B15                          DB $00,$00,$46,$46,$46,$44,$46,$46
     230.  00:4B15  00 00 46 46 46 44 46 46 
     231.  00:4B1D                          DB $4B,$4B,$44,$44,$42,$42,$42,$00
     231.  00:4B1D  4B 4B 44 44 42 42 42 00 
     232.  00:4B25                          ; attr 2
     233.  00:4B25                          DB $00,$00,$00,$00,$00,$42,$00,$00
     233.  00:4B25  00 00 00 00 00 42 00 00 
     234.  00:4B2D                          DB $00,$46,$00,$00,$00,$00,$00,$00
     234.  00:4B2D  00 46 00 00 00 00 00 00 
     235.  00:4B35                               
     236.  00:4B35                          ; Cada posición ha de corresponder con la tabla de atributos    
     237.  00:4B35                      
     238.  00:4B35                          ; Fantasma
     239.  00:4B35                          DB $08,$08,$08,$08,$08,$08,$08,$08
     239.  00:4B35  08 08 08 08 08 08 08 08 
     240.  00:4B3D                          DB $08,$08,$08,$08,$08,$08,$08,$08
     240.  00:4B3D  08 08 08 08 08 08 08 08 
     241.  00:4B45                          ; Fantasma
     242.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     243.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     244.  00:4B45                          ; Fantasma
     245.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     246.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     247.  00:4B45                          ; Fantasma
     248.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     249.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08    
     250.  00:4B45                          ; Me ahorro los colores del fantasma, la 4a posicion del array de atributos será para el disparo
     251.  00:4B45                          ; Boomerang
     252.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     253.  00:4B45                          ;DB $08,$08,$08,$08,$08,$08,$08,$08
     254.  00:4B45                          DB $00,$00,$00,$0F,$0F,$0F,$0F,$0F
     254.  00:4B45  00 00 00 0F 0F 0F 0F 0F 
     255.  00:4B4D                          DB $0F,$0F,$0F,$0F,$0F,$0F,$00,$00
     255.  00:4B4D  0F 0F 0F 0F 0F 0F 00 00 
     256.  00:4B55                          ; Esqueleto 1
     257.  00:4B55                          ; attr 0
     258.  00:4B55                          DB $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E
     258.  00:4B55  0E 0E 0E 0E 0E 0E 0E 0E 
     259.  00:4B5D                          DB $0F,$0E,$0E,$0E,$0E,$0F,$0F,$0F
     259.  00:4B5D  0F 0E 0E 0E 0E 0F 0F 0F 
     260.  00:4B65                          ; Esqueleto 2
     261.  00:4B65                          ; attr 1
     262.  00:4B65                          DB $41,$41,$49,$49,$41,$41,$41,$00
     262.  00:4B65  41 41 49 49 41 41 41 00 
     263.  00:4B6D                          DB $00,$41,$41,$41,$41,$00,$00,$00
     263.  00:4B6D  00 41 41 41 41 00 00 00 
     264.  00:4B75                      
     265.  00:4B75                      SPRITE_COLOR_P1_UP:
     266.  00:4B75                          ;UP 1
     267.  00:4B75                          ; attr 0
     268.  00:4B75                          DB $06,$06,$06,$06,$06,$06,$06,$06
     268.  00:4B75  06 06 06 06 06 06 06 06 
     269.  00:4B7D                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     269.  00:4B7D  0C 0C 0B 0B 04 04 04 04 
     270.  00:4B85                          ; attr 1
     271.  00:4B85                          DB $00,$00,$00,$00,$00,$00,$00,$00
     271.  00:4B85  00 00 00 00 00 00 00 00 
     272.  00:4B8D                          DB $46,$4B,$44,$44,$42,$42,$42,$00
     272.  00:4B8D  46 4B 44 44 42 42 42 00 
     273.  00:4B95                          ; attr 2
     274.  00:4B95                          DB $00,$00,$00,$00,$00,$00,$00,$00
     274.  00:4B95  00 00 00 00 00 00 00 00 
     275.  00:4B9D                          DB $00,$46,$42,$42,$00,$00,$00,$00   
     275.  00:4B9D  00 46 42 42 00 00 00 00 
     276.  00:4BA5                          
     277.  00:4BA5                          ;SPRITE_COLOR_P1_UP2:
     278.  00:4BA5                          ;UP 1
     279.  00:4BA5                          ; attr 0
     280.  00:4BA5                          DB $06,$06,$06,$06,$06,$06,$06,$06
     280.  00:4BA5  06 06 06 06 06 06 06 06 
     281.  00:4BAD                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     281.  00:4BAD  0C 0C 0B 0B 04 04 04 04 
     282.  00:4BB5                          ; attr 1
     283.  00:4BB5                          DB $00,$00,$00,$00,$00,$00,$00,$00
     283.  00:4BB5  00 00 00 00 00 00 00 00 
     284.  00:4BBD                          DB $46,$4B,$44,$44,$42,$42,$42,$00
     284.  00:4BBD  46 4B 44 44 42 42 42 00 
     285.  00:4BC5                          ; attr 2
     286.  00:4BC5                          DB $00,$00,$00,$00,$00,$00,$00,$00
     286.  00:4BC5  00 00 00 00 00 00 00 00 
     287.  00:4BCD                          DB $00,$46,$42,$42,$00,$00,$00,$00   
     287.  00:4BCD  00 46 42 42 00 00 00 00 
     288.  00:4BD5                      
     289.  00:4BD5                      SPRITE_COLOR_P1_DOWN:
     290.  00:4BD5                          ;DOWN 1
     291.  00:4BD5                          ; attr 0
     292.  00:4BD5                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     292.  00:4BD5  06 06 0B 0B 0B 0B 0B 0B 
     293.  00:4BDD                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     293.  00:4BDD  0C 0C 0B 0B 04 04 04 04 
     294.  00:4BE5                          ; attr 1
     295.  00:4BE5                          DB $00,$00,$46,$46,$46,$44,$46,$46
     295.  00:4BE5  00 00 46 46 46 44 46 46 
     296.  00:4BED                          DB $4B,$4B,$44,$44,$42,$42,$42,$00
     296.  00:4BED  4B 4B 44 44 42 42 42 00 
     297.  00:4BF5                          ; attr 2
     298.  00:4BF5                          DB $00,$00,$00,$00,$00,$42,$00,$00
     298.  00:4BF5  00 00 00 00 00 42 00 00 
     299.  00:4BFD                          DB $00,$46,$00,$00,$00,$00,$00,$00        
     299.  00:4BFD  00 46 00 00 00 00 00 00 
     300.  00:4C05                      
     301.  00:4C05                          ;SPRITE_COLOR_P1_DOWN2:
     302.  00:4C05                          ;DOWN 1
     303.  00:4C05                          ; attr 0
     304.  00:4C05                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     304.  00:4C05  06 06 0B 0B 0B 0B 0B 0B 
     305.  00:4C0D                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     305.  00:4C0D  0C 0C 0B 0B 04 04 04 04 
     306.  00:4C15                          ; attr 1
     307.  00:4C15                          DB $00,$00,$46,$46,$46,$44,$46,$46
     307.  00:4C15  00 00 46 46 46 44 46 46 
     308.  00:4C1D                          DB $4B,$4B,$44,$44,$42,$42,$42,$00
     308.  00:4C1D  4B 4B 44 44 42 42 42 00 
     309.  00:4C25                          ; attr 2
     310.  00:4C25                          DB $00,$00,$00,$00,$00,$42,$00,$00
     310.  00:4C25  00 00 00 00 00 42 00 00 
     311.  00:4C2D                          DB $00,$46,$00,$00,$00,$00,$00,$00        
     311.  00:4C2D  00 46 00 00 00 00 00 00 
     312.  00:4C35                      
     313.  00:4C35                      SPRITE_COLOR_P1_RIGHT:
     314.  00:4C35                          ; attr 0
     315.  00:4C35                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     315.  00:4C35  06 06 0B 0B 0B 0B 0B 0B 
     316.  00:4C3D                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     316.  00:4C3D  0C 0C 0B 0B 04 04 04 04 
     317.  00:4C45                          ; attr 1
     318.  00:4C45                          DB $00,$00,$46,$46,$44,$46,$46,$46
     318.  00:4C45  00 00 46 46 44 46 46 46 
     319.  00:4C4D                          DB $4B,$46,$4C,$44,$42,$42,$00,$00
     319.  00:4C4D  4B 46 4C 44 42 42 00 00 
     320.  00:4C55                          ; attr 2
     321.  00:4C55                          DB $00,$00,$00,$00,$42,$00,$00,$00
     321.  00:4C55  00 00 00 00 42 00 00 00 
     322.  00:4C5D                          DB $46,$00,$46,$42,$00,$00,$00,$00
     322.  00:4C5D  46 00 46 42 00 00 00 00 
     323.  00:4C65                          ; attr 0
     324.  00:4C65                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     324.  00:4C65  06 06 0B 0B 0B 0B 0B 0B 
     325.  00:4C6D                          DB $0C,$0C,$06,$04,$04,$04,$04,$04
     325.  00:4C6D  0C 0C 06 04 04 04 04 04 
     326.  00:4C75                          ; attr 1
     327.  00:4C75                          DB $00,$00,$46,$46,$44,$46,$46,$46
     327.  00:4C75  00 00 46 46 44 46 46 46 
     328.  00:4C7D                          DB $4B,$4B,$4A,$42,$42,$42,$00,$00
     328.  00:4C7D  4B 4B 4A 42 42 42 00 00 
     329.  00:4C85                          ; attr 2
     330.  00:4C85                          DB $00,$00,$00,$00,$42,$00,$00,$00
     330.  00:4C85  00 00 00 00 42 00 00 00 
     331.  00:4C8D                          DB $46,$46,$41,$00,$00,$00,$00,$00
     331.  00:4C8D  46 46 41 00 00 00 00 00 
     332.  00:4C95                      
     333.  00:4C95                      mapa1:
     334.  00:4C95                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     334.  00:4C95  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     334.  00:4CA5  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     335.  00:4CB5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     335.  00:4CB5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     335.  00:4CC5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     336.  00:4CD5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     336.  00:4CD5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     336.  00:4CE5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     337.  00:4CF5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     337.  00:4CF5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     337.  00:4D05  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     338.  00:4D15                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     338.  00:4D15  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     338.  00:4D25  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     339.  00:4D35                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     339.  00:4D35  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     339.  00:4D45  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     340.  00:4D55                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     340.  00:4D55  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     340.  00:4D65  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     341.  00:4D75                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     341.  00:4D75  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     341.  00:4D85  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     342.  00:4D95                            
     343.  00:4D95                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     343.  00:4D95  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     343.  00:4DA5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     344.  00:4DB5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     344.  00:4DB5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     344.  00:4DC5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     345.  00:4DD5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     345.  00:4DD5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     345.  00:4DE5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     346.  00:4DF5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     346.  00:4DF5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     346.  00:4E05  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     347.  00:4E15                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     347.  00:4E15  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     347.  00:4E25  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     348.  00:4E35                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     348.  00:4E35  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     348.  00:4E45  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     349.  00:4E55                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     349.  00:4E55  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     349.  00:4E65  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     350.  00:4E75                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     350.  00:4E75  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     350.  00:4E85  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     351.  00:4E95                      
     352.  00:4E95                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     352.  00:4E95  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     352.  00:4EA5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     353.  00:4EB5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     353.  00:4EB5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     353.  00:4EC5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     354.  00:4ED5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     354.  00:4ED5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     354.  00:4EE5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     355.  00:4EF5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     355.  00:4EF5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     355.  00:4F05  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     356.  00:4F15                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     356.  00:4F15  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     356.  00:4F25  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     357.  00:4F35                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     357.  00:4F35  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     357.  00:4F45  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     358.  00:4F55                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     358.  00:4F55  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     358.  00:4F65  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     359.  00:4F75                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     359.  00:4F75  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     359.  00:4F85  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     360.  00:4F95                            
     361.  00:4F95                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     361.  00:4F95  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     361.  00:4FA5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     362.  00:4FB5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     362.  00:4FB5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     362.  00:4FC5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     363.  00:4FD5                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     363.  00:4FD5  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     363.  00:4FE5  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     364.  00:4FF5                      
     365.  00:4FF5                      mapa2:
     366.  00:4FF5                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     366.  00:4FF5  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     366.  00:5005  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     367.  00:5015                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     367.  00:5015  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     367.  00:5025  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     368.  00:5035                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     368.  00:5035  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     368.  00:5045  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     369.  00:5055                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     369.  00:5055  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     369.  00:5065  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     370.  00:5075                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     370.  00:5075  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     370.  00:5085  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     371.  00:5095                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     371.  00:5095  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     371.  00:50A5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     372.  00:50B5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     372.  00:50B5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     372.  00:50C5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     373.  00:50D5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     373.  00:50D5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     373.  00:50E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     374.  00:50F5                            
     375.  00:50F5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     375.  00:50F5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     375.  00:5105  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     376.  00:5115                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     376.  00:5115  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     376.  00:5125  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     377.  00:5135                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     377.  00:5135  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     377.  00:5145  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     378.  00:5155                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     378.  00:5155  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     378.  00:5165  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     379.  00:5175                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     379.  00:5175  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     379.  00:5185  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     380.  00:5195                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     380.  00:5195  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     380.  00:51A5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     381.  00:51B5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     381.  00:51B5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     381.  00:51C5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     382.  00:51D5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     382.  00:51D5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     382.  00:51E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     383.  00:51F5                      
     384.  00:51F5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     384.  00:51F5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     384.  00:5205  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     385.  00:5215                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     385.  00:5215  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     385.  00:5225  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     386.  00:5235                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     386.  00:5235  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     386.  00:5245  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     387.  00:5255                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     387.  00:5255  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     387.  00:5265  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     388.  00:5275                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     388.  00:5275  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     388.  00:5285  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     389.  00:5295                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     389.  00:5295  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     389.  00:52A5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     390.  00:52B5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     390.  00:52B5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     390.  00:52C5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     391.  00:52D5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     391.  00:52D5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     391.  00:52E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     392.  00:52F5                            
     393.  00:52F5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     393.  00:52F5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     393.  00:5305  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     394.  00:5315                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     394.  00:5315  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     394.  00:5325  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     395.  00:5335                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     395.  00:5335  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     395.  00:5345  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     396.  00:5355                      
     397.  00:5355                      
     398.  00:5355                      mapa0:      
     399.  00:5355                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     399.  00:5355  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     399.  00:5365  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     400.  00:5375                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     400.  00:5375  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     400.  00:5385  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     401.  00:5395                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     401.  00:5395  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     401.  00:53A5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     402.  00:53B5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     402.  00:53B5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     402.  00:53C5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     403.  00:53D5                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     403.  00:53D5  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     403.  00:53E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     404.  00:53F5                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     404.  00:53F5  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     404.  00:5405  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     405.  00:5415                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01       
     405.  00:5415  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     405.  00:5425  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     406.  00:5435                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     406.  00:5435  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     406.  00:5445  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     407.  00:5455                            
     408.  00:5455                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     408.  00:5455  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     408.  00:5465  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     409.  00:5475                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     409.  00:5475  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     409.  00:5485  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     410.  00:5495                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01,#00,#00,#00,#00,#01        
     410.  00:5495  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     410.  00:54A5  00 00 00 00 00 00 00 00 00 01 01 00 00 00 00 01 
     411.  00:54B5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01,#00,#00,#00,#00,#01        
     411.  00:54B5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     411.  00:54C5  00 00 00 00 00 00 00 00 00 01 01 00 00 00 00 01 
     412.  00:54D5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     412.  00:54D5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     412.  00:54E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     413.  00:54F5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     413.  00:54F5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     413.  00:5505  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     414.  00:5515                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     414.  00:5515  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     414.  00:5525  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     415.  00:5535                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     415.  00:5535  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     415.  00:5545  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     416.  00:5555                      
     417.  00:5555                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     417.  00:5555  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     417.  00:5565  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     418.  00:5575                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     418.  00:5575  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     418.  00:5585  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     419.  00:5595                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     419.  00:5595  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     419.  00:55A5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     420.  00:55B5                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     420.  00:55B5  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     420.  00:55C5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     421.  00:55D5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     421.  00:55D5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     421.  00:55E5  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     422.  00:55F5                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     422.  00:55F5  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     422.  00:5605  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     423.  00:5615                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     423.  00:5615  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     423.  00:5625  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     424.  00:5635                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     424.  00:5635  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     424.  00:5645  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     425.  00:5655                            
     426.  00:5655                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     426.  00:5655  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     426.  00:5665  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     427.  00:5675                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     427.  00:5675  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     427.  00:5685  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     428.  00:5695                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     428.  00:5695  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     428.  00:56A5  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     429.  00:56B5                          
     430.  00:56B5                      
     431.  00:56B5                      SPRITE_COLOR_P1_LEFT:
     432.  00:56B5                          ; attr 0
     433.  00:56B5                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     433.  00:56B5  06 06 0B 0B 0B 0B 0B 0B 
     434.  00:56BD                          DB $0C,$0C,$0B,$0B,$04,$04,$04,$04
     434.  00:56BD  0C 0C 0B 0B 04 04 04 04 
     435.  00:56C5                          ; attr 1
     436.  00:56C5                          DB $00,$00,$46,$46,$44,$46,$46,$46
     436.  00:56C5  00 00 46 46 44 46 46 46 
     437.  00:56CD                          DB $4B,$46,$4C,$44,$42,$42,$00,$00
     437.  00:56CD  4B 46 4C 44 42 42 00 00 
     438.  00:56D5                          ; attr 2
     439.  00:56D5                          DB $00,$00,$00,$00,$42,$00,$00,$00
     439.  00:56D5  00 00 00 00 42 00 00 00 
     440.  00:56DD                          DB $46,$00,$46,$42,$00,$00,$00,$00
     440.  00:56DD  46 00 46 42 00 00 00 00 
     441.  00:56E5                          
     442.  00:56E5                          ;SPRITE_COLOR_P1_LEFT2:
     443.  00:56E5                          ; attr 0
     444.  00:56E5                          DB $06,$06,$0B,$0B,$0B,$0B,$0B,$0B
     444.  00:56E5  06 06 0B 0B 0B 0B 0B 0B 
     445.  00:56ED                          DB $0C,$0C,$06,$04,$04,$04,$04,$04
     445.  00:56ED  0C 0C 06 04 04 04 04 04 
     446.  00:56F5                          ; attr 1
     447.  00:56F5                          DB $00,$00,$46,$46,$44,$46,$46,$46
     447.  00:56F5  00 00 46 46 44 46 46 46 
     448.  00:56FD                          DB $4B,$4B,$4A,$42,$42,$42,$00,$00
     448.  00:56FD  4B 4B 4A 42 42 42 00 00 
     449.  00:5705                          ; attr 2
     450.  00:5705                          DB $00,$00,$00,$00,$42,$00,$00,$00
     450.  00:5705  00 00 00 00 42 00 00 00 
     451.  00:570D                          DB $46,$46,$41,$00,$00,$00,$00,$00
     451.  00:570D  46 46 41 00 00 00 00 00 
     651   00:5715                      
     652   00:5715  (01)                 PAGE 1
     653   01:8000                      ; CODE O NO
     654   01:8000                      
     655   01:8000  (02)                 PAGE 2
     656   02:8000                      
     657   02:8000  (03)                 PAGE 3
     658   03:8000                      
     659   03:8000  (04)                 PAGE 4
     660   04:8000  (05)                 PAGE 5
     661   05:8000  (06)                 PAGE 6
     662   06:8000                      
     663   06:8000  (07)                 PAGE 7
     664   07:8000                      CEMENTER1
     665   07:8000  (4000)               INCBIN "gfx\CEMENTER1.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     666   07:C000  (08)                 PAGE 8
     667   08:8000  (2A00)               INCBIN "gfx\CEMENTER1.SC5",#4007			; Cada página tiene 16K = 4000h 
     668   08:AA00  (09)                 PAGE 9
     669   09:8000                      GRAPHIC
     670   09:8000  (4000)               INCBIN "gfx\BTH.SR8",#7,#4000			; Cada página tiene 16K = 4000h
     671   09:C000  (0A)                 PAGE 10
     672   0A:8000  (4000)               INCBIN "gfx\BTH.SR8",#4007,#4000
     673   0A:C000                      
     674   0A:C000  (0B)                 PAGE 11
     675   0B:8000  (4000)               INCBIN "gfx\BTH.SR8",#8007,#4000
     676   0B:C000                      
     677   0B:C000  (0C)                 PAGE 12
     678   0C:8000  (1400)               INCBIN "gfx\BTH.SR8",#C007
     679   0C:9400                      
     680   0C:9400  (0D)                 PAGE 13
     681   0D:8000                      CEMENTER2
     682   0D:8000  (4000)               INCBIN "gfx\CEMENTER2.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     683   0D:C000  (0E)                 PAGE 14
     684   0E:8000  (2A00)               INCBIN "gfx\CEMENTER2.SC5",#4007			; Cada página tiene 16K = 4000h 
     685   0E:AA00  (0F)                 PAGE 15
     686   0F:C000                      ;---------------------------------------------------------
     687   0F:C000                      ; Variables
     688   0F:C000                      ;---------------------------------------------------------
     689   0F:C000                      	
     690   0F:C000  (C000)              	MAP #C000  ;Ram page 3
     691   0F:C000                      ;	MAP #E5FF  ;Ram page 3
     692   0F:C000                      ;NAME #1  ;a byte is reserved for this variable
     693   0F:C000                      ;ETC
     694   0F:C000                      ;
     695   0F:C000                      	include "include\BTH_RAM.asm"
       1.  0F:C000  00                  JIFFY_TEMP DB $00
       2.  0F:C001  00                  CHAR_SPEED_X DB $00
       3.  0F:C002  00                  CHAR_SPEED_Y DB $00
       4.  0F:C003  00                  CHAR_SPEED_X_GHOST DB $00
       5.  0F:C004  00 (1)              CHAR_GHOST_DEAD DS 1
       6.  0F:C005  00                  CHAR_DIR_GHOST1 DB $00      ; $00 - LEFT, $FF - RIGHT
       7.  0F:C006  00                  CHAR_DIR_MAIN DB $00        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
       8.  0F:C007  00 (1)              CHAR_NEW_DIR_MAIN DS 1
       9.  0F:C008  00 (1)              CHAR_MAIN_SHOOT DS 1        ; $01 - SHOOT LEFT $02 - SHOOT RIGHT $03 - SHOOT UP $04 - SHOOT DOWN
      10.  0F:C009  00 (1)              CHAR_MIN_STEP DS 1          ; número de ciclos antes de cambiar de patrón
      11.  0F:C00A  00 (1)              CHAR_DISTANCE_SHOOT DS 1
      12.  0F:C00B  00 (1)              CHAR_SPEED_SHOOT DS 1
      13.  0F:C00C                      SPRITE_ATTRS:
      14.  0F:C00C  00 (128)                DS 128
      15.  0F:C08C                      SLOTBIOS:
      16.  0F:C08C  00 (1)                  DS 1
      17.  0F:C08D                      SLOTGAME:
      18.  0F:C08D  00 (1)                  DS 1
      19.  0F:C08E                      SLOTRAM:
      20.  0F:C08E  00 (1)                  DS 1
      21.  0F:C08F                      SPRITE_PTR_REPLACE:
      22.  0F:C08F  00 (2)                  DS 2
      23.  0F:C091                      SPRITE_COLOR_REPLACE:
      24.  0F:C091  00 (2)                  DS 2
      25.  0F:C093                      SPRITE_COLOR_REPLACE2:
      26.  0F:C093  00 (2)                  DS 2
      27.  0F:C095                      MAPA:
      28.  0F:C095  00 (2)                  DS 2
      29.  0F:C097                      BITMAP:
      30.  0F:C097  00 (2)                  DS 2
     696   0F:C099  (0000)              	ENDMAP

    LABELS
-------------------------------------------------
00:00004000 X PageSize
00:00006000 X _bank1
00:00007000   _bank2
00:0000009F X CHGET
00:000000A2 X CHPUT
00:0000005F   CHGMOD
00:0000005C   LDIRVM
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000F3DB   CLIKSW
00:00000141   SNSMAT
00:0000FC9E X JIFFY
00:00000041 X DISSCR
00:00000044 X ENASCR
00:00000072 X INIGRP
00:00000138   RSLREG
00:00000024   ENASLT
00:00000001 X ROMMODE
00:00000007   KB_RIGHT
00:00000006   KB_DOWN
00:00000005   KB_UP
00:00000004   KB_LEFT
00:00000003   KB_DEL
00:00000000   KB_SPACE
00:00000001   MOV_SPEED
00:00000001   MOV_SPEED_GHOST
00:00000003   MOV_SPEED_SHOOT
00:00000030   MAX_DISTANCE_SHOOT
00:00000004   MAX_CHAR_STEPS
00:0000FFE8   REG9SAV
00:00000098   PORT_0
00:00000099   PORT_1
00:0000009A X PORT_2
00:0000009B X PORT_3
00:0000F3E0   RG15AV
00:0000F3E9   FORCLR
00:00004010   check_spr_collision
00:0000401D   check_spr_collision.no_collision
00:00004020   get_bloque_en_X_Y
00:00004041   SetVdp_Write
00:0000405D   Set212Lines
00:00004069   ClearVram_MSX2
00:00004073   ClearVram_MSX2.loop_2
00:00004075   ClearVram_MSX2.loop_1
00:00004077   ClearVram_MSX2.loop
00:00004084 X opening_screen
00:000040A7   load_screen
00:000040C9   _vdpsetvramwr
00:000040DA X _vdpsetvramwr14
00:000040E3   GETSLOT
00:000040FA   EXIT
00:000040FC   SETPAGES32K
00:00004101   NOPRET
00:0000410F   SET_SCREEN5_MODE
00:00004131   DUMP_SPR_ALL
00:00004156   DUMP_SPR_ATTS
00:00004170 X DUMP_SPR_ATTS.DUMP_SPR_ATTS_END
00:00004171   DUMP_SPR_P1
00:0000418E X SETPAGES48K
00:000041A2 X SETGAMEPAGE0
00:000041A8 X RESTOREBIOS
00:000041AB   SETPAGE0
00:000041D9   SETPAGE0.SETPRIMARY
00:000041DD   START
00:0000420E   INIT_CHARS_VARS
00:0000427C   MAIN_LOOP
00:000042A6   MAIN_LOOP.CHANGE_DIR_RIGHT
00:000042B3   MAIN_LOOP.CHANGE_DIR_LEFT
00:000042BC   MAIN_LOOP.check_pattern
00:000042D3   MAIN_LOOP.change_pattern_L
00:000042DA   MAIN_LOOP.check_pattern_RIGHT
00:000042E9   MAIN_LOOP.change_pattern_R
00:000042ED   MAIN_LOOP.continue
00:00004307   MAIN_LOOP.MOVE_SHOOT_RIGHT
00:0000430F   MAIN_LOOP.MOVE_SHOOT_UP
00:00004317   MAIN_LOOP.MOVE_SHOOT_DOWN
00:0000431F   MAIN_LOOP.MOVE_SHOOT_LEFT
00:00004324   MAIN_LOOP.CHECK_SHOOT_DISTANCE
00:00004339   MAIN_LOOP.ADD_SHOOT_Y
00:00004343   MAIN_LOOP.CHECK_GHOST
00:0000435F   MAIN_LOOP.ADD_DISTANCE
00:0000436F   MAIN_LOOP.KILL_GHOST
00:00004378   MAIN_LOOP.HIDE_SHOOT
00:00004383   MAIN_LOOP.check_KB
00:0000439E   no_arrows
00:000043A9   SHOOT_MAIN_CHAR
00:000043EB   SHOOT_MAIN_CHAR.SHOOT_RIGHT
00:000043FA   SHOOT_MAIN_CHAR.SHOOT_UP
00:0000440D   SHOOT_MAIN_CHAR.SHOOT_DOWN
00:0000441D   SHOOT_MAIN_CHAR.CONTINUE
00:00004423   move_up
00:0000445B   move_down
00:00004494   move_right
00:000044E3   move_left
00:00004532   CHECK_DIRECTION_MAIN
00:00004554   CHECK_DIRECTION_MAIN.SET_DIR_DOWN
00:00004569   CHECK_DIRECTION_MAIN.SET_DIR_UP
00:0000457E   CHECK_DIRECTION_MAIN.SET_DIR_LEFT
00:00004593   CHECK_DIRECTION_MAIN.SET_DIR_RIGHT
00:000045A8   CHECK_DIRECTION_MAIN.FINISH
00:000045BF   UPDATE_MOVEMENT
00:0000460D   UPDATE_MOVEMENT.SET_SPR_1P_2
00:00004624   UPDATE_MOVEMENT.NO_CHAR_PATTERN_CHANGE
00:0000462A   NO_MOVEMENT
00:0000462E   STAGE2
00:0000463F   MAIN_LOOP2
00:0000465A X MAIN_LOOP2.no_arrows
00:00004665   SPRITE_P1_UP
00:00004725   SPRITE_P1_DOWN
00:000047E5   SPRITE_P1_LEFT
00:000048A5   SPRITE_P1_RIGHT
00:00004965   SPRITE_PATTERN
00:00004B05   SPRITE_COLOR_TABLE
00:00004B75   SPRITE_COLOR_P1_UP
00:00004BD5   SPRITE_COLOR_P1_DOWN
00:00004C35   SPRITE_COLOR_P1_RIGHT
00:00004C95   mapa1
00:00004FF5   mapa2
00:00005355 X mapa0
00:000056B5   SPRITE_COLOR_P1_LEFT
07:00008000   CEMENTER1
09:00008000   GRAPHIC
0D:00008000   CEMENTER2
0F:0000C000   JIFFY_TEMP
0F:0000C001   CHAR_SPEED_X
0F:0000C002   CHAR_SPEED_Y
0F:0000C003   CHAR_SPEED_X_GHOST
0F:0000C004   CHAR_GHOST_DEAD
0F:0000C005   CHAR_DIR_GHOST1
0F:0000C006   CHAR_DIR_MAIN
0F:0000C007   CHAR_NEW_DIR_MAIN
0F:0000C008   CHAR_MAIN_SHOOT
0F:0000C009   CHAR_MIN_STEP
0F:0000C00A   CHAR_DISTANCE_SHOOT
0F:0000C00B   CHAR_SPEED_SHOOT
0F:0000C00C   SPRITE_ATTRS
0F:0000C08C   SLOTBIOS
0F:0000C08D   SLOTGAME
0F:0000C08E X SLOTRAM
0F:0000C08F   SPRITE_PTR_REPLACE
0F:0000C091   SPRITE_COLOR_REPLACE
0F:0000C093   SPRITE_COLOR_REPLACE2
0F:0000C095   MAPA
0F:0000C097   BITMAP


 Output: .\bth.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: BTH.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00004000  Used: 0000171B

   Address   Length Align   Label
   00004000    5909         check_spr_collision
   00005715       6         
   0000571B   10469       <empty>

 Page: 01
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 02
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 03
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 04
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 05
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 06
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 07
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER1

 Page: 08
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 09
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         GRAPHIC

 Page: 0A
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0B
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0C
  Org: 00008000  Size: 00004000  Used: 00001400

   Address   Length Align   Label
   00008000    5120         
   00009400   11264       <empty>

 Page: 0D
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER2

 Page: 0E
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 0F
  Org: 0000C000  Size: 00004000  Used: 00000099

   Address   Length Align   Label
   0000C000     153         JIFFY_TEMP
   0000C099   16231       <empty>
