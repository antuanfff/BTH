Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2024.05.05 - 12:36:40]

bth.asm
Errors: 0

       1   00:0000                      	output "BTH.rom" 
       2   00:7938                      
       3   00:7938                      ;ROM ASCII16
       4   00:7938                      		defpage	0,0x4000, 0x4000
       5   00:7938                      		defpage	1,0x8000, 0x4000        
       6   00:7938                      		defpage	2..14 ;Here it is determined rom size        
       7   00:7938                              defpage	15,0xC000, 0x4000
       8   00:7938                      
       9   00:7938  (00:4000)           PageSize:	    equ	0x4000	        ; 16kB
      10   00:7938  (00:6000)           _bank1	equ	6000h
      11   00:7938  (00:7000)           _bank2	equ	7000h
      12   00:7938  32 00 70 32 FF 77   		DB 32h,0,70h,32h,0FFh,77h		; Para evitar seleccionar el tipo de ROM ASCII16 en OpenMSX
      13   00:793E  (00)                		page 0			
      14   00:4000                              org 4000h		
      15   00:4000                              dw  4241h,START,0,0,0,0,0,0
      15   00:4000  41 42 6A 4C 00 00 00 00 00 00 00 00 00 00 00 00 
      16   00:4010                      
      17   00:4010                      ;Llamadas a rutinas bios
      18   00:4010                          include "include\System_BIOSCalls.asm"
       1.  00:4010  (00:009F)           CHGET                   equ #009F    ; Se queda esperando que se pulse una tecla
       2.  00:4010  (00:00A2)           CHPUT                   equ #00A2    ; escribe el caracter ascii almacenado en a                         
       3.  00:4010  (00:005F)           CHGMOD                  equ #005F   ; Cambia el modo de screen pero previamente necesita que se le asigne el modo en el registro a
       4.  00:4010  (00:005C)           LDIRVM                  equ #005C   ;Tansfiere bloques de la RAM a la VRAM, es la más importante, necesita previamente asignar valor al registro bc con la longitud, dc con la dirección de inicio de la VRAM y hl con la dirección de inicio de la RAM:
       5.  00:4010  (00:013E)           RDVDP                   equ #013E    ; Lee el registro de estado del VDP
       6.  00:4010  (00:0047)           WRTVDP                  equ #0047   ; Escribe en los registros del VDP 
       7.  00:4010  (00:F3DB)           CLIKSW                  equ $F3DB ; Keyboard click sound
       8.  00:4010  (00:0141)           SNSMAT					equ #0141
       9.  00:4010  (00:FC9E)           JIFFY 					equ #FC9E
      10.  00:4010                      ;DISSCR                  equ #0041   ; Disable screen
      11.  00:4010                      ;ENASCR                  equ #0044   ; Enable screen
      12.  00:4010  (00:0072)           INIGRP                  equ #0072   ; Enable Screen 2
      13.  00:4010  (00:0138)           RSLREG                  equ #0138   ; Leemos el contenido del registro de seleccion de slots
      14.  00:4010  (00:0024)           ENASLT                  equ #0024   ; Switches indicated slot at indicated page on perpetually Input    : A - Slot ID, see RDSLT            H - Bit 6 and 7 must contain the page number (00-11)
      19   00:4010                      
      20   00:4010                      ;Constantes
      21   00:4010                          include "include\BTH_const.asm"
       1.  00:4010                      ; VDP Const
       2.  00:4010  (00:5C28)           FIRST_LINE_DLG_BOX   equ 5C28H
       3.  00:4010  (00:6028)           SEC_LINE_DLG_BOX   equ 6028H
       4.  00:4010  (00:6428)           THIRD_LINE_DLG_BOX   equ 6428H
       5.  00:4010                      
       6.  00:4010  (00:0001)           ROMMODE                 equ 1 ; 0 Dos Mode 1 Rom Mode
       7.  00:4010  (00:0007)           KB_RIGHT 				equ 7
       8.  00:4010  (00:0006)           KB_DOWN 				equ 6
       9.  00:4010  (00:0005)           KB_UP 					equ	5        
      10.  00:4010  (00:0004)           KB_LEFT 				equ	4
      11.  00:4010  (00:0003)           KB_DEL 					equ	3
      12.  00:4010  (00:0000)           KB_SPACE				equ	0
      13.  00:4010                      
      14.  00:4010  (00:0001)           MOV_SPEED				equ 1
      15.  00:4010  (00:0001)           MOV_SPEED_GHOST			equ 1
      16.  00:4010  (00:0003)           MOV_SPEED_SHOOT         equ 3
      17.  00:4010  (00:0030)           MAX_DISTANCE_SHOOT      equ 48
      18.  00:4010  (00:0005)           MAX_CHAR_STEPS          equ 5       ; #steps pattern change MAIN CHAR
      19.  00:4010  (00:0006)           MAX_CHAR_STEPS_STG2          equ 6
      20.  00:4010  (00:FFE8)           REG9SAV                 equ #FFE8
      21.  00:4010  (00:0098)           PORT_0                  equ 0x98
      22.  00:4010  (00:0099)           PORT_1                  equ 0x99
      23.  00:4010  (00:009A)           PORT_2                  equ 0x9a
      24.  00:4010  (00:009B)           PORT_3                  equ 0x9b
      25.  00:4010                      
      26.  00:4010  (00:F3E0)           RG15AV equ #F3E0 ; alamcena el valor del registro 1 de escritura del VDP, hay unas rutinas de la bios que guardan estas direcciones valores globals del sistema
      27.  00:4010  (00:F3E9)           FORCLR equ $F3E9 ; Foreground colour
      28.  00:4010                      
      29.  00:4010  (00:00C8)           MIKE_TOMB_STG1_X            equ 200
      30.  00:4010  (00:0029)           JOHN_TOMB_STG1_X            equ 41
      31.  00:4010  (00:0049)           GUS_TOMB_STG1_X             equ 73
      32.  00:4010  (00:0078)           GUS_TOMB_STG1_Y             equ 120
      33.  00:4010  (00:0069)           SKULL_TOMB_STG1_X             equ 105
      34.  00:4010  (00:005A)           SKULL_TOMB_STG1_Y1             equ 90
      35.  00:4010  (00:0064)           SKULL_TOMB_STG1_Y2             equ 100
      36.  00:4010                      
      37.  00:4010  (00:000C)           SPR_SHOOT_P1                equ 12  ; Offset de IX (SPRATT)
      38.  00:4010  (00:0018)           SPR_SHOOT_P1_PTRN           equ 18h
      39.  00:4010  (00:0010)           SPR_GHOST_STG1              equ 16  ; Offset de IX (SPRATT)
      40.  00:4010  (00:001C)           SPR_GHOST_STG1_PTRN_L1      equ 1Ch  ; Offset del Sprite Pattern Table
      41.  00:4010  (00:0024)           SPR_GHOST_STG1_PTRN_L2      equ 24h  ; Offset del Sprite Pattern Table
      42.  00:4010  (00:002C)           SPR_GHOST_STG1_PTRN_R1      equ 2Ch  ; Offset del Sprite Pattern Table
      43.  00:4010  (00:0034)           SPR_GHOST_STG1_PTRN_R2      equ 34h  ; Offset del Sprite Pattern Table
      44.  00:4010                      
      45.  00:4010  (00:0018)           SPR_GHOST_STG2              equ 24  ; Offset de IX (SPRATT)
      46.  00:4010  (00:003C)           SPR_GHOST_STG2_PTRN_L1      equ 3Ch  ; Offset del Sprite Pattern Table
      47.  00:4010  (00:0044)           SPR_GHOST_STG2_PTRN_L2      equ 44h  ; Offset del Sprite Pattern Table
      48.  00:4010  (00:004C)           SPR_GHOST_STG2_PTRN_R1      equ 4Ch  ; Offset del Sprite Pattern Table
      49.  00:4010  (00:0054)           SPR_GHOST_STG2_PTRN_R2      equ 54h  ; Offset del Sprite Pattern Table
      50.  00:4010                      
      22   00:4010                          include "include\BTH_strings.asm"
       1.  00:4010  16 40 1C 40 2F 40   mike_tomb_strings: dw string01M, string02M, string03M
       2.  00:4016                      ; Caben 23 caracteres en cada línea
       3.  00:4016  4D 49 4B 45 3A 00   string01M: db 'MIKE:',0
       4.  00:401C                      string02M: db 'GUS FUE EL PRIMERO',0
       4.  00:401C  47 55 53 20 46 55 45 20 45 4C 20 50 52 49 4D 45 
       4.  00:402C  52 4F 00 
       5.  00:402F                      string03M: db 'EN MORIR',0
       5.  00:402F  45 4E 20 4D 4F 52 49 52 00 
       6.  00:4038                      
       7.  00:4038  3E 40 44 40 56 40   john_tomb_strings: dw string01J, string02J, string03J
       8.  00:403E                      ; Caben 23 caracteres en cada línea
       9.  00:403E  4A 4F 48 4E 3A 00   string01J: db 'JOHN:',0
      10.  00:4044                      string02J: db 'YO FUI EL SEGUNDO',0
      10.  00:4044  59 4F 20 46 55 49 20 45 4C 20 53 45 47 55 4E 44 
      10.  00:4054  4F 00 
      11.  00:4056                      string03J: db 'EN MORIR',0
      11.  00:4056  45 4E 20 4D 4F 52 49 52 00 
      12.  00:405F                      
      13.  00:405F  65 40 6A 40 7E 40   gus_tomb_strings: dw string01G, string02G, string03G
      14.  00:4065                      ; Caben 23 caracteres en cada línea
      15.  00:4065  47 55 53 3A 00      string01G: db 'GUS:',0
      16.  00:406A                      string02G: db 'MIKE FUE EL TERCERO',0
      16.  00:406A  4D 49 4B 45 20 46 55 45 20 45 4C 20 54 45 52 43 
      16.  00:407A  45 52 4F 00 
      17.  00:407E                      string03G: db 'EN MORIR',0
      17.  00:407E  45 4E 20 4D 4F 52 49 52 00 
      18.  00:4087                      
      19.  00:4087  8D 40 95 40 A7 40   stg1_skull_strings: dw string01Sk, string02Sk, string03Sk
      20.  00:408D                      ; Caben 23 caracteres en cada línea
      21.  00:408D                      string01Sk: db 'MURRAY:',0
      21.  00:408D  4D 55 52 52 41 59 3A 00 
      22.  00:4095                      string02Sk: db 'LA SANGRE TE DARA',0
      22.  00:4095  4C 41 20 53 41 4E 47 52 45 20 54 45 20 44 41 52 
      22.  00:40A5  41 00 
      23.  00:40A7                      string03Sk: db 'EL ORDEN',0
      23.  00:40A7  45 4C 20 4F 52 44 45 4E 00 
      24.  00:40B0                      
      23   00:40B0                      
      24   00:40B0                      ; Funciones auxiliares
      25   00:40B0                      	include "include\BTH_func.asm"
       1.  00:40B0                      ; Dadas las coordenadas X,Y en pixels de dos sprites, devuelve 1 si hay colision
       2.  00:40B0                      ;Entrada:
       3.  00:40B0                      ;   b - Y SPR1
       4.  00:40B0                      ;   C - X SPR1
       5.  00:40B0                      
       6.  00:40B0                      ;   d - Y SPR2
       7.  00:40B0                      ;   e - X SPR2
       8.  00:40B0                      ;Salida:
       9.  00:40B0                      ;   a - bloque
      10.  00:40B0                      ;Modifica:
      11.  00:40B0                      ;   a, hl, de
      12.  00:40B0                      check_spr_collision:        
      13.  00:40B0  78                          LD A,B          ; a = Y SPR1
      14.  00:40B1  BA                          CP D
      15.  00:40B2  C2 BD 40                    JP NZ,.no_collision
      16.  00:40B5                      
      17.  00:40B5  79                          LD A,C          ; a = X SPR1
      18.  00:40B6  BB                          CP E
      19.  00:40B7  C2 BD 40                    JP NZ,.no_collision
      20.  00:40BA                      
      21.  00:40BA  3E 01                       LD A,1
      22.  00:40BC  C9                          RET
      23.  00:40BD                      .no_collision
      24.  00:40BD  3E 00                   LD A,0
      25.  00:40BF  C9                      RET
      26.  00:40C0                      
      27.  00:40C0                      ; Dadas las coordenadas X,Y en pixels, devuelve el bloque de 8x8 al que corresponde esas coordenadas
      28.  00:40C0                      ; La tabla de colisiones es la tabla de nombres con 32x24 = 756 bytes
      29.  00:40C0                      ;Entrada:
      30.  00:40C0                      ;   d - X
      31.  00:40C0                      ;   e - y
      32.  00:40C0                      ;Salida:
      33.  00:40C0                      ;   a - bloque
      34.  00:40C0                      ;Modifica:
      35.  00:40C0                      ;   a, hl, de
      36.  00:40C0                      get_bloque_en_X_Y:
      37.  00:40C0                              ;(y/8)*32+(x/8)
      38.  00:40C0  7B                          ld a,e      ;a=y
      39.  00:40C1  CB 3F CB 3F CB 3F   [3]     srl a       ;a=y/8
      40.  00:40C7  26 00                       ld h,0
      41.  00:40C9  6F                          ld l,a      ;hl=y/8
      42.  00:40CA  29 29 29 29 29      [5]     add hl,hl   ;x32    ;a=(y/8)*32
      43.  00:40CF                      
      44.  00:40CF  7A                          ld a,d      ;a=x
      45.  00:40D0  CB 3F CB 3F CB 3F   [3]     srl a       ;a=x/8
      46.  00:40D6  16 00                       ld d,0
      47.  00:40D8  5F                          ld e,a      ;de=x/8
      48.  00:40D9  19                          add hl,de   ;hl=(y/8)*32+(x/8)
      49.  00:40DA                      
      50.  00:40DA  ED 5B B2 C0                 ld de,(MAPA)
      51.  00:40DE  19                          add hl,de   ;hl=mapa + hl=(y/8)*32+(x/8)
      52.  00:40DF                      
      53.  00:40DF  7E                          ld a,[hl]
      54.  00:40E0  C9                          ret
      55.  00:40E1                      
      56.  00:40E1                      ; SCREEN 8
      57.  00:40E1                      SetVdp_Write:
      58.  00:40E1                      
      59.  00:40E1                      	; transform address from 
      60.  00:40E1                      	;
      61.  00:40E1                      	; |           Register A            |           Register H            |           Register L            |
      62.  00:40E1                      	; | --- --- --- --- --- --- --- A16 | A15 A14 A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      63.  00:40E1                      	;
      64.  00:40E1                      	; to
      65.  00:40E1                      	;
      66.  00:40E1                      	; |           Register A            |           Register H            |           Register L            |
      67.  00:40E1                      	; | --- --- --- --- --- A16 A15 A14 | --- --- A13 A12 A11 A10  A9  A8 |  A7  A6  A5  A4  A3  A2  A1  A0 |
      68.  00:40E1  CB 04                   rlc     h
      69.  00:40E3  17                      rla
      70.  00:40E4  CB 04                   rlc     h
      71.  00:40E6  17                      rla
      72.  00:40E7  CB 3C                   srl     h
      73.  00:40E9  CB 3C                   srl     h
      74.  00:40EB                      
      75.  00:40EB  F3                      di
      76.  00:40EC                      	    ; write bits a14-16 of address to R#14
      77.  00:40EC  D3 99               	    out     (PORT_1), a
      78.  00:40EE  3E 8E               	    ld      a, 14 + 128
      79.  00:40F0  D3 99               	    out     (PORT_1), a
      80.  00:40F2                      
      81.  00:40F2                      	    ; write the other address bits to VDP PORT_1
      82.  00:40F2  7D                  	    ld      a, l
      83.  00:40F3  00                  	    nop
      84.  00:40F4  D3 99               	    out     (PORT_1), a
      85.  00:40F6  7C                  	    ld      a, h
      86.  00:40F7  F6 40               	    or      64
      87.  00:40F9  FB                      ei
      88.  00:40FA  D3 99                   out     (PORT_1),a
      89.  00:40FC  C9                      ret
      90.  00:40FD                      
      91.  00:40FD                      Set212Lines:
      92.  00:40FD                              ; set LN (bit 7) of R#9 to 1
      93.  00:40FD  3A E8 FF                    ld      a, (REG9SAV)
      94.  00:4100  F6 80                       or      10000000b
      95.  00:4102  47                          ld      b, a
      96.  00:4103  0E 09                       ld      c, 9            ; register #
      97.  00:4105  CD 47 00                    call    WRTVDP
      98.  00:4108  C9                          ret
      99.  00:4109                      
     100.  00:4109                      ClearVram_MSX2:
     101.  00:4109  AF                          xor     a           ; set vram write base address
     102.  00:410A  21 00 00                    ld      hl, 0     	; to 1st byte of page 0
     103.  00:410D  CD E1 40                    call    SetVdp_Write
     104.  00:4110  AF                          xor		a
     105.  00:4111                      
     106.  00:4111                          ; TODO: 
     107.  00:4111                          ;   use VDP command (currently is taking almost 1 second)
     108.  00:4111                          ;   disable screen/sprites (should I ??)
     109.  00:4111                      
     110.  00:4111                          ; clear all 128kb of VRAM
     111.  00:4111  16 02               	ld		d, 2		; 2 repetitions
     112.  00:4113                      .loop_2:
     113.  00:4113  0E 00               	ld		c, 0		; 256 repetitions
     114.  00:4115                      .loop_1:
     115.  00:4115  06 00               	ld		b, 0		; 256 repetitions
     116.  00:4117                      .loop:
     117.  00:4117  D3 98               	out		(PORT_0), a
     118.  00:4119  10 FC               	djnz	.loop
     119.  00:411B  0D                  	dec		c
     120.  00:411C  C2 15 41            	jp		nz, .loop_1
     121.  00:411F  15                  	dec		d
     122.  00:4120  C2 13 41            	jp		nz, .loop_2
     123.  00:4123                      
     124.  00:4123  C9                  	ret
     125.  00:4124                      
     126.  00:4124                      ; MEGAROM
     127.  00:4124                      
     128.  00:4124                      opening_screen		
     129.  00:4124  0E 00               		ld		c,0
     130.  00:4126  11 00 00            		ld		de,0
     131.  00:4129  CD 69 41            		call	_vdpsetvramwr
     132.  00:412C  1E 04               		ld	e,4
     133.  00:412E  3E 09               		ld	a, :GRAPHIC
     134.  00:4130  57                  		ld	d,a
     135.  00:4131  32 00 70            2:		ld	(_bank2),a
     136.  00:4134  21 00 80            		ld	hl,GRAPHIC
     137.  00:4137  01 98 00            		ld	bc,0x98
     138.  00:413A  3E 40               		ld	a,32*2
     139.  00:413C  ED B3               1:		otir
     140.  00:413E  3D                  		dec	a
     141.  00:413F  20 FB               		jr	nz,1b
     142.  00:4141  14                  		inc	d
     143.  00:4142  7A                  		ld	a,d
     144.  00:4143  1D                  		dec	e
     145.  00:4144  20 EB               		jr	nz,2b
     146.  00:4146  C9                  		ret 
     147.  00:4147                      
     148.  00:4147                      load_screen
     149.  00:4147  0E 00               		ld		c,0
     150.  00:4149  11 00 00            		ld		de,0
     151.  00:414C  CD 69 41            		call	_vdpsetvramwr
     152.  00:414F  1E 02               		ld	e,2					; #pages
     153.  00:4151  78                  		ld	a, b			; 1st page bitmap
     154.  00:4152  57                  		ld	d,a
     155.  00:4153  32 00 70            2:		ld	(_bank2),a
     156.  00:4156  2A B4 C0            		ld	hl,(BITMAP)		; Bitmap address
     157.  00:4159  01 98 00            		ld	bc,0x98
     158.  00:415C  3E 40               		ld	a,64
     159.  00:415E  ED B3               1:		otir
     160.  00:4160  3D                  		dec	a
     161.  00:4161  20 FB               		jr	nz,1b
     162.  00:4163  14                  		inc	d
     163.  00:4164  7A                  		ld	a,d
     164.  00:4165  1D                  		dec	e
     165.  00:4166  20 EB               		jr	nz,2b
     166.  00:4168  C9                  		ret 
     167.  00:4169                      
     168.  00:4169                      ;Set VDP for writing at address CDE (17-bit) 
     169.  00:4169                      
     170.  00:4169                      _vdpsetvramwr:
     171.  00:4169  79                  	ld a,c
     172.  00:416A  CB 02               	rlc d
     173.  00:416C  17                  	rla
     174.  00:416D  CB 02               	rlc d
     175.  00:416F  17                  	rla
     176.  00:4170  CB 3A               	srl d ; primo shift, il secondo dopo la out
     177.  00:4172                      
     178.  00:4172  D3 99               	out (0x99),a ;set bits 14-16
     179.  00:4174  3E 8E               	ld a,14+128
     180.  00:4176  D3 99               	out (0x99),a
     181.  00:4178  CB 3A               	srl d ; secondo shift.     
     182.  00:417A                      _vdpsetvramwr14
     183.  00:417A  7B                  	ld a,e ;set bits 0-7
     184.  00:417B  D3 99               	out (0x99),a
     185.  00:417D  7A                  	ld a,d ;set bits 8-13
     186.  00:417E  F6 40               	or 0x40 ; + write access
     187.  00:4180  D3 99               	out (0x99),a
     188.  00:4182  C9                  	ret
     189.  00:4183                      
     190.  00:4183                      
     191.  00:4183                      
     192.  00:4183                      		; --- RUTINAS PARA COLOCAR LAS PAGINAS DEL CARTUCHO ---
     193.  00:4183                      		; -----------------------------------------------------
     194.  00:4183                      		; --- SIEMPRE DEBEN IR EN LA PAGINA 1 DEL CARTUCHO! ---
     195.  00:4183                      		; -----------------------------------------------------
     196.  00:4183                      
     197.  00:4183                      		; --- RUTINAS PRINCIPALES DEL MODULO ---
     198.  00:4183                      		; GETSLOT:	OBTIENE EL VALOR DEL SLOT QUE LE INDIQUEMOS
     199.  00:4183                      		; SETPAGES32K:	BIOS-ROM-YY-ZZ	 -> BIOS-ROM-ROM-ZZ (SITUA PAGINA 2)
     200.  00:4183                      
     201.  00:4183                      		; --- VARIABLES EN RAM NECESARIAS ---
     202.  00:4183                      		; NINGUNA
     203.  00:4183                      
     204.  00:4183                      GETSLOT:	; --- Rutina que construye el valor del SLOT para llamar a ENASLT ---
     205.  00:4183                      		; --- Entrada: a = SLOT                                           ---
     206.  00:4183                      		; --- Salida: a = valor para ENASLT                               ---
     207.  00:4183                      		; --- AUTOR: Konamiman                                            ---
     208.  00:4183  E6 03               		and	$03				; Proteccion, nos aseguramos de que el valor esta en 0-3
     209.  00:4185  4F                  		ld	c,a				; c = slot de la pagina
     210.  00:4186  06 00               		ld	b,0				; bc = slot de la pagina
     211.  00:4188  21 C1 FC            		ld	hl,$FCC1			; Tabla de slots expandidos
     212.  00:418B  09                  		add	hl,bc				; hl -> variable que indica si este slot esta expandido
     213.  00:418C  7E                  		ld	a,(hl)				; Tomamos el valor
     214.  00:418D  E6 80               		and	$80				; Si el bit mas alto es cero...
     215.  00:418F  28 09               		jr	z,EXIT			; ...nos vamos a @@EXIT
     216.  00:4191                      		; --- El slot esta expandido ---
     217.  00:4191  B1                  		or	c				; Slot basico en el lugar adecuado
     218.  00:4192  4F                  		ld	c,a				; Guardamos el valor en c
     219.  00:4193  23                  		inc	hl				; Incrementamos hl una...
     220.  00:4194  23                  		inc	hl				; ...dos...
     221.  00:4195  23                  		inc	hl				; ...tres...
     222.  00:4196  23                  		inc	hl				; ...cuatro veces
     223.  00:4197  7E                  		ld	a,(hl)				; a = valor del registro de subslot del slot donde estamos
     224.  00:4198  E6 0C               		and	$0C				; Nos quedamos con el valor donde esta nuestro cartucho
     225.  00:419A  B1                  EXIT:		or	c				; Slot extendido/basico en su lugar
     226.  00:419B  C9                  		ret					; Volvemos
     227.  00:419C                      
     228.  00:419C                      SETPAGES32K:	; --- Posiciona las paginas de un megarom o un 32K ---
     229.  00:419C  3E C9               		ld	a,$C9				; Codigo de RET
     230.  00:419E  32 A1 41            		ld	(NOPRET),a			; Modificamos la siguiente instruccion si estamos en RAM
     231.  00:41A1  00                  NOPRET:	nop					; No hacemos nada si no estamos en RAM
     232.  00:41A2                      		; --- Si llegamos aqui no estamos en RAM, hay que posicionar la pagina ---
     233.  00:41A2  CD 38 01            		call	RSLREG  			; Leemos el contenido del registro de seleccion de slots
     234.  00:41A5  0F                  		rrca					; Rotamos a la derecha...
     235.  00:41A6  0F                  		rrca					; ...dos veces
     236.  00:41A7  CD 83 41            		call	GETSLOT				; Obtenemos el slot de la pagina 1 ($4000-$BFFF)
     237.  00:41AA  26 80               		ld	h,$80				; Seleccionamos pagina 2 ($8000-$BFFF)
     238.  00:41AC  C3 24 00            		jp	ENASLT ;ENASLT
     239.  00:41AF                      
     240.  00:41AF                      SET_SCREEN5_MODE:
     241.  00:41AF                           ;Cambiamos el modo de pantalla
     242.  00:41AF                          ; BASIC: COLOR 15,1,1
     243.  00:41AF                          ; Establecer los colores
     244.  00:41AF  21 E9 F3            	ld hl,FORCLR ; Variable del Sistema
     245.  00:41B2  36 0F               	ld [hl],15 ; Color del primer plano 15=blanco
     246.  00:41B4  23                  	inc hl ; FORCLR+1
     247.  00:41B5  36 0F               	ld [hl],15 ; Color de fondo 1=negro
     248.  00:41B7  23                  	inc hl ; FORCLR+2
     249.  00:41B8  36 0F               	ld [hl],15 ; Color del borde 1=negro
     250.  00:41BA                      
     251.  00:41BA  3E 05                   ld  a,5     ; La rutina CHGMOD nos obliga a poner en el registro A el modo de pantalla que queremos
     252.  00:41BC  CD 5F 00                call CHGMOD ; Mira arriba, pone la explicación
     253.  00:41BF                      ;
     254.  00:41BF  3A E0 F3                ld a,(RG15AV) ; esta dirección de memoria almacena el valor del registro de lectura del VDP, mira arriba
     255.  00:41C2                          ;En or 0+0=0, 0+1=1, 1+1=1
     256.  00:41C2                          ;En and 0+0=0, 0+1=0, 1+1=1
     257.  00:41C2                          ;Con eso queremos cambiar los bits 7 y 8 del registro de escritura 1 del z80, queremos poner el 7 a 1 y también el 8 a 1
     258.  00:41C2                          ;el bit 7 del registro 1 pone los sprites en modo 16x16 (los que nostros queremos dibujar)
     259.  00:41C2                          ;el bit 8 queremos desactivarlo para no utilizar los sprites agrandados
     260.  00:41C2  F6 02                   or 00000010b ; con or poniendo un 0 siempre respetamos los bits que hay y poniendo 1 1 obligamos a que sea 1
     261.  00:41C4                          ;and 11111110b ; con and obligamos a que el ultimo bit valga 0
     262.  00:41C4  E6 FE                   and 11111110b ; con and obligamos a que el ultimo bit valga 0
     263.  00:41C6                      
     264.  00:41C6  47                      ld b,a ;carga en b el valor de a
     265.  00:41C7  0E 01                   ld c,1 ; La rutina WRTVDP necesta que le carguemos previamente el entero en C del z80 del registro que queroms modificar
     266.  00:41C9  CD 47 00                call WRTVDP ;Escribe en los registros del VDP 
     267.  00:41CC  AF                      xor a ; ld a,0
     268.  00:41CD  32 DB F3            	ld [CLIKSW],a ; Variable BIOS desactivar sonido teclas
     269.  00:41D0  C9                      ret
     270.  00:41D1                      
     271.  00:41D1                      DUMP_SPR_ALL:
     272.  00:41D1                      
     273.  00:41D1                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     274.  00:41D1                      
     275.  00:41D1  21 CB 62                ld hl, SPRITE_PATTERN ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     276.  00:41D4  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     277.  00:41D7  01 E0 02                ld bc, 8*4*23; 8 byte de cada tile * 4 que son los sprites de 16x16 y * #sprites
     278.  00:41DA  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     279.  00:41DD                      
     280.  00:41DD                      ;-----------------------------Definición de los atributos en #7600 y volcado a la VRAM------------------------------------
     281.  00:41DD                      
     282.  00:41DD  21 29 C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     283.  00:41E0  11 00 76                ld de, #7600; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     284.  00:41E3  01 80 00                ld bc,128; 4 x #Sprites
     285.  00:41E6  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     286.  00:41E9                      
     287.  00:41E9                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     288.  00:41E9                      
     289.  00:41E9  21 AB 65                ld hl, SPRITE_COLOR_TABLE ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     290.  00:41EC  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     291.  00:41EF  01 70 01                ld bc,16*23; 16 x #Sprites
     292.  00:41F2  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     293.  00:41F5  C9                      ret
     294.  00:41F6                      	
     295.  00:41F6                      load_tiles_vdp
     296.  00:41F6                          
     297.  00:41F6                      	;ld hl, TILES1
     298.  00:41F6  11 00 80                ld de, 0x8000; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     299.  00:41F9  01 00 08                ld bc,128*16; 16 lineas
     300.  00:41FC  CD 5C 00                call  LDIRVM ; Mira arriba, pone la explicación
     301.  00:41FF  C9                  	ret 
     302.  00:4200                      
     303.  00:4200                      DUMP_SPR_ATTS:
     304.  00:4200                      
     305.  00:4200                      ;-----------------------------Definición de los atributos en #1E00 y volcado a la VRAM------------------------------------
     306.  00:4200                      
     307.  00:4200  21 29 C0                ld hl, SPRITE_ATTRS ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     308.  00:4203  11 00 76                ld de, #7600	; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     309.  00:4206  01 20 00                ld bc,32		; 4 x #Sprites mostrados
     310.  00:4209  CD 5C 00                call  LDIRVM 	; Mira arriba, pone la explicación
     311.  00:420C                      
     312.  00:420C                      ;	ld a, (SPRITE_COLOR_REPLACE2)
     313.  00:420C                      ;	JP Z,.DUMP_SPR_ATTS_END
     314.  00:420C  2A B0 C0            	ld hl, (SPRITE_COLOR_REPLACE2) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     315.  00:420F  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     316.  00:4212  C5                      PUSH BC
     317.  00:4213  01 30 00            	ld bc,16*3; 16 x #Sprites
     318.  00:4216  CD 5C 00                call  LDIRVM 
     319.  00:4219  C1                  	POP BC
     320.  00:421A                      
     321.  00:421A                      .DUMP_SPR_ATTS_END:
     322.  00:421A  C9                      ret
     323.  00:421B                      
     324.  00:421B                      DUMP_SPR_P1:    
     325.  00:421B                      ;-----------------------------Definición del sprite en #7800  y volcado a la VRAM-------------------------------------------
     326.  00:421B                      
     327.  00:421B  2A AC C0                ld hl, (SPRITE_PTR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 03800 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     328.  00:421E  11 00 78                ld de, #7800; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     329.  00:4221  C5                      PUSH BC
     330.  00:4222  01 C0 00            	ld bc, 192; 32 bytes por sprite * 3 planos * 2 frames
     331.  00:4225  CD 5C 00                call  LDIRVM 
     332.  00:4228  C1                  	POP BC
     333.  00:4229                      
     334.  00:4229                      ;-----------------------------Definición de los colores en #7400 y volcado a la VRAM------------------------------------
     335.  00:4229                      
     336.  00:4229  2A AE C0                ld hl, (SPRITE_COLOR_REPLACE) ; la rutina LDIRVM necesita haber cargado previamente la dirección de inicio de la RAM, para saber porqué he puesto 0000 fíjate este dibujo https://sites.google.com/site/multivac7/files-images/TMS9918_VRAMmap_G2_300dpi.png ,así es como está formado el VDP en screen 2
     337.  00:422C  11 00 74                ld de, #7400; la rutina necesita haber cargado previamente con de la dirección de inicio de la VRAM          
     338.  00:422F  C5                      PUSH BC
     339.  00:4230  01 30 00            	ld bc,16*3; 16 x #Sprites
     340.  00:4233  CD 5C 00                call  LDIRVM 
     341.  00:4236  C1                  	POP BC
     342.  00:4237                      	
     343.  00:4237                      
     344.  00:4237                      ; Replace 4 sprites(P1) in Sprite Pattern Table
     345.  00:4237                      ;    xor a
     346.  00:4237                      ;	di			; set VRAM address to 1800h
     347.  00:4237                      ;	out (99h),a		; lower byte 00
     348.  00:4237                      ;	ld a,78h + 040h		; upper byte 7800h with flag to set the bus in write mode (3800 VRAM: Sprite Pattern Table)
     349.  00:4237                      ;	ei
     350.  00:4237                      ;	out (99h),a		; note that this is protected by the ei instruction
     351.  00:4237                      ;   push BC
     352.  00:4237                      ;	ld bc,8098h     ; 80h = 128 bytes y port 98h 
     353.  00:4237                      ;	ld hl,(SPRITE_PTR_REPLACE)
     354.  00:4237                      
     355.  00:4237                      ;.loop1:
     356.  00:4237                      ;	outi			; send the data (HL) to port 98h 
     357.  00:4237                      ;	jp nz,.loop1		; the inner loop is exactly 29 cycles. 
     358.  00:4237                      ;   POP BC
     359.  00:4237                      
     360.  00:4237                          ; Replace 2 entries in sprite color table
     361.  00:4237                      ;    xor a
     362.  00:4237                      ;	di			; set VRAM address to 1800h
     363.  00:4237                      ;	out (99h),a		; lower byte 00
     364.  00:4237                      ;	ld a,74h + 040h		; upper byte 7400h with flag to set the bus in write mode (1C00 VRAM: Sprite Color Table)
     365.  00:4237                      ;	ei
     366.  00:4237                      ;	out (99h),a		; note that this is protected by the ei instruction
     367.  00:4237                       ;   push BC
     368.  00:4237                      ;	ld bc,2098h     ; 20h = 32 bytes y port 98h 
     369.  00:4237                      ;	ld hl,(SPRITE_COLOR_REPLACE)
     370.  00:4237                      	
     371.  00:4237                      ;.loop2:
     372.  00:4237                      ;	outi			; send the data (HL) to port 98h 
     373.  00:4237                      ;	jp nz,.loop2		; the inner loop is exactly 29 cycles. 
     374.  00:4237                       ;   POP BC
     375.  00:4237                      
     376.  00:4237  C9                      ret
     377.  00:4238                      
     378.  00:4238                      SetPalette:
     379.  00:4238  AF                  	xor a
     380.  00:4239  F3                  	di
     381.  00:423A  D3 99               	out ($99),a
     382.  00:423C  3E 90               	ld a,16+128
     383.  00:423E  D3 99               	out ($99),a
     384.  00:4240  01 9A 20            	ld bc,$209A
     385.  00:4243  ED B3               	otir
     386.  00:4245  FB                  	ei
     387.  00:4246  C9                  	ret
      26   00:4247                          include "include\BTH_animate.asm"
       1.  00:4247                      ; Movimiento P1
       2.  00:4247                      move_up:
       3.  00:4247  A9                      XOR C               ; Reseteamos la entrada del teclado
       4.  00:4248                          ; Actualizamos la última tecla de dirección pulsada
       5.  00:4248  AF                      XOR A
       6.  00:4249  32 24 C0                LD (CHAR_NEW_DIR_MAIN),A
       7.  00:424C  CD 7A 43                CALL CHECK_DIRECTION_MAIN
       8.  00:424F                      
       9.  00:424F  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      10.  00:4252  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VDP
      11.  00:4254  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      12.  00:4255  DD 7E 01                ld a,(ix+1)
      13.  00:4258  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      14.  00:4259  CD C0 40                call get_bloque_en_X_Y
      15.  00:425C  FE 01                   cp 1
      16.  00:425E  CA 73 44                jp z,NO_MOVEMENT
      17.  00:4261                      
      18.  00:4261  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      19.  00:4264  D6 01                   sub 1 ; decrementamos en 1 el valor, aunque realmente será dos por el desplazamiento de la Y que hace el VGP
      20.  00:4266  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      21.  00:4267  DD 7E 01                ld a,(ix+1)
      22.  00:426A  C6 0A                   add 10 ; miramos la segunda tile 8+2
      23.  00:426C  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      24.  00:426D  CD C0 40                call get_bloque_en_X_Y
      25.  00:4270  FE 01                   cp 1
      26.  00:4272  CA 73 44                jp z,NO_MOVEMENT
      27.  00:4275                            
      28.  00:4275  3E FF               	LD A, -MOV_SPEED
      29.  00:4277  32 1B C0            	LD (CHAR_SPEED_Y), A
      30.  00:427A  CD 07 44                call UPDATE_MOVEMENT   
      31.  00:427D  CD 2F 44                call ANIMATE_P1
      32.  00:4280                          ;JP no_arrows
      33.  00:4280  C9                      ret
      34.  00:4281                      
      35.  00:4281                      move_down:
      36.  00:4281  A9                      XOR C               ; Reseteamos la entrada del teclado
      37.  00:4282                          ; Actualizamos la última tecla de dirección pulsada
      38.  00:4282  3E 01                   LD A,$01
      39.  00:4284  32 24 C0                LD (CHAR_NEW_DIR_MAIN),A
      40.  00:4287  CD 7A 43                CALL CHECK_DIRECTION_MAIN
      41.  00:428A                      
      42.  00:428A  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      43.  00:428D  C6 11                   add 17 ; incrementamos en 15+2 el valor
      44.  00:428F  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      45.  00:4290  DD 7E 01                ld a,(ix+1)
      46.  00:4293  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      47.  00:4294  CD C0 40                call get_bloque_en_X_Y
      48.  00:4297  FE 01                   cp 1
      49.  00:4299  CA 73 44                jp z,NO_MOVEMENT
      50.  00:429C                      
      51.  00:429C  DD 7E 00                ld a,(ix); obtenemos el valor actual de la posicion y
      52.  00:429F  C6 11                   add 17 ; incrementamos en 15 el valor
      53.  00:42A1  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      54.  00:42A2  DD 7E 01                ld a,(ix+1)
      55.  00:42A5  C6 0A                   add 10 ; miramos la segunda tile 8+2
      56.  00:42A7  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision    
      57.  00:42A8  CD C0 40                call get_bloque_en_X_Y
      58.  00:42AB  FE 01                   cp 1
      59.  00:42AD  CA 73 44                jp z,NO_MOVEMENT
      60.  00:42B0                          
      61.  00:42B0  3E 01                   LD A, MOV_SPEED
      62.  00:42B2  32 1B C0            	LD (CHAR_SPEED_Y), A
      63.  00:42B5  CD 07 44                call UPDATE_MOVEMENT    
      64.  00:42B8  CD 2F 44                call ANIMATE_P1
      65.  00:42BB                          ;JP no_arrows
      66.  00:42BB  C9                      ret
      67.  00:42BC                      
      68.  00:42BC                      move_right:
      69.  00:42BC  A9                      XOR C               ; Reseteamos la entrada del teclado
      70.  00:42BD                          ; Actualizamos la última tecla de dirección pulsada
      71.  00:42BD  CB 69                   BIT KB_UP, C
      72.  00:42BF  28 0C                   JR z, .KB_UPDOWN_PRESSED
      73.  00:42C1  CB 71                   BIT KB_DOWN, C
      74.  00:42C3  28 08                   JR z, .KB_UPDOWN_PRESSED
      75.  00:42C5  3E 03                   LD A,$03
      76.  00:42C7  32 24 C0                LD (CHAR_NEW_DIR_MAIN),A
      77.  00:42CA  CD 7A 43                CALL CHECK_DIRECTION_MAIN
      78.  00:42CD                      
      79.  00:42CD                      .KB_UPDOWN_PRESSED:
      80.  00:42CD  DD 7E 01                ld a,(ix+1); obtenemos el valor actual de la posicion x   
      81.  00:42D0  C6 10                   add 16; incrementamos en 3 el valor
      82.  00:42D2  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      83.  00:42D3  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
      84.  00:42D6  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
      85.  00:42D8  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      86.  00:42D9  CD C0 40                call get_bloque_en_X_Y
      87.  00:42DC  FE 01                   cp 1
      88.  00:42DE  CA 73 44                jp z,NO_MOVEMENT
      89.  00:42E1                      
      90.  00:42E1                          ;Miramos el tile del byte inferior del sprite - centro personaje
      91.  00:42E1  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
      92.  00:42E4  C6 10                   add 16; incrementamos en 2 tiles el valor
      93.  00:42E6  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
      94.  00:42E7  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
      95.  00:42EA  C6 08                   add 8 ; Añadimos 8 para mirar el tile inferior - centro
      96.  00:42EC  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
      97.  00:42ED  CD C0 40                call get_bloque_en_X_Y
      98.  00:42F0  FE 01                   cp 1
      99.  00:42F2  CA 73 44                jp z,NO_MOVEMENT
     100.  00:42F5                      
     101.  00:42F5                          ;Miramos el tile del byte inferior del sprite - esquina inferior derecha
     102.  00:42F5  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x   
     103.  00:42F8  C6 10                   add 16; incrementamos en 2 tiles el valor
     104.  00:42FA  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     105.  00:42FB  DD 7E 00                ld a,(ix) ;obtenemos el valor actual de la posicion y
     106.  00:42FE  C6 0F                   add 15 ; Añadimos 8+1 para mirar la esquina inferior derecha del tile inferior
     107.  00:4300  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     108.  00:4301  CD C0 40                call get_bloque_en_X_Y
     109.  00:4304  FE 01                   cp 1
     110.  00:4306  CA 73 44                jp z,NO_MOVEMENT    
     111.  00:4309                          
     112.  00:4309  3E 01                   LD A, MOV_SPEED
     113.  00:430B  32 1A C0            	LD (CHAR_SPEED_X), A
     114.  00:430E  CD 07 44                call UPDATE_MOVEMENT
     115.  00:4311  CB 69                   BIT KB_UP, C
     116.  00:4313  C8                      ret z
     117.  00:4314  CB 71                   BIT KB_DOWN, C
     118.  00:4316  C8                      ret z
     119.  00:4317  CD 2F 44                call ANIMATE_P1    
     120.  00:431A  C9                      ret
     121.  00:431B                      
     122.  00:431B                      move_left:
     123.  00:431B  A9                      XOR C               ; Reseteamos la entrada del teclado
     124.  00:431C                          ; Actualizamos la última tecla de dirección pulsada
     125.  00:431C  CB 69                   BIT KB_UP, C
     126.  00:431E  28 0C                   JR z, .KB_UPDOWN_PRESSED
     127.  00:4320  CB 71                   BIT KB_DOWN, C
     128.  00:4322  28 08                   JR z, .KB_UPDOWN_PRESSED
     129.  00:4324  3E 02                   LD A,$02
     130.  00:4326  32 24 C0                LD (CHAR_NEW_DIR_MAIN),A
     131.  00:4329  CD 7A 43                CALL CHECK_DIRECTION_MAIN
     132.  00:432C                      .KB_UPDOWN_PRESSED:
     133.  00:432C  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     134.  00:432F  D6 02                   sub 2 ; decrementamos en 2 el valor
     135.  00:4331  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     136.  00:4332  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     137.  00:4335  C6 01                   add 1   ; incrementamos en 1 por el desplazamiento del VGP
     138.  00:4337  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     139.  00:4338  CD C0 40                call get_bloque_en_X_Y
     140.  00:433B  FE 01                   cp 1
     141.  00:433D  CA 73 44                jp z,NO_MOVEMENT
     142.  00:4340                      
     143.  00:4340                          ;Miramos el tile inferior parte central del personaje
     144.  00:4340  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     145.  00:4343  D6 02                   sub 2 ; decrementamos en 2 el valor
     146.  00:4345  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     147.  00:4346  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     148.  00:4349  C6 08                   add 8   ; incrementamos en 8 para mirar la parte central del personaje
     149.  00:434B  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     150.  00:434C  CD C0 40                call get_bloque_en_X_Y
     151.  00:434F  FE 01                   cp 1
     152.  00:4351  CA 73 44                jp z,NO_MOVEMENT
     153.  00:4354                      
     154.  00:4354                          ;Miramos el tile inferior esquina inferior izquierda
     155.  00:4354  DD 7E 01                ld a,(ix+1); obetenemos el valor actual de la posicion x
     156.  00:4357  D6 02                   sub 2 ; decrementamos en 2 el valor
     157.  00:4359  57                      ld d,a  ; Metemos el parametro X para verificar si hay colision
     158.  00:435A  DD 7E 00                ld a,(ix)   ;obtenemos el valor actual de la posicion Y
     159.  00:435D  C6 0F                   add 15   ; incrementamos en 8 para mirar la parte central del personaje (-1 por el offset del VGP)
     160.  00:435F  5F                      ld e,a  ; Metemos el parametro Y para verificar si hay colision
     161.  00:4360  CD C0 40                call get_bloque_en_X_Y
     162.  00:4363  FE 01                   cp 1
     163.  00:4365  CA 73 44                jp z,NO_MOVEMENT
     164.  00:4368                      
     165.  00:4368  3E FF                   LD A, -MOV_SPEED
     166.  00:436A  32 1A C0            	LD (CHAR_SPEED_X), A
     167.  00:436D  CD 07 44                call UPDATE_MOVEMENT     
     168.  00:4370  CB 69                   BIT KB_UP, C
     169.  00:4372  C8                      ret z
     170.  00:4373  CB 71                   BIT KB_DOWN, C
     171.  00:4375  C8                      ret z
     172.  00:4376  CD 2F 44                call ANIMATE_P1    
     173.  00:4379  C9                      ret
     174.  00:437A                      
     175.  00:437A                      CHECK_DIRECTION_MAIN:
     176.  00:437A  3A 23 C0                LD A, (CHAR_DIR_MAIN)		                ;Cargamos el valor anterior de direccion
     177.  00:437D  2A 24 C0            	LD HL, (CHAR_NEW_DIR_MAIN)		            ;Cargamos el valor actual de direccion
     178.  00:4380  BD                  	CP L		            	                ;Son iguales?
     179.  00:4381  C8                  	RET Z                           			;Si son iguales, vuelvo
     180.  00:4382  3A 24 C0                LD A,(CHAR_NEW_DIR_MAIN)
     181.  00:4385  FE 01                   CP $01
     182.  00:4387  CA 9C 43                JP Z,.SET_DIR_DOWN
     183.  00:438A  FE 00                   CP $00
     184.  00:438C  CA B1 43                JP Z,.SET_DIR_UP
     185.  00:438F  FE 03                   CP $03
     186.  00:4391  CA DB 43                JP Z,.SET_DIR_RIGHT
     187.  00:4394  FE 02                   CP $02
     188.  00:4396  CA C6 43                JP Z,.SET_DIR_LEFT
     189.  00:4399  C3 F0 43                JP .FINISH
     190.  00:439C                          
     191.  00:439C                      .SET_DIR_DOWN:    
     192.  00:439C  21 8B 60                ld hl, SPRITE_P1_DOWN
     193.  00:439F  22 AC C0                ld (SPRITE_PTR_REPLACE), HL
     194.  00:43A2                          
     195.  00:43A2  21 8B 66                ld hl, SPRITE_COLOR_P1_DOWN
     196.  00:43A5  22 AE C0                ld (SPRITE_COLOR_REPLACE), HL    
     197.  00:43A8  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     198.  00:43AB  CD 1B 42                CALL DUMP_SPR_P1    
     199.  00:43AE                      
     200.  00:43AE  C3 F0 43                JP .FINISH
     201.  00:43B1                      
     202.  00:43B1                      .SET_DIR_UP:
     203.  00:43B1  21 CB 5F                ld hl, SPRITE_P1_UP
     204.  00:43B4  22 AC C0                ld (SPRITE_PTR_REPLACE), HL
     205.  00:43B7                          
     206.  00:43B7  21 2B 66                ld hl, SPRITE_COLOR_P1_UP
     207.  00:43BA  22 AE C0                ld (SPRITE_COLOR_REPLACE), HL
     208.  00:43BD  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     209.  00:43C0  CD 1B 42                CALL DUMP_SPR_P1
     210.  00:43C3  C3 F0 43                JP .FINISH
     211.  00:43C6                      
     212.  00:43C6                      .SET_DIR_LEFT:    
     213.  00:43C6  21 4B 61                ld hl, SPRITE_P1_LEFT
     214.  00:43C9  22 AC C0                ld (SPRITE_PTR_REPLACE), HL
     215.  00:43CC                          
     216.  00:43CC  21 6B 70                ld hl, SPRITE_COLOR_P1_LEFT
     217.  00:43CF  22 AE C0                ld (SPRITE_COLOR_REPLACE), HL
     218.  00:43D2  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     219.  00:43D5  CD 1B 42                CALL DUMP_SPR_P1   
     220.  00:43D8  C3 F0 43                JP .FINISH
     221.  00:43DB                      
     222.  00:43DB                      .SET_DIR_RIGHT:
     223.  00:43DB  21 0B 62                ld hl, SPRITE_P1_RIGHT
     224.  00:43DE  22 AC C0                ld (SPRITE_PTR_REPLACE), HL
     225.  00:43E1                          
     226.  00:43E1  21 EB 66                ld hl, SPRITE_COLOR_P1_RIGHT
     227.  00:43E4  22 AE C0                ld (SPRITE_COLOR_REPLACE), HL
     228.  00:43E7  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     229.  00:43EA                          ;    ld (ix+13), $10      ; Sprite 1 - Ghost
     230.  00:43EA  CD 1B 42                CALL DUMP_SPR_P1
     231.  00:43ED  C3 F0 43                JP .FINISH
     232.  00:43F0                      
     233.  00:43F0                      .FINISH:
     234.  00:43F0  AF                      XOR A   ; reseteamos el contador de pasos
     235.  00:43F1  32 26 C0                LD (CHAR_MIN_STEP), A   
     236.  00:43F4  3A 24 C0                LD A, (CHAR_NEW_DIR_MAIN)   ; Actualizamos la nueva dirección del personaje
     237.  00:43F7  32 23 C0                LD (CHAR_DIR_MAIN),A    
     238.  00:43FA                      
     239.  00:43FA                          ; ponemos el primer frame del sprite
     240.  00:43FA  DD 36 02 00             LD (ix+2), $00
     241.  00:43FE  DD 36 06 04             LD (ix+6), $04
     242.  00:4402  DD 36 0A 08             LD (ix+10), $08
     243.  00:4406                          ;CALL DUMP_SPR_ATTS
     244.  00:4406  C9                      RET
     245.  00:4407                      
     246.  00:4407                      UPDATE_MOVEMENT:
     247.  00:4407  DD 7E 00            	LD A, (ix)          ;cargamos la Y			
     248.  00:440A  2A 1B C0            	LD HL, (CHAR_SPEED_Y)
     249.  00:440D  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     250.  00:440E                          
     251.  00:440E  DD 77 00            	LD (ix), A
     252.  00:4411  DD 77 04                LD (ix+4), A
     253.  00:4414  DD 77 08                LD (ix+8), A
     254.  00:4417                      	
     255.  00:4417  DD 7E 01            	LD A, (ix+1)			;cargamos la X
     256.  00:441A  2A 1A C0            	LD HL, (CHAR_SPEED_X)
     257.  00:441D  85                  	ADD L   					; Actualizamos la posicion en base a la velocidad
     258.  00:441E                          
     259.  00:441E  DD 77 01            	LD (ix+1), A
     260.  00:4421  DD 77 05                LD (ix+5), A
     261.  00:4424  DD 77 09                LD (ix+9), A	
     262.  00:4427                      
     263.  00:4427  AF                      XOR A            ; reseteamos las variables de movimiento para el siguiente ciclo
     264.  00:4428  32 1A C0                LD (CHAR_SPEED_X),A
     265.  00:442B  32 1B C0                LD (CHAR_SPEED_Y),A	
     266.  00:442E  C9                      RET
     267.  00:442F                      
     268.  00:442F                      ANIMATE_P1:
     269.  00:442F                          ; Animación/pasos de personaje	
     270.  00:442F  3A 26 C0                LD A, (CHAR_MIN_STEP)
     271.  00:4432  FE 05                   CP MAX_CHAR_STEPS
     272.  00:4434  C2 6D 44                JP NZ,.NO_CHAR_PATTERN_CHANGE
     273.  00:4437                          
     274.  00:4437  AF                      XOR A
     275.  00:4438  32 26 C0                LD (CHAR_MIN_STEP), A   ; reseteamos el contador de pasos
     276.  00:443B  DD 7E 02                LD A, (ix+2)    ; Cargamos el patrón
     277.  00:443E  FE 00                   CP $00
     278.  00:4440  CA 56 44                JP Z,.SET_SPR_1P_2
     279.  00:4443  DD 36 02 00             LD (ix+2), $00
     280.  00:4447  DD 36 06 04             LD (ix+6), $04
     281.  00:444B  DD 36 0A 08             LD (ix+10), $08
     282.  00:444F  2A AE C0                ld hl, (SPRITE_COLOR_REPLACE)
     283.  00:4452  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     284.  00:4455  C9                      ret
     285.  00:4456                      
     286.  00:4456                      .SET_SPR_1P_2:
     287.  00:4456  DD 36 02 0C             LD (ix+2), $0C
     288.  00:445A  DD 36 06 10             LD (ix+6), $10
     289.  00:445E  DD 36 0A 14             LD (ix+10), $14
     290.  00:4462                              
     291.  00:4462  2A AE C0                ld HL, (SPRITE_COLOR_REPLACE)
     292.  00:4465  11 30 00                ld DE,48
     293.  00:4468  19                      ADD HL, DE
     294.  00:4469  22 B0 C0                ld (SPRITE_COLOR_REPLACE2), HL
     295.  00:446C                          ;ld a, 0
     296.  00:446C  C9                  	ret
     297.  00:446D                      
     298.  00:446D                      .NO_CHAR_PATTERN_CHANGE    
     299.  00:446D  C6 01                   ADD 1
     300.  00:446F  32 26 C0                LD (CHAR_MIN_STEP), A    
     301.  00:4472  C9                      ret
     302.  00:4473                      
     303.  00:4473                      NO_MOVEMENT:    
     304.  00:4473  C9                      ret
     305.  00:4474                      
     306.  00:4474                      MOVE_SHOOT:
     307.  00:4474  3A 25 C0                LD A,(CHAR_MAIN_SHOOT)    
     308.  00:4477  FE 01                   CP $01
     309.  00:4479  CA A4 44                JP Z,.MOVE_SHOOT_LEFT
     310.  00:447C  FE 02                   CP $02
     311.  00:447E  CA 8C 44                JP Z,.MOVE_SHOOT_RIGHT
     312.  00:4481  FE 03                   CP $03
     313.  00:4483  CA 94 44                JP Z,.MOVE_SHOOT_UP    
     314.  00:4486  FE 04                   CP $04
     315.  00:4488  CA 9C 44                JP Z,.MOVE_SHOOT_DOWN
     316.  00:448B  C9                      RET
     317.  00:448C                      
     318.  00:448C                      .MOVE_SHOOT_RIGHT:        
     319.  00:448C  3E 03                   LD A, MOV_SPEED_SHOOT
     320.  00:448E  32 28 C0            	LD (CHAR_SPEED_SHOOT), A    
     321.  00:4491  C3 A9 44                JP .CHECK_SHOOT_DISTANCE
     322.  00:4494                      
     323.  00:4494                      .MOVE_SHOOT_UP:        
     324.  00:4494  3E FD                   LD A, -MOV_SPEED_SHOOT
     325.  00:4496  32 28 C0            	LD (CHAR_SPEED_SHOOT), A    
     326.  00:4499  C3 A9 44                JP .CHECK_SHOOT_DISTANCE
     327.  00:449C                      
     328.  00:449C                      .MOVE_SHOOT_DOWN:
     329.  00:449C  3E 03                   LD A, MOV_SPEED_SHOOT
     330.  00:449E  32 28 C0            	LD (CHAR_SPEED_SHOOT), A    
     331.  00:44A1  C3 A9 44                JP .CHECK_SHOOT_DISTANCE
     332.  00:44A4                      
     333.  00:44A4                      .MOVE_SHOOT_LEFT:    
     334.  00:44A4  3E FD                   LD A, -MOV_SPEED_SHOOT
     335.  00:44A6  32 28 C0            	LD (CHAR_SPEED_SHOOT), A    
     336.  00:44A9                      
     337.  00:44A9                      .CHECK_SHOOT_DISTANCE:
     338.  00:44A9                          ; Miramos si va a izq o der
     339.  00:44A9  3A 25 C0                LD A,(CHAR_MAIN_SHOOT)    
     340.  00:44AC  D6 03                   SUB 3   ; Restar 3 a 1 o 2 provoca salto de carro, si es 3 o 4 no provoca el salto de carro
     341.  00:44AE  D2 BE 44                JP NC,.ADD_SHOOT_Y
     342.  00:44B1                          ; Movemos el disparo
     343.  00:44B1  DD 7E 0D                LD A, (ix+SPR_SHOOT_P1+1)          ;cargamos la X del disparo
     344.  00:44B4  2A 28 C0            	LD HL, (CHAR_SPEED_SHOOT)
     345.  00:44B7  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     346.  00:44B8  DD 77 0D                LD (ix+SPR_SHOOT_P1+1), A
     347.  00:44BB  C3 C8 44                JP .ADD_DISTANCE
     348.  00:44BE                      .ADD_SHOOT_Y
     349.  00:44BE                          ; Movemos el disparo
     350.  00:44BE  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)          ;cargamos la X del disparo
     351.  00:44C1  2A 28 C0            	LD HL, (CHAR_SPEED_SHOOT)
     352.  00:44C4  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     353.  00:44C5  DD 77 0C                LD (ix+SPR_SHOOT_P1), A
     354.  00:44C8                      
     355.  00:44C8                      .ADD_DISTANCE:
     356.  00:44C8  3A 27 C0                LD A,(CHAR_DISTANCE_SHOOT)
     357.  00:44CB  C6 03                   ADD MOV_SPEED_SHOOT
     358.  00:44CD  32 27 C0                LD (CHAR_DISTANCE_SHOOT),A    
     359.  00:44D0  FE 30                   CP MAX_DISTANCE_SHOOT
     360.  00:44D2  C0                      RET NZ
     361.  00:44D3                      
     362.  00:44D3                      .HIDE_SHOOT:
     363.  00:44D3  DD 36 0C D9             LD (ix+SPR_SHOOT_P1),217          ; Y = 217 para ocultar el Sprite
     364.  00:44D7  AF                      XOR A
     365.  00:44D8  32 25 C0                LD (CHAR_MAIN_SHOOT),A   ; Desactivo el estado disparando 
     366.  00:44DB  32 27 C0                LD (CHAR_DISTANCE_SHOOT),A
     367.  00:44DE  C9                      RET
     368.  00:44DF                      
      27   00:44DF                      	include "include\VDP.asm"
       1.  00:44DF                      print_strings_dialog_box:
       2.  00:44DF                      
       3.  00:44DF  FD 66 01            	LD H, (IY+1)
       4.  00:44E2  FD 6E 00            	LD L, (IY)
       5.  00:44E5  11 28 5C            	LD DE, FIRST_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y
       6.  00:44E8  FD E5               	PUSH IY
       7.  00:44EA  CD 0C 45                call print_string 
       8.  00:44ED  FD E1                   POP IY
       9.  00:44EF                      
      10.  00:44EF  FD 66 03            	LD H, (IY+3)
      11.  00:44F2  FD 6E 02            	LD L, (IY+2)
      12.  00:44F5  11 28 60                LD DE, SEC_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y    
      13.  00:44F8  FD E5               	PUSH IY
      14.  00:44FA  CD 0C 45                call print_string 
      15.  00:44FD  FD E1               	POP IY
      16.  00:44FF                      
      17.  00:44FF  FD 66 05                LD H, (IY+5)
      18.  00:4502  FD 6E 04            	LD L, (IY+4)
      19.  00:4505  11 28 64            	LD DE, THIRD_LINE_DLG_BOX	; Aquí irá el offset de la memoria del VDP en base a X, Y
      20.  00:4508  CD 0C 45                call print_string 
      21.  00:450B  C9                  	RET
      22.  00:450C                      
      23.  00:450C                      print_string:       
      24.  00:450C                      	
      25.  00:450C                      	;LD HL, string01
      26.  00:450C                      	;LD DE, 5CA8H	; Aquí irá el offset de la memoria del VDP en base a X, Y
      27.  00:450C                      .loop_str:
      28.  00:450C  7E                  	LD A, (HL)
      29.  00:450D  A7                  	AND A
      30.  00:450E  C8                  	RET Z
      31.  00:450F                      
      32.  00:450F  D6 20               	SUB 32
      33.  00:4511  CB 07               	RLC A
      34.  00:4513  CB 07               	RLC A	
      35.  00:4515                          
      36.  00:4515  06 00               	LD B, 0
      37.  00:4517  4F                  	LD C, A	; 4 * 32 = 124, ultimo caractec primera linea. 1024 - primer caracter segunda linea
      38.  00:4518                      				; 16 * 4 = 64 -> numero 0 - ASCII 48 - 32 = 16 * 4 = 64 offset número 0
      39.  00:4518                      				; Si #ASCII > 63 -> 2ª línea
      40.  00:4518                      				; segunda línea - ((#ASCII -32)*4)+1024
      41.  00:4518                      	
      42.  00:4518  7E                  	LD A, (HL)	; vuelvo a cargar el caracter para ver si está en la segunda línea (ascii > 63)
      43.  00:4519  E5                  	PUSH HL
      44.  00:451A  21 00 80            	LD HL, FONT
      45.  00:451D  09                  	ADD HL, BC
      46.  00:451E  FE 40               	CP 64
      47.  00:4520  DA 27 45            	JP C, .first_line_font
      48.  00:4523  01 00 04            	LD BC, 1024	; le sumamos 1024 para saltar a la segunda línea de la fuente
      49.  00:4526  09                  	ADD HL, BC
      50.  00:4527                      
      51.  00:4527                      .first_line_font:
      52.  00:4527  22 B4 C0                LD (BITMAP), HL
      53.  00:452A                          
      54.  00:452A  06 06               	LD B, :FONT
      55.  00:452C  D5                  	PUSH DE
      56.  00:452D  CD 40 45                call print_char
      57.  00:4530  D1                      POP DE
      58.  00:4531                      	
      59.  00:4531  FD 21 04 00         	LD IY, 4
      60.  00:4535  FD 19               	ADD IY, DE	; Le sumo 4 a DE para que empiece a escribir el next char 8 pixels a la derecha 
      61.  00:4537  FD 54               	LD D, IYH
      62.  00:4539  FD 5D               	LD E, IYL
      63.  00:453B                      	
      64.  00:453B                      
      65.  00:453B  E1                  	POP HL
      66.  00:453C  23                  	INC HL
      67.  00:453D  18 CD               	JR .loop_str
      68.  00:453F                          
      69.  00:453F  C9                      RET
      70.  00:4540                      
      71.  00:4540                      print_char
      72.  00:4540  AF                  		XOR A		
      73.  00:4541  0E 00               		ld		c,0
      74.  00:4543                      		;ld		de,0
      75.  00:4543  ED 53 13 C0         		LD (CHR_ACR), DE
      76.  00:4547  CD 69 41                	call	_vdpsetvramwr		
      77.  00:454A  78                  		ld	a, b			; 1st page bitmap
      78.  00:454B                      		;ld	d,a
      79.  00:454B  32 00 70            		ld	(_bank2),a
      80.  00:454E  2A B4 C0            		ld	hl,(BITMAP)		; Bitmap address
      81.  00:4551  3E 08               		ld	a, 8			; #lineas del caracter
      82.  00:4553  01 98 04            1:      ld	bc,0x498		; escribimos 4 bytes en el puerto 98h	
      83.  00:4556  ED B3                       otir
      84.  00:4558  01 7C 00                    LD BC, 124
      85.  00:455B  09                          ADD HL, BC
      86.  00:455C  F5                  		PUSH AF
      87.  00:455D                      
      88.  00:455D  FD 2A 13 C0         		LD IY, (CHR_ACR)
      89.  00:4561  01 80 00            		LD BC, 128
      90.  00:4564  FD 09               		ADD IY, BC
      91.  00:4566  FD 54               		LD D, IYH
      92.  00:4568  FD 5D               		LD E, IYL
      93.  00:456A  A9                  		XOR C
      94.  00:456B  ED 53 13 C0         		LD (CHR_ACR), DE
      95.  00:456F  CD 69 41            		call	_vdpsetvramwr		
      96.  00:4572  F1                  		POP AF		
      97.  00:4573                      
      98.  00:4573  3D                  		dec	a
      99.  00:4574  20 DD               		jr	nz,1b		
     100.  00:4576  C9                  		ret 
     101.  00:4577                      
     102.  00:4577                      CLEAR_DIALOG_BOX:		
     103.  00:4577  0E 00               		LD C,0
     104.  00:4579  11 28 5C            		LD DE, 5C28H
     105.  00:457C  ED 53 13 C0         		LD (CHR_ACR), DE
     106.  00:4580  CD 69 41            		call _vdpsetvramwr
     107.  00:4583  3E 18               		LD A, 24		; Borraremos 24 líneas de la pantalla
     108.  00:4585  21 CB 70            1:		LD HL, BLANK_DATA
     109.  00:4588  01 98 54            		LD BC,0x5498	; Escribimos 84 bytes
     110.  00:458B  ED B3               		OTIR
     111.  00:458D                      
     112.  00:458D  F5                  		PUSH AF
     113.  00:458E  FD 2A 13 C0         		LD IY, (CHR_ACR)
     114.  00:4592  01 80 00            		LD BC, 128
     115.  00:4595  FD 09               		ADD IY, BC
     116.  00:4597  FD 54               		LD D, IYH
     117.  00:4599  FD 5D               		LD E, IYL
     118.  00:459B  0E 00               		LD C,0
     119.  00:459D  ED 53 13 C0         		LD (CHR_ACR), DE
     120.  00:45A1  CD 69 41            		call	_vdpsetvramwr		
     121.  00:45A4  F1                  		POP AF		
     122.  00:45A5                      
     123.  00:45A5  3D                  		DEC a
     124.  00:45A6  20 DD               		JR NZ,1b
     125.  00:45A8  C9                  		RET
     126.  00:45A9                      
     127.  00:45A9                      ; -----------------------------------------------------------------------------------
     128.  00:45A9                      ; https://www.msx.org/forum/development/msx-development/assembly-combined-basic
     129.  00:45A9                      ; https://problemkaputt.de/portar.htm#vdpregisters20h2ehmsx2videocommandregisters
     130.  00:45A9                      ; -----------------------------------------------------------------------------------
     131.  00:45A9  (00:F3E0)           VDP_01: EQU   $F3E0
     132.  00:45A9  (00:FFE7)           VDP_08: EQU   $FFE7
     133.  00:45A9  (00:FFE8)           VDP_09: EQU   $FFE8
     134.  00:45A9                      
     135.  00:45A9                      SETPAG:				; SETPAG [A]
     136.  00:45A9  0F                  	RRCA
     137.  00:45AA  0F                  	RRCA
     138.  00:45AB  0F                  	RRCA
     139.  00:45AC  F6 1F               	OR	%00011111
     140.  00:45AE  F3                  	DI
     141.  00:45AF  D3 99               	OUT	($99),A
     142.  00:45B1  3E 82               	LD	A,$80+2
     143.  00:45B3  FB                  	EI
     144.  00:45B4  D3 99               	OUT	($99),A
     145.  00:45B6  C9                  	RET
     146.  00:45B7                      
     147.  00:45B7                      SET_WR:				; SET_WR [AHL]
     148.  00:45B7  CB 04               	RLC	H
     149.  00:45B9  17                  	RLA
     150.  00:45BA  CB 04               	RLC	H
     151.  00:45BC  17                  	RLA
     152.  00:45BD  CB 3C               	SRL	H
     153.  00:45BF  CB 3C               	SRL	H
     154.  00:45C1  F3                  	DI
     155.  00:45C2  D3 99               	OUT	($99),A
     156.  00:45C4  3E 8E               	LD	A,$80+14
     157.  00:45C6  D3 99               	OUT	($99),A
     158.  00:45C8  7D                  	LD	A,L
     159.  00:45C9                      ;	NOP				; MSX2+
     160.  00:45C9  D3 99               	OUT	($99),A
     161.  00:45CB  7C                  	LD	A,H
     162.  00:45CC  F6 40               	OR	64
     163.  00:45CE  D3 99               	OUT	($99),A
     164.  00:45D0  FB                  	EI
     165.  00:45D1  C9                  	RET
     166.  00:45D2                      
     167.  00:45D2                      SET_RD:				; SET_RD [AHL]
     168.  00:45D2  CB 04               	RLC	H
     169.  00:45D4  17                  	RLA
     170.  00:45D5  CB 04               	RLC	H
     171.  00:45D7  17                  	RLA
     172.  00:45D8  CB 3C               	SRL	H
     173.  00:45DA  CB 3C               	SRL	H
     174.  00:45DC  F3                  	DI
     175.  00:45DD  D3 99               	OUT	($99),A
     176.  00:45DF  3E 8E               	LD	A,$80+14
     177.  00:45E1  D3 99               	OUT	($99),A
     178.  00:45E3  7D                  	LD	A,L
     179.  00:45E4                      ;	NOP				; MSX2+
     180.  00:45E4  D3 99               	OUT	($99),A
     181.  00:45E6  7C                  	LD	A,H
     182.  00:45E7                      ;	NOP				; MSX2+
     183.  00:45E7  D3 99               	OUT	($99),A
     184.  00:45E9  FB                  	EI
     185.  00:45EA  C9                  	RET
     186.  00:45EB                      
     187.  00:45EB                      VDPCMD:				; VDPCMD [HL]->[CMDTABLE]
     188.  00:45EB  CD FE 45            	CALL	WAITCE
     189.  00:45EE  F3                  	DI
     190.  00:45EF  3E 20               	LD	A,$20
     191.  00:45F1  D3 99               	OUT	($99),A
     192.  00:45F3  3E 91               	LD	A,$80+17
     193.  00:45F5  D3 99               	OUT	($99),A
     194.  00:45F7  FB                  	EI
     195.  00:45F8  01 9B 0F            	LD	BC,$0F9B
     196.  00:45FB  ED B3               	OTIR
     197.  00:45FD  C9                  	RET
     198.  00:45FE                      
     199.  00:45FE                      WAITCE:				; WAITCE
     200.  00:45FE  3E 02               	LD	A,$02
     201.  00:4600  F3                  	DI
     202.  00:4601  D3 99               	OUT	($99),A
     203.  00:4603  3E 8F               	LD	A,$80+15
     204.  00:4605  D3 99               	OUT	($99),A
     205.  00:4607  DB 99               	IN	A,($99)
     206.  00:4609  1F                  	RRA
     207.  00:460A  3E 00               	LD	A,$00
     208.  00:460C  D3 99               	OUT	($99),A
     209.  00:460E  3E 8F               	LD	A,$80+15
     210.  00:4610  FB                  	EI
     211.  00:4611  D3 99               	OUT	($99),A
     212.  00:4613  38 E9               	JR	C,WAITCE
     213.  00:4615  C9                  	RET
     214.  00:4616                      
     215.  00:4616                      ENASCR:				; Enable Screen
     216.  00:4616  3A E0 F3            	LD	A,(VDP_01)
     217.  00:4619  F6 40               	OR	%01000000
     218.  00:461B  18 05               	JR	DISSCR.OUT
     219.  00:461D                      
     220.  00:461D                      DISSCR:				; Disable Screen
     221.  00:461D  3A E0 F3            	LD	A,(VDP_01)
     222.  00:4620  E6 BF               	AND	%10111111
     223.  00:4622  32 E0 F3            .OUT:	LD	(VDP_01),A
     224.  00:4625  F3                  	DI
     225.  00:4626  D3 99               	OUT	($99),A
     226.  00:4628  3E 81               	LD	A,$80+1
     227.  00:462A  FB                  	EI
     228.  00:462B  D3 99               	OUT	($99),A
     229.  00:462D  C9                  	RET
     230.  00:462E                      
     231.  00:462E                      ENASPR:				; Enable Sprites
     232.  00:462E  3A E7 FF            	LD	A,(VDP_08)
     233.  00:4631  E6 FD               	AND	%11111101
     234.  00:4633  18 05               	JR	DISSPR.OUT
     235.  00:4635                      
     236.  00:4635                      DISSPR:				; Disable Sprites
     237.  00:4635  3A E7 FF            	LD	A,(VDP_08)
     238.  00:4638  F6 02               	OR	%00000010
     239.  00:463A  32 E7 FF            .OUT:	LD	(VDP_08),A
     240.  00:463D  F3                  	DI
     241.  00:463E  D3 99               	OUT	($99),A
     242.  00:4640  3E 88               	LD	A,$80+8
     243.  00:4642  FB                  	EI
     244.  00:4643  D3 99               	OUT	($99),A
     245.  00:4645  C9                  	RET
     246.  00:4646                      
     247.  00:4646                      LIN192:				; Set 192 lines
     248.  00:4646  3A E8 FF            	LD	A,(VDP_09)
     249.  00:4649  F6 80               	OR	%10000000
     250.  00:464B  18 05               	JR	LIN212.OUT
     251.  00:464D                      
     252.  00:464D                      LIN212:				; Set 212 lines
     253.  00:464D  3A E8 FF            	LD	A,(VDP_09)
     254.  00:4650  E6 7F               	AND	%01111111
     255.  00:4652  32 E8 FF            .OUT:	LD	(VDP_09),A
     256.  00:4655  F3                  	DI
     257.  00:4656  D3 99               	OUT	($99),A
     258.  00:4658  3E 89               	LD	A,$80+9
     259.  00:465A  FB                  	EI
     260.  00:465B  D3 99               	OUT	($99),A
     261.  00:465D  C9                  	RET
      28   00:465E                      ; SFX
      29   00:465E                          include	"include\PT3_player.s"    
       1.  00:465E                      		; --- PT3 REPLAYER WORKING ON ROM ---
       2.  00:465E                      		; --- Can be assembled with asMSX ---
       3.  00:465E                      		; --- ROM version: MSX-KUN        ---
       4.  00:465E                      		; --- asMSX version 2: SapphiRe   ---
       5.  00:465E                      
       6.  00:465E                      ; Based on MSX full version of PT3 by Dioniso
       7.  00:465E                      ;
       8.  00:465E                      ; This version of the replayer can be used with any note table
       9.  00:465E                      ; This version also allows the use of PT3 commands
      10.  00:465E                      ; First 99 bytes of each PT3 module should be stripped off
      11.  00:465E                      ;
      12.  00:465E                      ; PLAY and PSG WRITE routines seperated to allow independent calls
      13.  00:465E                      ;
      14.  00:465E                      ; ROM LENGTH: 1549 bytes
      15.  00:465E                      ; RAM LENGTH:  576 bytes
      16.  00:465E                      
      17.  00:465E                      
      18.  00:465E                      
      19.  00:465E                      ;SJASM version by BTV 2016
      20.  00:465E                      
      21.  00:465E                      
      22.  00:465E                      		; --- CONSTANT VALUES DEFINITION ---
      23.  00:465E                      
      24.  00:465E                      ;ChannelsVars
      25.  00:465E                      ;struc	CHNPRM
      26.  00:465E                      ;reset group
      27.  00:465E  (00:0000)           CHNPRM_PsInOr	equ 0	;RESB 1
      28.  00:465E  (00:0001)           CHNPRM_PsInSm	equ 1	;RESB 1
      29.  00:465E  (00:0002)           CHNPRM_CrAmSl	equ 2	;RESB 1
      30.  00:465E  (00:0003)           CHNPRM_CrNsSl	equ 3	;RESB 1
      31.  00:465E  (00:0004)           CHNPRM_CrEnSl	equ 4	;RESB 1
      32.  00:465E  (00:0005)           CHNPRM_TSlCnt	equ 5	;RESB 1
      33.  00:465E  (00:0006)           CHNPRM_CrTnSl	equ 6	;RESW 1
      34.  00:465E  (00:0008)           CHNPRM_TnAcc	equ 8	;RESW 1
      35.  00:465E  (00:000A)           CHNPRM_COnOff	equ 10	;RESB 1
      36.  00:465E                      ;reset group
      37.  00:465E                      
      38.  00:465E  (00:000B)           CHNPRM_OnOffD	equ 11	;RESB 1
      39.  00:465E                      
      40.  00:465E                      ;IX for PTDECOD here [+12]
      41.  00:465E  (00:000C)           CHNPRM_OffOnD	equ 12	;RESB 1
      42.  00:465E  (00:000D)           CHNPRM_OrnPtr	equ 13	;RESW 1
      43.  00:465E  (00:000F)           CHNPRM_SamPtr	equ 15	;RESW 1
      44.  00:465E  (00:0011)           CHNPRM_NNtSkp	equ 17	;RESB 1
      45.  00:465E  (00:0012)           CHNPRM_Note	equ 18	;RESB 1
      46.  00:465E  (00:0013)           CHNPRM_SlToNt	equ 19	;RESB 1
      47.  00:465E  (00:0014)           CHNPRM_Env_En	equ 20	;RESB 1
      48.  00:465E  (00:0015)           CHNPRM_Flags	equ 21	;RESB 1
      49.  00:465E                       ;Enabled - 0,SimpleGliss - 2
      50.  00:465E  (00:0016)           CHNPRM_TnSlDl	equ 22	;RESB 1
      51.  00:465E  (00:0017)           CHNPRM_TSlStp	equ 23	;RESW 1
      52.  00:465E  (00:0019)           CHNPRM_TnDelt	equ 25	;RESW 1
      53.  00:465E  (00:001B)           CHNPRM_NtSkCn	equ 27	;RESB 1
      54.  00:465E  (00:001C)           CHNPRM_Volume	equ 28	;RESB 1
      55.  00:465E  (00:001D)           CHNPRM_Size	equ 29	;RESB 1
      56.  00:465E                      ;endstruc
      57.  00:465E                      
      58.  00:465E                      ;struc	AR
      59.  00:465E  (00:0000)           AR_TonA		equ 0	;RESW 1
      60.  00:465E  (00:0002)           AR_TonB		equ 2	;RESW 1
      61.  00:465E  (00:0004)           AR_TonC		equ 4	;RESW 1
      62.  00:465E  (00:0006)           AR_Noise	equ 6	;RESB 1
      63.  00:465E  (00:0007)           AR_Mixer	equ 7	;RESB 1
      64.  00:465E  (00:0008)           AR_AmplA	equ 8	;RESB 1
      65.  00:465E  (00:0009)           AR_AmplB	equ 9	;RESB 1
      66.  00:465E  (00:000A)           AR_AmplC	equ 10	;RESB 1
      67.  00:465E  (00:000B)           AR_Env		equ 11	;RESW 1
      68.  00:465E  (00:000D)           AR_EnvTp	equ 13	;RESB 1
      69.  00:465E                      ;endstruc
      70.  00:465E                      
      71.  00:465E                      		; --- CODE STARTS HERE ---
      72.  00:465E                      
      73.  00:465E  21 00 F2            CHECKLP:	LD	HL,PT3_SETUP
      74.  00:4661  CB FE               		SET	7,[HL]
      75.  00:4663  CB 46               		BIT	0,[HL]
      76.  00:4665  C8                  		RET	Z
      77.  00:4666  E1                  		POP	HL
      78.  00:4667  21 79 F2            		LD	HL,DelyCnt
      79.  00:466A  34                  		INC	[HL]
      80.  00:466B  21 3D F2            		LD	HL,ChanA+CHNPRM_NtSkCn
      81.  00:466E  34                  		INC	[HL]
      82.  00:466F  AF                  PT3_MUTE:	XOR	A
      83.  00:4670  67                  		LD	H,A
      84.  00:4671  6F                  		LD	L,A
      85.  00:4672  32 47 F3            		LD	[AYREGS+AR_AmplA],A
      86.  00:4675  22 48 F3            		LD	[AYREGS+AR_AmplB],HL
      87.  00:4678  C3 C1 4B            		JP	ROUT_A0
      88.  00:467B                      
      89.  00:467B                      PT3_INIT:	;HL - AddressOfModule - 100
      90.  00:467B  22 00 F2            		LD [PT3_MODADDR],HL
      91.  00:467E  E5                  		PUSH HL
      92.  00:467F  11 64 00            		LD DE,100
      93.  00:4682  19                  		ADD HL,DE
      94.  00:4683  7E                  		LD A,[HL]
      95.  00:4684  32 1B F2            		LD [PT3_Delay],A
      96.  00:4687  E5                  		PUSH HL
      97.  00:4688  DD E1               		POP IX
      98.  00:468A  19                  		ADD HL,DE
      99.  00:468B  22 02 F2            		LD [PT3_CrPsPtr],HL
     100.  00:468E  DD 5E 02            		LD E,[IX+102-100]
     101.  00:4691  19                  		ADD HL,DE
     102.  00:4692  23                  		INC HL
     103.  00:4693  22 17 F2            		LD [PT3_LPosPtr],HL
     104.  00:4696  D1                  		POP DE
     105.  00:4697  DD 6E 03            		LD L,[IX+103-100]
     106.  00:469A  DD 66 04            		LD H,[IX+104-100]
     107.  00:469D  19                  		ADD HL,DE
     108.  00:469E  22 19 F2            		LD [PT3_PatsPtr],HL
     109.  00:46A1  21 A9 00            		LD HL,169
     110.  00:46A4  19                  		ADD HL,DE
     111.  00:46A5  22 06 F2            		LD [PT3_OrnPtrs],HL
     112.  00:46A8  21 69 00            		LD HL,105
     113.  00:46AB  19                  		ADD HL,DE
     114.  00:46AC  22 04 F2            		LD [PT3_SAMPTRS],HL
     115.  00:46AF  21 00 F2            		LD HL,PT3_SETUP
     116.  00:46B2  CB BE               		RES 7,[HL]
     117.  00:46B4                      
     118.  00:46B4                      		; --- note table data depacker ---
     119.  00:46B4                      		; Depacks first 12 tones of each tone table
     120.  00:46B4                      
     121.  00:46B4  11 35 4C            		LD DE,T_PACK
     122.  00:46B7  01 B0 F3            		LD BC,T1_+(2*49)-1
     123.  00:46BA  1A                  .TP_0:		LD A,[DE]
     124.  00:46BB  13                  		INC DE
     125.  00:46BC  FE 1E               		CP 15*2
     126.  00:46BE  30 06               		JR NC,.TP_1
     127.  00:46C0  67                  		LD H,A
     128.  00:46C1  1A                  		LD A,[DE]
     129.  00:46C2  6F                  		LD L,A
     130.  00:46C3  13                  		INC DE
     131.  00:46C4  18 07               		JR .TP_2
     132.  00:46C6  D5                  .TP_1:		PUSH DE
     133.  00:46C7  16 00               		LD D,0
     134.  00:46C9  5F                  		LD E,A
     135.  00:46CA  19                  		ADD HL,DE
     136.  00:46CB  19                  		ADD HL,DE
     137.  00:46CC  D1                  		POP DE
     138.  00:46CD  7C                  .TP_2:		LD A,H
     139.  00:46CE  02                  		LD [BC],A
     140.  00:46CF  0B                  		DEC BC
     141.  00:46D0  7D                  		LD A,L
     142.  00:46D1  02                  		LD [BC],A
     143.  00:46D2  0B                  		DEC BC
     144.  00:46D3  D6 F0               		SUB $F0
     145.  00:46D5  20 E3               		JR NZ,.TP_0
     146.  00:46D7                      
     147.  00:46D7                      		; --- INITIALIZE PT3 VARIABLES ---
     148.  00:46D7  21 22 F2            		LD HL,VARS
     149.  00:46DA  77                  		LD [HL],A
     150.  00:46DB  11 23 F2            		LD DE,VARS+1
     151.  00:46DE  01 2C 01            		LD BC,VAR0END-VARS-1
     152.  00:46E1  ED B0               		LDIR
     153.  00:46E3                      
     154.  00:46E3  3C                  		INC A
     155.  00:46E4  32 79 F2            		LD [DelyCnt],A
     156.  00:46E7  21 01 F0            		LD HL,$F001 ;H - CHNPRM_Volume, L - CHNPRM_NtSkCn
     157.  00:46EA  22 3D F2            		LD [ChanA+CHNPRM_NtSkCn],HL
     158.  00:46ED  22 5A F2            		LD [ChanB+CHNPRM_NtSkCn],HL
     159.  00:46F0  22 77 F2            		LD [ChanC+CHNPRM_NtSkCn],HL
     160.  00:46F3                      
     161.  00:46F3  21 31 4C            		LD HL,EMPTYSAMORN
     162.  00:46F6  22 11 F2            		LD [PT3_AdInPtA],HL ;ptr to zero
     163.  00:46F9  22 2F F2            		LD [ChanA+CHNPRM_OrnPtr],HL ;ornament 0 is "0,1,0"
     164.  00:46FC  22 4C F2            		LD [ChanB+CHNPRM_OrnPtr],HL ;in all versions from
     165.  00:46FF  22 69 F2            		LD [ChanC+CHNPRM_OrnPtr],HL ;3.xx to 3.6x and VTII
     166.  00:4702                      
     167.  00:4702  22 31 F2            		LD [ChanA+CHNPRM_SamPtr],HL ;S1 There is no default
     168.  00:4705  22 4E F2            		LD [ChanB+CHNPRM_SamPtr],HL ;S2 sample in PT3, so, you
     169.  00:4708  22 6B F2            		LD [ChanC+CHNPRM_SamPtr],HL ;S3 can comment S1,2,3; see
     170.  00:470B                      					    ;also EMPTYSAMORN comment
     171.  00:470B                      
     172.  00:470B                      		; --- NOTE TABLE CREATOR (c) Ivan Roshin, adapted by SapphiRe ---
     173.  00:470B  DD 7E FF            		LD A,[IX+99-100] ;TONE TABLE NUMBER
     174.  00:470E  17                  		RLA
     175.  00:470F  E6 07               		AND 7
     176.  00:4711  21 E1 4B            		LD HL,NT_DATA
     177.  00:4714  D5                  		PUSH DE
     178.  00:4715  50                  		LD D,B		; ld d,0 (bc is 0000 after LDIR)
     179.  00:4716  87                  		ADD A,A
     180.  00:4717  5F                  		LD E,A
     181.  00:4718  19                  		ADD HL,DE	; hl -> init of correct note table data
     182.  00:4719  5E                  		LD E,[HL]
     183.  00:471A  23                  		INC HL
     184.  00:471B  CB 3B               		SRL E
     185.  00:471D  9F                  		SBC A,A
     186.  00:471E  E6 A7               		AND $A7			;$00 (NOP) or $A7 (AND A)
     187.  00:4720  32 20 F2            		LD [PT3_NTL3],A		; CORRECT INSTRUCTION, DEPENDS OF SELECTED TABLE
     188.  00:4723  3E C9               		LD A,$C9		; RET CODE
     189.  00:4725  32 21 F2            		LD [PT3_NTL3+1],A	; RET PLACED
     190.  00:4728  EB                  		EX DE,HL
     191.  00:4729  C1                  		POP BC ;BC=T1_
     192.  00:472A  09                  		ADD HL,BC
     193.  00:472B                      
     194.  00:472B  1A                  		LD A,[DE]                           
     195.  00:472C                      
     196.  00:472C  01 F1 4B            		LD BC,T_
     197.  00:472F  81                  		ADD A,C
     198.  00:4730  4F                  		LD C,A
     199.  00:4731  88                  		ADC A,B
     200.  00:4732                      
     201.  00:4732  91                  		SUB C
     202.  00:4733  47                  		LD B,A
     203.  00:4734  C5                  		PUSH BC
     204.  00:4735  11 7F F2            		LD DE,NT_
     205.  00:4738  D5                  		PUSH DE
     206.  00:4739                      
     207.  00:4739  06 0C               		LD B,12
     208.  00:473B  C5                  .L1:		PUSH BC
     209.  00:473C  4E                  		LD C,[HL]
     210.  00:473D  23                  		INC HL
     211.  00:473E  E5                  		PUSH HL
     212.  00:473F  46                  		LD B,[HL]
     213.  00:4740                      
     214.  00:4740  D5                  		PUSH DE
     215.  00:4741  EB                  		EX DE,HL
     216.  00:4742  11 17 00            		LD DE,23
     217.  00:4745  DD 26 08            		db $DD,$26,$08	;LD XH,8
     218.  00:4748                      
     219.  00:4748  CB 38               .L2:		SRL B
     220.  00:474A  CB 19               		RR C
     221.  00:474C  CD 20 F2            .L3:		CALL PT3_NTL3	;AND A or NOP
     222.  00:474F  79                  		LD A,C
     223.  00:4750  8A                  		ADC A,D	;=ADC 0
     224.  00:4751  77                  		LD [HL],A
     225.  00:4752  23                  		INC HL
     226.  00:4753  78                  		LD A,B
     227.  00:4754  8A                  		ADC A,D
     228.  00:4755  77                  		LD [HL],A
     229.  00:4756  19                  		ADD HL,DE
     230.  00:4757  DD 25               		db $DD,$25	;DEC XH
     231.  00:4759  20 ED               		JR NZ,.L2
     232.  00:475B                      
     233.  00:475B  D1                  		POP DE
     234.  00:475C  13                  		INC DE
     235.  00:475D  13                  		INC DE
     236.  00:475E  E1                  		POP HL
     237.  00:475F  23                  		INC HL
     238.  00:4760  C1                  		POP BC
     239.  00:4761  10 D8               		DJNZ .L1
     240.  00:4763                      
     241.  00:4763  E1                  		POP HL
     242.  00:4764  D1                  		POP DE
     243.  00:4765                      
     244.  00:4765  7B                  		LD A,E
     245.  00:4766  D5                  		PUSH DE
     246.  00:4767  11 FD 4B            		LD DE,TCOLD_1
     247.  00:476A  BB                  		CP E
     248.  00:476B  D1                  		POP DE
     249.  00:476C  20 05               		JR NZ,.CORR_1
     250.  00:476E  3E FD               		LD A,$FD
     251.  00:4770  32 AD F2            		LD [NT_+$2E],A
     252.  00:4773                      
     253.  00:4773  1A                  .CORR_1:	LD A,[DE]
     254.  00:4774  A7                  		AND A
     255.  00:4775  28 11               		JR Z,.TC_EXIT
     256.  00:4777  1F                  		RRA
     257.  00:4778  F5                  		PUSH AF
     258.  00:4779  87                  		ADD A,A
     259.  00:477A  4F                  		LD C,A
     260.  00:477B  09                  		ADD HL,BC
     261.  00:477C  F1                  		POP AF
     262.  00:477D  30 02               		JR NC,.CORR_2
     263.  00:477F  35                  		DEC [HL]
     264.  00:4780  35                  		DEC [HL]
     265.  00:4781  34                  .CORR_2:	INC [HL]
     266.  00:4782  A7                  		AND A
     267.  00:4783  ED 42               		SBC HL,BC
     268.  00:4785  13                  		INC DE
     269.  00:4786  18 EB               		JR .CORR_1
     270.  00:4788                      
     271.  00:4788                      .TC_EXIT:	;POP AF
     272.  00:4788                      
     273.  00:4788                      		; --- CREATE PT3 VOLUME TABLE (c) Ivan Roshin, adapted by SapphiRe ---
     274.  00:4788  21 11 00            		ld	hl,$11
     275.  00:478B  54                  		ld	d,h
     276.  00:478C  5C                  		ld	e,h
     277.  00:478D  DD 21 4F F3         		ld	IX,VT_+16
     278.  00:4791  06 0F               		ld	b,15
     279.  00:4793  E5                  .INITV1:	push	hl
     280.  00:4794  19                  		add	hl,de
     281.  00:4795  EB                  		ex	de,hl
     282.  00:4796  ED 62               		sbc	hl,hl
     283.  00:4798  48                  		ld	c,b
     284.  00:4799  06 10               		ld	b,16
     285.  00:479B  7D                  .INITV2:	ld	a,l
     286.  00:479C  17                  		rla
     287.  00:479D  7C                  		ld	a,h
     288.  00:479E  CE 00               		adc	a,0
     289.  00:47A0  DD 77 00            		ld	[ix],a
     290.  00:47A3  DD 23               		inc	ix
     291.  00:47A5  19                  		add	hl,de
     292.  00:47A6  10 F3               		djnz	.INITV2
     293.  00:47A8  E1                  		pop	hl
     294.  00:47A9  7B                  		ld	a,e
     295.  00:47AA  FE 77               		cp	$77
     296.  00:47AC  20 01               		jr	nz,.INITV3
     297.  00:47AE  1C                  		inc	e
     298.  00:47AF  41                  .INITV3:	ld	b,c
     299.  00:47B0  10 E1               		djnz	.INITV1
     300.  00:47B2                      
     301.  00:47B2  C9                  		RET
     302.  00:47B3                      
     303.  00:47B3                      		;pattern decoder
     304.  00:47B3  DD 36 08 00         PD_OrSm:	LD [IX+(CHNPRM_Env_En-12)],0
     305.  00:47B7  CD 3D 49            		CALL SETORN
     306.  00:47BA  0A                  		LD A,[BC]
     307.  00:47BB  03                  		INC BC
     308.  00:47BC  0F                  		RRCA
     309.  00:47BD                      
     310.  00:47BD  87                  PD_SAM:		ADD A,A
     311.  00:47BE  5F                  PD_SAM_:	LD E,A
     312.  00:47BF  16 00               		LD D,0
     313.  00:47C1  2A 04 F2            		LD HL,[PT3_SAMPTRS]
     314.  00:47C4  19                  		ADD HL,DE
     315.  00:47C5  5E                  		LD E,[HL]
     316.  00:47C6  23                  		INC HL
     317.  00:47C7  56                  		LD D,[HL]
     318.  00:47C8  2A 00 F2            		LD HL,[PT3_MODADDR]
     319.  00:47CB  19                  		ADD HL,DE
     320.  00:47CC  DD 75 03            		LD [IX+(CHNPRM_SamPtr-12)],L
     321.  00:47CF  DD 74 04            		LD [IX+(CHNPRM_SamPtr+1-12)],H
     322.  00:47D2  18 41               		JR PD_LOOP
     323.  00:47D4                      
     324.  00:47D4  07                  PD_VOL:		RLCA
     325.  00:47D5  07                  		RLCA
     326.  00:47D6  07                  		RLCA
     327.  00:47D7  07                  		RLCA
     328.  00:47D8  DD 77 10            		LD [IX+(CHNPRM_Volume-12)],A
     329.  00:47DB  18 3B               		JR PD_LP2
     330.  00:47DD                      	
     331.  00:47DD  DD 77 08            PD_EOff:	LD [IX+(CHNPRM_Env_En-12)],A
     332.  00:47E0  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     333.  00:47E3  18 33               		JR PD_LP2
     334.  00:47E5                      
     335.  00:47E5  3D                  PD_SorE:	DEC A
     336.  00:47E6  20 07               		JR NZ,PD_ENV
     337.  00:47E8  0A                  		LD A,[BC]
     338.  00:47E9  03                  		INC BC
     339.  00:47EA  DD 77 05            		LD [IX+(CHNPRM_NNtSkp-12)],A
     340.  00:47ED  18 29               		JR PD_LP2
     341.  00:47EF                      
     342.  00:47EF  CD 21 49            PD_ENV:		CALL SETENV
     343.  00:47F2  18 24               		JR PD_LP2
     344.  00:47F4                      
     345.  00:47F4  CD 3D 49            PD_ORN:		CALL SETORN
     346.  00:47F7  18 1C               		JR PD_LOOP
     347.  00:47F9                             
     348.  00:47F9  DD 77 08            PD_ESAM:	LD [IX+(CHNPRM_Env_En-12)],A
     349.  00:47FC  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     350.  00:47FF  C4 21 49            		CALL NZ,SETENV
     351.  00:4802  0A                  		LD A,[BC]
     352.  00:4803  03                  		INC BC
     353.  00:4804  18 B8               		JR PD_SAM_
     354.  00:4806                      
     355.  00:4806  DD 7E 06            PTDECOD:	LD A,[IX+(CHNPRM_Note-12)]
     356.  00:4809  32 0E F2            		LD [PT3_PrNote],A
     357.  00:480C  DD 6E FA            		LD L,[IX+(CHNPRM_CrTnSl-12)]
     358.  00:480F  DD 66 FB            		LD H,[IX+(CHNPRM_CrTnSl+1-12)]
     359.  00:4812  22 0F F2            		LD [PT3_PrSlide],HL
     360.  00:4815                      
     361.  00:4815  11 10 20            PD_LOOP:	LD DE,$2010
     362.  00:4818  0A                  PD_LP2:		LD A,[BC]
     363.  00:4819  03                  		INC BC
     364.  00:481A  83                  		ADD A,E
     365.  00:481B  38 96               		JR C,PD_OrSm
     366.  00:481D  82                  		ADD A,D
     367.  00:481E  28 4A               		JR Z,PD_FIN
     368.  00:4820  38 9B               		JR C,PD_SAM
     369.  00:4822  83                  		ADD A,E
     370.  00:4823  28 25               		JR Z,PD_REL
     371.  00:4825  38 AD               		JR C,PD_VOL
     372.  00:4827  83                  		ADD A,E
     373.  00:4828  28 B3               		JR Z,PD_EOff
     374.  00:482A  38 B9               		JR C,PD_SorE
     375.  00:482C  C6 60               		ADD A,96
     376.  00:482E  38 20               		JR C,PD_NOTE
     377.  00:4830  83                  		ADD A,E
     378.  00:4831  38 C1               		JR C,PD_ORN
     379.  00:4833  82                  		ADD A,D
     380.  00:4834  38 0F               		JR C,PD_NOIS
     381.  00:4836  83                  		ADD A,E
     382.  00:4837  38 C0               		JR C,PD_ESAM
     383.  00:4839  87                  		ADD A,A
     384.  00:483A  5F                  		LD E,A
     385.  00:483B  21 76 28            		LD HL,(SPCCOMS+$DF20) % 65536	; Adapted from original Speccy version (saves 6 bytes)
     386.  00:483E  19                  		ADD HL,DE
     387.  00:483F  5E                  		LD E,[HL]
     388.  00:4840  23                  		INC HL
     389.  00:4841  56                  		LD D,[HL]
     390.  00:4842  D5                  		PUSH DE
     391.  00:4843  18 D0               		JR PD_LOOP
     392.  00:4845                      
     393.  00:4845  32 7D F2            PD_NOIS:	LD [Ns_Base],A
     394.  00:4848  18 CE               		JR PD_LP2
     395.  00:484A                      
     396.  00:484A  DD CB 09 86         PD_REL:		RES 0,[IX+(CHNPRM_Flags-12)]
     397.  00:484E  18 08               		JR PD_RES
     398.  00:4850                      	
     399.  00:4850  DD 77 06            PD_NOTE:	LD [IX+(CHNPRM_Note-12)],A
     400.  00:4853  DD CB 09 C6         		SET 0,[IX+(CHNPRM_Flags-12)]
     401.  00:4857  AF                  		XOR A
     402.  00:4858                      
     403.  00:4858  ED 73 08 F2         PD_RES:		LD [PT3_PDSP],SP
     404.  00:485C  DD F9               		LD SP,IX
     405.  00:485E  67                  		LD H,A
     406.  00:485F  6F                  		LD L,A
     407.  00:4860  E5                  		PUSH HL
     408.  00:4861  E5                  		PUSH HL
     409.  00:4862  E5                  		PUSH HL
     410.  00:4863  E5                  		PUSH HL
     411.  00:4864  E5                  		PUSH HL
     412.  00:4865  E5                  		PUSH HL
     413.  00:4866  ED 7B 08 F2         		LD SP,[PT3_PDSP]
     414.  00:486A                      
     415.  00:486A  DD 7E 05            PD_FIN:		LD A,[IX+(CHNPRM_NNtSkp-12)]
     416.  00:486D  DD 77 0F            		LD [IX+(CHNPRM_NtSkCn-12)],A
     417.  00:4870  C9                  		RET
     418.  00:4871                      
     419.  00:4871  DD CB 09 96         C_PORTM:	RES 2,[IX+(CHNPRM_Flags-12)]
     420.  00:4875  0A                  		LD A,[BC]
     421.  00:4876  03                  		INC BC
     422.  00:4877                      		;SKIP PRECALCULATED TONE DELTA [BECAUSE
     423.  00:4877                      		;CANNOT BE RIGHT AFTER PT3 COMPILATION]
     424.  00:4877  03                  		INC BC
     425.  00:4878  03                  		INC BC
     426.  00:4879  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     427.  00:487C  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     428.  00:487F  11 7F F2            		LD DE,NT_
     429.  00:4882  DD 7E 06            		LD A,[IX+(CHNPRM_Note-12)]
     430.  00:4885  DD 77 07            		LD [IX+(CHNPRM_SlToNt-12)],A
     431.  00:4888  87                  		ADD A,A
     432.  00:4889  6F                  		LD L,A
     433.  00:488A  26 00               		LD H,0
     434.  00:488C  19                  		ADD HL,DE
     435.  00:488D  7E                  		LD A,[HL]
     436.  00:488E  23                  		INC HL
     437.  00:488F  66                  		LD H,[HL]
     438.  00:4890  6F                  		LD L,A
     439.  00:4891  E5                  		PUSH HL
     440.  00:4892  3A 0E F2            		LD A,[PT3_PrNote]
     441.  00:4895  DD 77 06            		LD [IX+(CHNPRM_Note-12)],A
     442.  00:4898  87                  		ADD A,A
     443.  00:4899  6F                  		LD L,A
     444.  00:489A  26 00               		LD H,0
     445.  00:489C  19                  		ADD HL,DE
     446.  00:489D  5E                  		LD E,[HL]
     447.  00:489E  23                  		INC HL
     448.  00:489F  56                  		LD D,[HL]
     449.  00:48A0  E1                  		POP HL
     450.  00:48A1  ED 52               		SBC HL,DE
     451.  00:48A3  DD 75 0D            		LD [IX+(CHNPRM_TnDelt-12)],L
     452.  00:48A6  DD 74 0E            		LD [IX+(CHNPRM_TnDelt+1-12)],H
     453.  00:48A9  ED 5B 0F F2         		LD DE,[PT3_PrSlide]
     454.  00:48AD  DD 73 FA            		LD [IX+(CHNPRM_CrTnSl-12)],E
     455.  00:48B0  DD 72 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],D
     456.  00:48B3  0A                  		LD A,[BC] ;SIGNED TONE STEP
     457.  00:48B4  03                  		INC BC
     458.  00:48B5  08                  		EX AF,AF'
     459.  00:48B6  0A                  		LD A,[BC]
     460.  00:48B7  03                  		INC BC
     461.  00:48B8  A7                  		AND A
     462.  00:48B9  28 01               		JR Z,.NOSIG
     463.  00:48BB  EB                  		EX DE,HL
     464.  00:48BC  ED 52               .NOSIG:	SBC HL,DE
     465.  00:48BE  F2 C6 48            		JP P,SET_STP
     466.  00:48C1  2F                  		CPL
     467.  00:48C2  08                  		EX AF,AF'
     468.  00:48C3  ED 44               		NEG
     469.  00:48C5  08                  		EX AF,AF'
     470.  00:48C6  DD 77 0C            SET_STP:	LD [IX+(CHNPRM_TSlStp+1-12)],A
     471.  00:48C9  08                  		EX AF,AF'
     472.  00:48CA  DD 77 0B            		LD [IX+(CHNPRM_TSlStp-12)],A
     473.  00:48CD  DD 36 FE 00         		LD [IX+(CHNPRM_COnOff-12)],0
     474.  00:48D1  C9                  		RET
     475.  00:48D2                      
     476.  00:48D2  DD CB 09 D6         C_GLISS:	SET 2,[IX+(CHNPRM_Flags-12)]
     477.  00:48D6  0A                  		LD A,[BC]
     478.  00:48D7  03                  		INC BC
     479.  00:48D8  DD 77 0A            		LD [IX+(CHNPRM_TnSlDl-12)],A
     480.  00:48DB  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     481.  00:48DE  0A                  		LD A,[BC]
     482.  00:48DF  03                  		INC BC
     483.  00:48E0  08                  		EX AF,AF'
     484.  00:48E1  0A                  		LD A,[BC]
     485.  00:48E2  03                  		INC BC
     486.  00:48E3  18 E1               		JR SET_STP
     487.  00:48E5                      
     488.  00:48E5  0A                  C_SMPOS:	LD A,[BC]
     489.  00:48E6  03                  		INC BC
     490.  00:48E7  DD 77 F5            		LD [IX+(CHNPRM_PsInSm-12)],A
     491.  00:48EA  C9                  		RET
     492.  00:48EB                      
     493.  00:48EB  0A                  C_ORPOS:	LD A,[BC]
     494.  00:48EC  03                  		INC BC
     495.  00:48ED  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     496.  00:48F0  C9                  		RET
     497.  00:48F1                      
     498.  00:48F1  0A                  C_VIBRT:	LD A,[BC]
     499.  00:48F2  03                  		INC BC
     500.  00:48F3  DD 77 FF            		LD [IX+(CHNPRM_OnOffD-12)],A
     501.  00:48F6  DD 77 FE            		LD [IX+(CHNPRM_COnOff-12)],A
     502.  00:48F9  0A                  		LD A,[BC]
     503.  00:48FA  03                  		INC BC
     504.  00:48FB  DD 77 00            		LD [IX+(CHNPRM_OffOnD-12)],A
     505.  00:48FE  AF                  		XOR A
     506.  00:48FF  DD 77 F9            		LD [IX+(CHNPRM_TSlCnt-12)],A
     507.  00:4902  DD 77 FA            		LD [IX+(CHNPRM_CrTnSl-12)],A
     508.  00:4905  DD 77 FB            		LD [IX+(CHNPRM_CrTnSl+1-12)],A
     509.  00:4908  C9                  		RET
     510.  00:4909                      
     511.  00:4909  0A                  C_ENGLS:	LD A,[BC]
     512.  00:490A  03                  		INC BC
     513.  00:490B  32 1D F2            		LD [PT3_Env_Del],A
     514.  00:490E  32 7C F2            		LD [CurEDel],A
     515.  00:4911  0A                  		LD A,[BC]
     516.  00:4912  03                  		INC BC
     517.  00:4913  6F                  		LD L,A
     518.  00:4914  0A                  		LD A,[BC]
     519.  00:4915  03                  		INC BC
     520.  00:4916  67                  		LD H,A
     521.  00:4917  22 1E F2            		LD [PT3_ESldAdd],HL
     522.  00:491A  C9                  		RET
     523.  00:491B                      
     524.  00:491B  0A                  C_DELAY:	LD A,[BC]
     525.  00:491C  03                  		INC BC
     526.  00:491D  32 1B F2            		LD [PT3_Delay],A
     527.  00:4920  C9                  		RET
     528.  00:4921                      	
     529.  00:4921  DD 73 08            SETENV:		LD [IX+(CHNPRM_Env_En-12)],E
     530.  00:4924  32 4C F3            		LD [AYREGS+AR_EnvTp],A
     531.  00:4927  0A                  		LD A,[BC]
     532.  00:4928  03                  		INC BC
     533.  00:4929  67                  		LD H,A
     534.  00:492A  0A                  		LD A,[BC]
     535.  00:492B  03                  		INC BC
     536.  00:492C  6F                  		LD L,A
     537.  00:492D  22 4D F3            		LD [EnvBase],HL
     538.  00:4930  AF                  		XOR A
     539.  00:4931  DD 77 F4            		LD [IX+(CHNPRM_PsInOr-12)],A
     540.  00:4934  32 7C F2            		LD [CurEDel],A
     541.  00:4937  67                  		LD H,A
     542.  00:4938  6F                  		LD L,A
     543.  00:4939  22 7A F2            		LD [CurESld],HL
     544.  00:493C  C9                  C_NOP:		RET
     545.  00:493D                      
     546.  00:493D  87                  SETORN:		ADD A,A
     547.  00:493E  5F                  		LD E,A
     548.  00:493F  16 00               		LD D,0
     549.  00:4941  DD 72 F4            		LD [IX+(CHNPRM_PsInOr-12)],D
     550.  00:4944  2A 06 F2            		LD HL,[PT3_OrnPtrs]
     551.  00:4947  19                  		ADD HL,DE
     552.  00:4948  5E                  		LD E,[HL]
     553.  00:4949  23                  		INC HL
     554.  00:494A  56                  		LD D,[HL]
     555.  00:494B  2A 00 F2            		LD HL,[PT3_MODADDR]
     556.  00:494E  19                  		ADD HL,DE
     557.  00:494F  DD 75 01            		LD [IX+(CHNPRM_OrnPtr-12)],L
     558.  00:4952  DD 74 02            		LD [IX+(CHNPRM_OrnPtr+1-12)],H
     559.  00:4955  C9                  		RET
     560.  00:4956                      
     561.  00:4956                      		;ALL 16 ADDRESSES TO PROTECT FROM BROKEN PT3 MODULES
     562.  00:4956  3C 49               SPCCOMS:	dw C_NOP
     563.  00:4958  D2 48               		dw C_GLISS
     564.  00:495A  71 48               		dw C_PORTM
     565.  00:495C  E5 48               		dw C_SMPOS
     566.  00:495E  EB 48               		dw C_ORPOS
     567.  00:4960  F1 48               		dw C_VIBRT
     568.  00:4962  3C 49               		dw C_NOP
     569.  00:4964  3C 49               		dw C_NOP
     570.  00:4966  09 49               		dw C_ENGLS
     571.  00:4968  1B 49               		dw C_DELAY
     572.  00:496A  3C 49               		dw C_NOP
     573.  00:496C  3C 49               		dw C_NOP
     574.  00:496E  3C 49               		dw C_NOP
     575.  00:4970  3C 49               		dw C_NOP
     576.  00:4972  3C 49               		dw C_NOP
     577.  00:4974  3C 49               		dw C_NOP
     578.  00:4976                      
     579.  00:4976  AF                  CHREGS:		XOR A
     580.  00:4977  32 49 F3            		LD [AYREGS+AR_AmplC],A
     581.  00:497A  DD CB 15 46         		BIT 0,[IX+CHNPRM_Flags]
     582.  00:497E  E5                  		PUSH HL
     583.  00:497F  CA A5 4A            		JP Z,.CH_EXIT
     584.  00:4982  ED 73 0A F2         		LD [PT3_CSP],SP
     585.  00:4986  DD 6E 0D            		LD L,[IX+CHNPRM_OrnPtr]
     586.  00:4989  DD 66 0E            		LD H,[IX+CHNPRM_OrnPtr+1]
     587.  00:498C  F9                  		LD SP,HL
     588.  00:498D  D1                  		POP DE
     589.  00:498E  67                  		LD H,A
     590.  00:498F  DD 7E 00            		LD A,[IX+CHNPRM_PsInOr]
     591.  00:4992  6F                  		LD L,A
     592.  00:4993  39                  		ADD HL,SP
     593.  00:4994  3C                  		INC A
     594.  00:4995  BA                  		CP D
     595.  00:4996  38 01               		JR C,.CH_ORPS
     596.  00:4998  7B                  		LD A,E
     597.  00:4999  DD 77 00            .CH_ORPS:	LD [IX+CHNPRM_PsInOr],A
     598.  00:499C  DD 7E 12            		LD A,[IX+CHNPRM_Note]
     599.  00:499F  86                  		ADD A,[HL]
     600.  00:49A0  F2 A4 49            		JP P,.CH_NTP
     601.  00:49A3  AF                  		XOR A
     602.  00:49A4  FE 60               .CH_NTP:	CP 96
     603.  00:49A6  38 02               		JR C,.CH_NOK
     604.  00:49A8  3E 5F               		LD A,95
     605.  00:49AA  87                  .CH_NOK:	ADD A,A
     606.  00:49AB  08                  		EX AF,AF'
     607.  00:49AC  DD 6E 0F            		LD L,[IX+CHNPRM_SamPtr]
     608.  00:49AF  DD 66 10            		LD H,[IX+CHNPRM_SamPtr+1]
     609.  00:49B2  F9                  		LD SP,HL
     610.  00:49B3  D1                  		POP DE
     611.  00:49B4  26 00               		LD H,0
     612.  00:49B6  DD 7E 01            		LD A,[IX+CHNPRM_PsInSm]
     613.  00:49B9  47                  		LD B,A
     614.  00:49BA  87                  		ADD A,A
     615.  00:49BB  87                  		ADD A,A
     616.  00:49BC  6F                  		LD L,A
     617.  00:49BD  39                  		ADD HL,SP
     618.  00:49BE  F9                  		LD SP,HL
     619.  00:49BF  78                  		LD A,B
     620.  00:49C0  3C                  		INC A
     621.  00:49C1  BA                  		CP D
     622.  00:49C2  38 01               		JR C,.CH_SMPS
     623.  00:49C4  7B                  		LD A,E
     624.  00:49C5  DD 77 01            .CH_SMPS:	LD [IX+CHNPRM_PsInSm],A
     625.  00:49C8  C1                  		POP BC
     626.  00:49C9  E1                  		POP HL
     627.  00:49CA  DD 5E 08            		LD E,[IX+CHNPRM_TnAcc]
     628.  00:49CD  DD 56 09            		LD D,[IX+CHNPRM_TnAcc+1]
     629.  00:49D0  19                  		ADD HL,DE
     630.  00:49D1  CB 70               		BIT 6,B
     631.  00:49D3  28 06               		JR Z,.CH_NOAC
     632.  00:49D5  DD 75 08            		LD [IX+CHNPRM_TnAcc],L
     633.  00:49D8  DD 74 09            		LD [IX+CHNPRM_TnAcc+1],H
     634.  00:49DB  EB                  .CH_NOAC:	EX DE,HL
     635.  00:49DC  08                  		EX AF,AF'
     636.  00:49DD  6F                  		LD L,A
     637.  00:49DE  26 00               		LD H,0
     638.  00:49E0  31 7F F2            		LD SP,NT_
     639.  00:49E3  39                  		ADD HL,SP
     640.  00:49E4  F9                  		LD SP,HL
     641.  00:49E5  E1                  		POP HL
     642.  00:49E6  19                  		ADD HL,DE
     643.  00:49E7  DD 5E 06            		LD E,[IX+CHNPRM_CrTnSl]
     644.  00:49EA  DD 56 07            		LD D,[IX+CHNPRM_CrTnSl+1]
     645.  00:49ED  19                  		ADD HL,DE
     646.  00:49EE  ED 7B 0A F2         		LD SP,[PT3_CSP]
     647.  00:49F2  E3                  		EX [SP],HL
     648.  00:49F3  AF                  		XOR A
     649.  00:49F4  DD B6 05            		OR [IX+CHNPRM_TSlCnt]
     650.  00:49F7  28 3E               		JR Z,.CH_AMP
     651.  00:49F9  DD 35 05            		DEC [IX+CHNPRM_TSlCnt]
     652.  00:49FC  20 39               		JR NZ,.CH_AMP
     653.  00:49FE  DD 7E 16            		LD A,[IX+CHNPRM_TnSlDl]
     654.  00:4A01  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     655.  00:4A04  DD 6E 17            		LD L,[IX+CHNPRM_TSlStp]
     656.  00:4A07  DD 66 18            		LD H,[IX+CHNPRM_TSlStp+1]
     657.  00:4A0A  7C                  		LD A,H
     658.  00:4A0B  19                  		ADD HL,DE
     659.  00:4A0C  DD 75 06            		LD [IX+CHNPRM_CrTnSl],L
     660.  00:4A0F  DD 74 07            		LD [IX+CHNPRM_CrTnSl+1],H
     661.  00:4A12  DD CB 15 56         		BIT 2,[IX+CHNPRM_Flags]
     662.  00:4A16  20 1F               		JR NZ,.CH_AMP
     663.  00:4A18  DD 5E 19            		LD E,[IX+CHNPRM_TnDelt]
     664.  00:4A1B  DD 56 1A            		LD D,[IX+CHNPRM_TnDelt+1]
     665.  00:4A1E  A7                  		AND A
     666.  00:4A1F  28 01               		JR Z,.CH_STPP
     667.  00:4A21  EB                  		EX DE,HL
     668.  00:4A22  ED 52               .CH_STPP:	SBC HL,DE
     669.  00:4A24  FA 37 4A            		JP M,.CH_AMP
     670.  00:4A27  DD 7E 13            		LD A,[IX+CHNPRM_SlToNt]
     671.  00:4A2A  DD 77 12            		LD [IX+CHNPRM_Note],A
     672.  00:4A2D  AF                  		XOR A
     673.  00:4A2E  DD 77 05            		LD [IX+CHNPRM_TSlCnt],A
     674.  00:4A31  DD 77 06            		LD [IX+CHNPRM_CrTnSl],A
     675.  00:4A34  DD 77 07            		LD [IX+CHNPRM_CrTnSl+1],A
     676.  00:4A37  DD 7E 02            .CH_AMP:	LD A,[IX+CHNPRM_CrAmSl]
     677.  00:4A3A  CB 79               		BIT 7,C
     678.  00:4A3C  28 13               		JR Z,.CH_NOAM
     679.  00:4A3E  CB 71               		BIT 6,C
     680.  00:4A40  28 07               		JR Z,.CH_AMIN
     681.  00:4A42  FE 0F               		CP 15
     682.  00:4A44  28 0B               		JR Z,.CH_NOAM
     683.  00:4A46  3C                  		INC A
     684.  00:4A47  18 05               		JR .CH_SVAM
     685.  00:4A49  FE F1               .CH_AMIN:	CP -15
     686.  00:4A4B  28 04               		JR Z,.CH_NOAM
     687.  00:4A4D  3D                  		DEC A
     688.  00:4A4E  DD 77 02            .CH_SVAM:	LD [IX+CHNPRM_CrAmSl],A
     689.  00:4A51  6F                  .CH_NOAM:	LD L,A
     690.  00:4A52  78                  		LD A,B
     691.  00:4A53  E6 0F               		AND 15
     692.  00:4A55  85                  		ADD A,L
     693.  00:4A56  F2 5A 4A            		JP P,.CH_APOS
     694.  00:4A59  AF                  		XOR A
     695.  00:4A5A  FE 10               .CH_APOS:	CP 16
     696.  00:4A5C  38 02               		JR C,.CH_VOL
     697.  00:4A5E  3E 0F               		LD A,15
     698.  00:4A60  DD B6 1C            .CH_VOL:	OR [IX+CHNPRM_Volume]
     699.  00:4A63  6F                  		LD L,A
     700.  00:4A64  26 00               		LD H,0
     701.  00:4A66  11 3F F3            		LD DE,VT_
     702.  00:4A69  19                  		ADD HL,DE
     703.  00:4A6A  7E                  		LD A,[HL]
     704.  00:4A6B  CB 41               .CH_ENV:	BIT 0,C
     705.  00:4A6D  20 03               		JR NZ,.CH_NOEN
     706.  00:4A6F  DD B6 14            		OR [IX+CHNPRM_Env_En]
     707.  00:4A72  32 49 F3            .CH_NOEN:	LD [AYREGS+AR_AmplC],A
     708.  00:4A75  CB 78               		BIT 7,B
     709.  00:4A77  79                  		LD A,C
     710.  00:4A78  28 19               		JR Z,.NO_ENSL
     711.  00:4A7A  17                  		RLA
     712.  00:4A7B  17                  		RLA
     713.  00:4A7C  CB 2F               		SRA A
     714.  00:4A7E  CB 2F               		SRA A
     715.  00:4A80  CB 2F               		SRA A
     716.  00:4A82  DD 86 04            		ADD A,[IX+CHNPRM_CrEnSl] ;SEE COMMENT BELOW
     717.  00:4A85  CB 68               		BIT 5,B
     718.  00:4A87  28 03               		JR Z,.NO_ENAC
     719.  00:4A89  DD 77 04            		LD [IX+CHNPRM_CrEnSl],A
     720.  00:4A8C  21 1C F2            .NO_ENAC:	LD HL,PT3_AddToEn
     721.  00:4A8F  86                  		ADD A,[HL] ;BUG IN PT3 - NEED WORD HERE.
     722.  00:4A90                      			   ;FIX IT IN NEXT VERSION?
     723.  00:4A90  77                  		LD [HL],A
     724.  00:4A91  18 0E               		JR .CH_MIX
     725.  00:4A93  1F                  .NO_ENSL:	RRA
     726.  00:4A94  DD 86 03            		ADD A,[IX+CHNPRM_CrNsSl]
     727.  00:4A97  32 7E F2            		LD [AddToNs],A
     728.  00:4A9A  CB 68               		BIT 5,B
     729.  00:4A9C  28 03               		JR Z,.CH_MIX
     730.  00:4A9E  DD 77 03            		LD [IX+CHNPRM_CrNsSl],A
     731.  00:4AA1  78                  .CH_MIX:	LD A,B
     732.  00:4AA2  1F                  		RRA
     733.  00:4AA3  E6 48               		AND $48
     734.  00:4AA5  21 46 F3            .CH_EXIT:	LD HL,AYREGS+AR_Mixer
     735.  00:4AA8  B6                  		OR [HL]
     736.  00:4AA9  0F                  		RRCA
     737.  00:4AAA  77                  		LD [HL],A
     738.  00:4AAB  E1                  		POP HL
     739.  00:4AAC  AF                  		XOR A
     740.  00:4AAD  DD B6 0A            		OR [IX+CHNPRM_COnOff]
     741.  00:4AB0  C8                  		RET Z
     742.  00:4AB1  DD 35 0A            		DEC [IX+CHNPRM_COnOff]
     743.  00:4AB4  C0                  		RET NZ
     744.  00:4AB5  DD AE 15            		XOR [IX+CHNPRM_Flags]
     745.  00:4AB8  DD 77 15            		LD [IX+CHNPRM_Flags],A
     746.  00:4ABB  1F                  		RRA
     747.  00:4ABC  DD 7E 0B            		LD A,[IX+CHNPRM_OnOffD]
     748.  00:4ABF  38 03               		JR C,.CH_ONDL
     749.  00:4AC1  DD 7E 0C            		LD A,[IX+CHNPRM_OffOnD]
     750.  00:4AC4  DD 77 0A            .CH_ONDL:	LD [IX+CHNPRM_COnOff],A
     751.  00:4AC7  C9                  		RET
     752.  00:4AC8                      
     753.  00:4AC8  AF                  PT3_PLAY:	XOR A
     754.  00:4AC9  32 1C F2            		LD [PT3_AddToEn],A
     755.  00:4ACC  32 46 F3            		LD [AYREGS+AR_Mixer],A
     756.  00:4ACF  3D                  		DEC A
     757.  00:4AD0  32 4C F3            		LD [AYREGS+AR_EnvTp],A
     758.  00:4AD3  21 79 F2            		LD HL,DelyCnt
     759.  00:4AD6  35                  		DEC [HL]
     760.  00:4AD7  C2 5E 4B            		JP NZ,.PL2
     761.  00:4ADA  21 3D F2            		LD HL,ChanA+CHNPRM_NtSkCn
     762.  00:4ADD  35                  		DEC [HL]
     763.  00:4ADE  20 4E               		JR NZ,.PL1B
     764.  00:4AE0  ED 4B 11 F2         		LD BC,[PT3_AdInPtA]
     765.  00:4AE4  0A                  		LD A,[BC]
     766.  00:4AE5  A7                  		AND A
     767.  00:4AE6  20 3B               		JR NZ,.PL1A
     768.  00:4AE8  57                  		LD D,A
     769.  00:4AE9  32 7D F2            		LD [Ns_Base],A
     770.  00:4AEC  2A 02 F2            		LD HL,[PT3_CrPsPtr]
     771.  00:4AEF  23                  		INC HL
     772.  00:4AF0  7E                  		LD A,[HL]
     773.  00:4AF1  3C                  		INC A
     774.  00:4AF2  20 08               		JR NZ,.PLNLP
     775.  00:4AF4  CD 5E 46            		CALL CHECKLP
     776.  00:4AF7  2A 17 F2            		LD HL,[PT3_LPosPtr]
     777.  00:4AFA  7E                  		LD A,[HL]
     778.  00:4AFB  3C                  		INC A
     779.  00:4AFC  22 02 F2            .PLNLP:	LD [PT3_CrPsPtr],HL
     780.  00:4AFF  3D                  		DEC A
     781.  00:4B00  87                  		ADD A,A
     782.  00:4B01  5F                  		LD E,A
     783.  00:4B02  CB 12               		RL D
     784.  00:4B04  2A 19 F2            		LD HL,[PT3_PatsPtr]
     785.  00:4B07  19                  		ADD HL,DE
     786.  00:4B08  ED 5B 00 F2         		LD DE,[PT3_MODADDR]
     787.  00:4B0C  ED 73 0C F2         		LD [PT3_PSP],SP
     788.  00:4B10  F9                  		LD SP,HL
     789.  00:4B11  E1                  		POP HL
     790.  00:4B12  19                  		ADD HL,DE
     791.  00:4B13  44                  		LD B,H
     792.  00:4B14  4D                  		LD C,L
     793.  00:4B15  E1                  		POP HL
     794.  00:4B16  19                  		ADD HL,DE
     795.  00:4B17  22 13 F2            		LD [PT3_AdInPtB],HL
     796.  00:4B1A  E1                  		POP HL
     797.  00:4B1B  19                  		ADD HL,DE
     798.  00:4B1C  22 15 F2            		LD [PT3_AdInPtC],HL
     799.  00:4B1F  ED 7B 0C F2         		LD SP,[PT3_PSP]
     800.  00:4B23                      
     801.  00:4B23  DD 21 2E F2         .PL1A:		LD IX,ChanA+12
     802.  00:4B27  CD 06 48            		CALL PTDECOD
     803.  00:4B2A  ED 43 11 F2         		LD [PT3_AdInPtA],BC
     804.  00:4B2E                      
     805.  00:4B2E  21 5A F2            .PL1B:		LD HL,ChanB+CHNPRM_NtSkCn
     806.  00:4B31  35                  		DEC [HL]
     807.  00:4B32  20 0F               		JR NZ,.PL1C
     808.  00:4B34  DD 21 4B F2         		LD IX,ChanB+12
     809.  00:4B38  ED 4B 13 F2         		LD BC,[PT3_AdInPtB]
     810.  00:4B3C  CD 06 48            		CALL PTDECOD
     811.  00:4B3F  ED 43 13 F2         		LD [PT3_AdInPtB],BC
     812.  00:4B43                      
     813.  00:4B43  21 77 F2            .PL1C:		LD HL,ChanC+CHNPRM_NtSkCn
     814.  00:4B46  35                  		DEC [HL]
     815.  00:4B47  20 0F               		JR NZ,.PL1D
     816.  00:4B49  DD 21 68 F2         		LD IX,ChanC+12
     817.  00:4B4D  ED 4B 15 F2         		LD BC,[PT3_AdInPtC]
     818.  00:4B51  CD 06 48            		CALL PTDECOD
     819.  00:4B54  ED 43 15 F2         		LD [PT3_AdInPtC],BC
     820.  00:4B58                      
     821.  00:4B58  3A 1B F2            .PL1D:		LD A,[PT3_Delay]
     822.  00:4B5B  32 79 F2            		LD [DelyCnt],A
     823.  00:4B5E                      
     824.  00:4B5E  DD 21 22 F2         .PL2:		LD IX,ChanA
     825.  00:4B62  2A 3F F3            		LD HL,[AYREGS+AR_TonA]
     826.  00:4B65  CD 76 49            		CALL CHREGS
     827.  00:4B68  22 3F F3            		LD [AYREGS+AR_TonA],HL
     828.  00:4B6B  3A 49 F3            		LD A,[AYREGS+AR_AmplC]
     829.  00:4B6E  32 47 F3            		LD [AYREGS+AR_AmplA],A
     830.  00:4B71  DD 21 3F F2         		LD IX,ChanB
     831.  00:4B75  2A 41 F3            		LD HL,[AYREGS+AR_TonB]
     832.  00:4B78  CD 76 49            		CALL CHREGS
     833.  00:4B7B  22 41 F3            		LD [AYREGS+AR_TonB],HL
     834.  00:4B7E  3A 49 F3            		LD A,[AYREGS+AR_AmplC]
     835.  00:4B81  32 48 F3            		LD [AYREGS+AR_AmplB],A
     836.  00:4B84  DD 21 5C F2         		LD IX,ChanC
     837.  00:4B88  2A 43 F3            		LD HL,[AYREGS+AR_TonC]
     838.  00:4B8B  CD 76 49            		CALL CHREGS
     839.  00:4B8E  22 43 F3            		LD [AYREGS+AR_TonC],HL
     840.  00:4B91                      
     841.  00:4B91  2A 7D F2            		LD HL,[Ns_Base_AddToNs]
     842.  00:4B94  7C                  		LD A,H
     843.  00:4B95  85                  		ADD A,L
     844.  00:4B96  32 45 F3            		LD [AYREGS+AR_Noise],A
     845.  00:4B99                      
     846.  00:4B99  3A 1C F2            		LD A,[PT3_AddToEn]
     847.  00:4B9C  5F                  		LD E,A
     848.  00:4B9D  87                  		ADD A,A
     849.  00:4B9E  9F                  		SBC A,A
     850.  00:4B9F  57                  		LD D,A
     851.  00:4BA0  2A 4D F3            		LD HL,[EnvBase]
     852.  00:4BA3  19                  		ADD HL,DE
     853.  00:4BA4  ED 5B 7A F2         		LD DE,[CurESld]
     854.  00:4BA8  19                  		ADD HL,DE
     855.  00:4BA9  22 4A F3            		LD [AYREGS+AR_Env],HL
     856.  00:4BAC                      
     857.  00:4BAC  AF                  		XOR A
     858.  00:4BAD  21 7C F2            		LD HL,CurEDel
     859.  00:4BB0  B6                  		OR [HL]
     860.  00:4BB1  C8                  		RET Z
     861.  00:4BB2  35                  		DEC [HL]
     862.  00:4BB3  C0                  		RET NZ
     863.  00:4BB4  3A 1D F2            		LD A,[PT3_Env_Del]
     864.  00:4BB7  77                  		LD [HL],A
     865.  00:4BB8  2A 1E F2            		LD HL,[PT3_ESldAdd]
     866.  00:4BBB  19                  		ADD HL,DE
     867.  00:4BBC  22 7A F2            		LD [CurESld],HL
     868.  00:4BBF  C9                  		RET
     869.  00:4BC0                      
     870.  00:4BC0  AF                  PT3_ROUT:	XOR A
     871.  00:4BC1                      	
     872.  00:4BC1                      ROUT_A0:	; --- FIXES BITS 6 AND 7 OF MIXER ---
     873.  00:4BC1  21 46 F3            		LD	HL,AYREGS+AR_Mixer
     874.  00:4BC4  CB FE               		set	7,[hl]
     875.  00:4BC6  CB B6               		res	6,[hl]
     876.  00:4BC8                      
     877.  00:4BC8  0E A0               		LD C,$A0
     878.  00:4BCA  21 3F F3            		LD HL,AYREGS
     879.  00:4BCD  ED 79               .LOUT:		OUT [C],A
     880.  00:4BCF  0C                  		INC C
     881.  00:4BD0  ED A3               		OUTI 
     882.  00:4BD2  0D                  		DEC C
     883.  00:4BD3  3C                  		INC A
     884.  00:4BD4  FE 0D               		CP 13
     885.  00:4BD6  20 F5               		JR NZ,.LOUT
     886.  00:4BD8  ED 79               		OUT [C],A
     887.  00:4BDA  7E                  		LD A,[HL]
     888.  00:4BDB  A7                  		AND A
     889.  00:4BDC  F8                  		RET M
     890.  00:4BDD  0C                  		INC C
     891.  00:4BDE  ED 79               		OUT [C],A
     892.  00:4BE0  C9                  		RET
     893.  00:4BE1                      
     894.  00:4BE1  64                  NT_DATA:	db (T_NEW_0-T1_)*2
     895.  00:4BE2  2A                  		db TCNEW_0-T_
     896.  00:4BE3  65                  		db (T_OLD_0-T1_)*2+1
     897.  00:4BE4  00                  		db TCOLD_0-T_
     898.  00:4BE5  01                  		db (T_NEW_1-T1_)*2+1
     899.  00:4BE6  0C                  		db TCNEW_1-T_
     900.  00:4BE7  01                  		db (T_OLD_1-T1_)*2+1
     901.  00:4BE8  0C                  		db TCOLD_1-T_
     902.  00:4BE9  94                  		db (T_NEW_2-T1_)*2
     903.  00:4BEA  35                  		db TCNEW_2-T_
     904.  00:4BEB  30                  		db (T_OLD_2-T1_)*2
     905.  00:4BEC  0E                  		db TCOLD_2-T_
     906.  00:4BED  60                  		db (T_NEW_3-T1_)*2
     907.  00:4BEE  20                  		db TCNEW_3-T_
     908.  00:4BEF  60                  		db (T_OLD_3-T1_)*2
     909.  00:4BF0  21                  		db TCOLD_3-T_
     910.  00:4BF1                      
     911.  00:4BF1                      T_:
     912.  00:4BF1                      
     913.  00:4BF1                      TCOLD_0:	db $00+1,$04+1,$08+1,$0A+1,$0C+1,$0E+1,$12+1,$14+1
     913.  00:4BF1  01 05 09 0B 0D 0F 13 15 
     914.  00:4BF9  19 25 3D 00         		db $18+1,$24+1,$3C+1,0
     915.  00:4BFD                      TCNEW_1:	
     916.  00:4BFD  5D 00               TCOLD_1:	db $5C+1,0
     917.  00:4BFF                      TCOLD_2:	db $30+1,$36+1,$4C+1,$52+1,$5E+1,$70+1,$82,$8C,$9C
     917.  00:4BFF  31 37 4D 53 5F 71 82 8C 9C 
     918.  00:4C08                      		db $9E,$A0,$A6,$A8,$AA,$AC,$AE,$AE,0
     918.  00:4C08  9E A0 A6 A8 AA AC AE AE 00 
     919.  00:4C11  57                  TCNEW_3:	db $56+1
     920.  00:4C12                      TCOLD_3:	db $1E+1,$22+1,$24+1,$28+1,$2C+1,$2E+1,$32+1,$BE+1,0
     920.  00:4C12  1F 23 25 29 2D 2F 33 BF 00 
     921.  00:4C1B                      TCNEW_0:	db $1C+1,$20+1,$22+1,$26+1,$2A+1,$2C+1,$30+1,$54+1
     921.  00:4C1B  1D 21 23 27 2B 2D 31 55 
     922.  00:4C23  BD BF 00            		db $BC+1,$BE+1,0
     923.  00:4C26                      TCNEW_2:	db $1A+1,$20+1,$24+1,$28+1,$2A+1,$3A+1,$4C+1,$5E+1
     923.  00:4C26  1B 21 25 29 2B 3B 4D 5F 
     924.  00:4C2E  BB BD BF            		db $BA+1,$BC+1,$BE+1
     925.  00:4C31                      
     926.  00:4C31  00 01 00 90         EMPTYSAMORN: 	db 0,1,0,$90 ;delete $90 if you don't need default sample
     927.  00:4C35                      
     928.  00:4C35                      T_PACK:		; First 12 values of tone tables (packed)
     929.  00:4C35  0D                  		db ($06EC*2)/256
     930.  00:4C36  D8                  		db #d8
     931.  00:4C37  69                  		db $0755-$06EC
     932.  00:4C38  70                  		db $07C5-$0755
     933.  00:4C39  76                  		db $083B-$07C5
     934.  00:4C3A  7D                  		db $08B8-$083B
     935.  00:4C3B  85                  		db $093D-$08B8
     936.  00:4C3C  8D                  		db $09CA-$093D
     937.  00:4C3D  95                  		db $0A5F-$09CA
     938.  00:4C3E  9D                  		db $0AFC-$0A5F
     939.  00:4C3F  A8                  		db $0BA4-$0AFC
     940.  00:4C40  B1                  		db $0C55-$0BA4
     941.  00:4C41  BB                  		db $0D10-$0C55
     942.  00:4C42  0C                  		db ($066D*2)/256
     943.  00:4C43  DA                  		db #da
     944.  00:4C44  62                  		db $06CF-$066D
     945.  00:4C45  68                  		db $0737-$06CF
     946.  00:4C46  6D                  		db $07A4-$0737
     947.  00:4C47  75                  		db $0819-$07A4
     948.  00:4C48  7B                  		db $0894-$0819
     949.  00:4C49  83                  		db $0917-$0894
     950.  00:4C4A  8A                  		db $09A1-$0917
     951.  00:4C4B  92                  		db $0A33-$09A1
     952.  00:4C4C  9C                  		db $0ACF-$0A33
     953.  00:4C4D  A4                  		db $0B73-$0ACF
     954.  00:4C4E  AF                  		db $0C22-$0B73
     955.  00:4C4F  B8                  		db $0CDA-$0C22
     956.  00:4C50  0E                  		db ($0704*2)/256
     957.  00:4C51  08                  		db #08
     958.  00:4C52  6A                  		db $076E-$0704
     959.  00:4C53  72                  		db $07E0-$076E
     960.  00:4C54  78                  		db $0858-$07E0
     961.  00:4C55  7E                  		db $08D6-$0858
     962.  00:4C56  86                  		db $095C-$08D6
     963.  00:4C57  90                  		db $09EC-$095C
     964.  00:4C58  96                  		db $0A82-$09EC
     965.  00:4C59  A0                  		db $0B22-$0A82
     966.  00:4C5A  AA                  		db $0BCC-$0B22
     967.  00:4C5B  B4                  		db $0C80-$0BCC
     968.  00:4C5C  BE                  		db $0D3E-$0C80
     969.  00:4C5D  0F                  		db ($07E0*2)/256
     970.  00:4C5E  C0                  		db #c0
     971.  00:4C5F  78                  		db $0858-$07E0
     972.  00:4C60  88                  		db $08E0-$0858
     973.  00:4C61  80                  		db $0960-$08E0
     974.  00:4C62  90                  		db $09F0-$0960
     975.  00:4C63  98                  		db $0A88-$09F0
     976.  00:4C64  A0                  		db $0B28-$0A88
     977.  00:4C65  B0                  		db $0BD8-$0B28
     978.  00:4C66  A8                  		db $0C80-$0BD8
     979.  00:4C67  E0                  		db $0D60-$0C80
     980.  00:4C68  B0                  		db $0E10-$0D60
     981.  00:4C69  E8                  		db $0EF8-$0E10
     982.  00:4C6A                      
     983.  00:4C6A                      
     984.  00:4C6A                      
     985.  00:4C6A                      
     986.  00:4C6A                      
     987.  00:4C6A                      
     988.  00:4C6A                      
     989.  00:4C6A                      
     990.  00:4C6A                      
     991.  00:4C6A                      
     992.  00:4C6A                      
     993.  00:4C6A                      
     994.  00:4C6A                      
     995.  00:4C6A                      	;Variables del replayer... las coloco desde aqui.
     996.  00:4C6A                      	;mirar que hace la directiva MAP del SJASM
     997.  00:4C6A  (F200)              	map		#f200
     998.  00:4C6A                      
     999.  00:4C6A                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER
    1000.  00:4C6A  (00:F200)           PT3_SETUP:		#0	;set bit0 to 1, if you want to play without looping
    1001.  00:4C6A                      					;bit7 is set each time, when loop point is passed
    1002.  00:4C6A  (00:F200)           PT3_MODADDR:	#2
    1003.  00:4C6A  (00:F202)           PT3_CrPsPtr:		#2
    1004.  00:4C6A  (00:F204)           PT3_SAMPTRS:		#2
    1005.  00:4C6A  (00:F206)           PT3_OrnPtrs:		#2
    1006.  00:4C6A  (00:F208)           PT3_PDSP:		#2
    1007.  00:4C6A  (00:F20A)           PT3_CSP:		#2 
    1008.  00:4C6A  (00:F20C)           PT3_PSP:		#2
    1009.  00:4C6A  (00:F20E)           PT3_PrNote:		#1
    1010.  00:4C6A  (00:F20F)           PT3_PrSlide:		#2
    1011.  00:4C6A  (00:F211)           PT3_AdInPtA:		#2
    1012.  00:4C6A  (00:F213)           PT3_AdInPtB:		#2
    1013.  00:4C6A  (00:F215)           PT3_AdInPtC:		#2
    1014.  00:4C6A  (00:F217)           PT3_LPosPtr:		#2
    1015.  00:4C6A  (00:F219)           PT3_PatsPtr:		#2
    1016.  00:4C6A  (00:F21B)           PT3_Delay:		#1
    1017.  00:4C6A  (00:F21C)           PT3_AddToEn:		#1
    1018.  00:4C6A  (00:F21D)           PT3_Env_Del:		#1
    1019.  00:4C6A  (00:F21E)           PT3_ESldAdd:		#2
    1020.  00:4C6A  (00:F220)           PT3_NTL3:		#2	; AND A / NOP (note table creator)
    1021.  00:4C6A                      
    1022.  00:4C6A  (00:F222)           VARS:			#0
    1023.  00:4C6A                      
    1024.  00:4C6A  (00:F222)           ChanA:			#29			;CHNPRM_Size
    1025.  00:4C6A  (00:F23F)           ChanB:			#29			;CHNPRM_Size
    1026.  00:4C6A  (00:F25C)           ChanC:			#29			;CHNPRM_Size
    1027.  00:4C6A                      
    1028.  00:4C6A                      ;GlobalVars
    1029.  00:4C6A  (00:F279)           DelyCnt:		#1
    1030.  00:4C6A  (00:F27A)           CurESld:		#2
    1031.  00:4C6A  (00:F27C)           CurEDel:		#1
    1032.  00:4C6A  (00:F27D)           Ns_Base_AddToNs:	#0
    1033.  00:4C6A  (00:F27D)           Ns_Base:		#1
    1034.  00:4C6A  (00:F27E)           AddToNs:		#1
    1035.  00:4C6A                      
    1036.  00:4C6A  (00:F27F)           NT_:			#192	; Puntero a/tabla de frecuencias
    1037.  00:4C6A                      
    1038.  00:4C6A  (00:F33F)           AYREGS:			#0
    1039.  00:4C6A  (00:F33F)           VT_:			#14
    1040.  00:4C6A  (00:F34D)           EnvBase:		#2
    1041.  00:4C6A  (00:F34F)           VAR0END:		#0
    1042.  00:4C6A                      
    1043.  00:4C6A  (00:F34F)           T1_:			#0		
    1044.  00:4C6A  (00:F34F)           T_NEW_1:		#0
    1045.  00:4C6A  (00:F34F)           T_OLD_1:		#24
    1046.  00:4C6A  (00:F367)           T_OLD_2:		#24
    1047.  00:4C6A  (00:F37F)           T_NEW_3:		#0
    1048.  00:4C6A  (00:F37F)           T_OLD_3:		#2
    1049.  00:4C6A  (00:F381)           T_OLD_0:		#0
    1050.  00:4C6A  (00:F381)           T_NEW_0:		#24
    1051.  00:4C6A  (00:F399)           T_NEW_2:		#166
    1052.  00:4C6A                      ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;PT3 REPLAYER END
      30   00:4C6A                      START
      31   00:4C6A                      	; CODE
      32   00:4C6A  21 E9 F3                ld hl,FORCLR ; Variable del Sistema
      33   00:4C6D  36 00               	ld [hl],0 ; Color del primer plano 15=blanco
      34   00:4C6F  23                  	inc hl ; FORCLR+1
      35   00:4C70  36 00               	ld [hl],0 ; Color de fondo 1=negro
      36   00:4C72  23                  	inc hl ; FORCLR+2
      37   00:4C73  36 00               	ld [hl],0 ; Color del borde 1=negro
      38   00:4C75  3E 08               	LD A,8
      39   00:4C77                      	;CALL CHGMOD    	
      40   00:4C77  CD 9C 41                CALL SETPAGES32K
      41   00:4C7A                      	;CALL opening_screen
      42   00:4C7A  3E 01               	LD A,1
      43   00:4C7C  32 00 70            	LD (_bank2),A
      44   00:4C7F                      	;CALL CHGET
      45   00:4C7F                      	; Empieza el juego    
      46   00:4C7F  CD 09 41            	call ClearVram_MSX2		
      47   00:4C82  CD AF 41            	call SET_SCREEN5_MODE    
      48   00:4C85  CD FD 40                call Set212Lines
      49   00:4C88                              
      50   00:4C88  CD 9A 4C                call INIT_CHARS_VARS
      51   00:4C8B  3E FF                   LD A, -MOV_SPEED_GHOST
      52   00:4C8D  32 1C C0            	LD (CHAR_SPEED_X_GHOST), A
      53   00:4C90  21 1F 71                LD HL, PaletteData
      54   00:4C93  CD 38 42                CALL SetPalette
      55   00:4C96  CD 23 4D                CALL STAGE1
      56   00:4C99                          ;call MAIN_LOOP
      57   00:4C99                          ;CALL CHGET
      58   00:4C99  C9                  	ret
      59   00:4C9A                      
      60   00:4C9A                      
      61   00:4C9A                      INIT_CHARS_VARS:    
      62   00:4C9A  DD 21 29 C0             ld ix, SPRITE_ATTRS           
      63   00:4C9E                          
      64   00:4C9E  DD 36 00 69             ld (ix), 69h        ; Sprite 1 - $AF abajo - Y
      65   00:4CA2  DD 36 01 7F             ld (ix+1), 7Fh      ; X        
      66   00:4CA6  DD 36 02 00             ld (ix+2), 00h      ; Pattern
      67   00:4CAA                      
      68   00:4CAA  DD 36 04 69             ld (ix+4), 69h     ; Sprite 2
      69   00:4CAE  DD 36 05 7F             ld (ix+5), 7Fh
      70   00:4CB2  DD 36 06 04             ld (ix+6), 04h        
      71   00:4CB6                      
      72   00:4CB6  DD 36 08 69             ld (ix+8), 69h     ; Sprite 3
      73   00:4CBA  DD 36 09 7F             ld (ix+9), 7Fh
      74   00:4CBE  DD 36 0A 08             ld (ix+10), 08h        
      75   00:4CC2                      
      76   00:4CC2  DD 36 10 0F             ld (ix+SPR_GHOST_STG1), $0f      ; Sprite 1 - Ghost - mask0
      77   00:4CC6  DD 36 11 AF             ld (ix+SPR_GHOST_STG1+1), $AF
      78   00:4CCA  DD 36 12 1C             ld (ix+SPR_GHOST_STG1+2), SPR_GHOST_STG1_PTRN_L1
      79   00:4CCE                          
      80   00:4CCE  DD 36 14 0F             ld (ix+SPR_GHOST_STG1+4), $0f      ; Sprite 1 - Ghost - mask0
      81   00:4CD2  DD 36 15 AF             ld (ix+SPR_GHOST_STG1+5), $AF
      82   00:4CD6  DD 36 16 20             ld (ix+SPR_GHOST_STG1+6), SPR_GHOST_STG1_PTRN_L1+4
      83   00:4CDA                          
      84   00:4CDA  AF                      XOR A
      85   00:4CDB  32 19 C0                LD (JIFFY_TEMP),A
      86   00:4CDE  32 1A C0                LD (CHAR_SPEED_X),A
      87   00:4CE1  32 1B C0                LD (CHAR_SPEED_Y),A
      88   00:4CE4  32 1C C0                LD (CHAR_SPEED_X_GHOST),A
      89   00:4CE7  32 21 C0                LD (CHAR_DIR_GHOST1),A      ; $00 - LEFT, $FF - RIGHT
      90   00:4CEA  32 24 C0                LD (CHAR_NEW_DIR_MAIN),A    
      91   00:4CED  32 25 C0                LD (CHAR_MAIN_SHOOT),A      ; Indica si el personaje está disparando - $FF
      92   00:4CF0  32 27 C0                LD (CHAR_DISTANCE_SHOOT),A
      93   00:4CF3  32 28 C0                LD (CHAR_SPEED_SHOOT),A
      94   00:4CF6  32 1E C0                LD (CHAR_GHOST_DEAD),A
      95   00:4CF9  32 26 C0                LD (CHAR_MIN_STEP), A
      96   00:4CFC  32 B0 C0                LD (SPRITE_COLOR_REPLACE2), A
      97   00:4CFF  32 12 C0                LD (SHOWING_GUS_DIALOG), A
      98   00:4D02  32 11 C0                LD (SHOWING_JOHN_DIALOG), A
      99   00:4D05  32 10 C0                LD (SHOWING_MIKE_DIALOG), A
     100   00:4D08  32 0F C0                LD (SHOWING_SKULL_STG1_DIALOG), A
     101   00:4D0B                      
     102   00:4D0B                         ; LD A,$FF
     103   00:4D0B  32 18 C0                LD (OLD_KEY_PRESSED), A
     104   00:4D0E  3E 01                   LD A,$01
     105   00:4D10  32 23 C0                LD (CHAR_DIR_MAIN),A        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
     106   00:4D13                      
     107   00:4D13  21 8B 60                ld hl, SPRITE_P1_DOWN
     108   00:4D16  22 AC C0                ld (SPRITE_PTR_REPLACE), HL    
     109   00:4D19  21 8B 66                ld hl, SPRITE_COLOR_P1_DOWN
     110   00:4D1C  22 AE C0                ld (SPRITE_COLOR_REPLACE), HL
     111   00:4D1F  22 B0 C0                LD (SPRITE_COLOR_REPLACE2), HL
     112   00:4D22                      
     113   00:4D22                          
     114   00:4D22  C9                      ret
     115   00:4D23                      
     116   00:4D23                      STAGE1:
     117   00:4D23  CD 1D 46                CALL DISSCR
     118   00:4D26  21 00 80                LD HL, CEMENTER1
     119   00:4D29  22 B4 C0                LD (BITMAP), HL
     120   00:4D2C  06 07                   LD B, :CEMENTER1
     121   00:4D2E  CD 47 41                call load_screen
     122   00:4D31                          
     123   00:4D31  CD D1 41                call DUMP_SPR_ALL
     124   00:4D34  CD 1B 42                CALL DUMP_SPR_P1
     125   00:4D37                          
     126   00:4D37  21 4B 67                LD HL, mapa1
     127   00:4D3A  11 B6 C0                LD DE, MAP_RAM
     128   00:4D3D  01 E0 02                LD BC, 736
     129   00:4D40  ED B0                   LDIR
     130   00:4D42                          
     131   00:4D42  21 B6 C0                LD HL, MAP_RAM
     132   00:4D45  22 B2 C0                LD (MAPA), HL
     133   00:4D48                          
     134   00:4D48                          ;We load the tiles on page 1 of VDP
     135   00:4D48  21 3F 71                LD HL, TILES1    
     136   00:4D4B  CD F6 41                call load_tiles_vdp
     137   00:4D4E                      
     138   00:4D4E  CD 16 46                CALL ENASCR    
     139   00:4D51                      
     140   00:4D51  F3                     	di	
     141   00:4D52  21 81 50            	ld		hl,SONG-99		; hl vale la direccion donde se encuentra la cancion - 99
     142   00:4D55  DD E5                   PUSH IX
     143   00:4D57                          ;call	PT3_INIT			; Inicia el reproductor de PT3
     144   00:4D57  DD E1               	POP IX
     145   00:4D59  FB                      ei
     146   00:4D5A                      
     147   00:4D5A                      
     148   00:4D5A                      MAIN_LOOP:
     149   00:4D5A                          ;halt ; sincroniza el teclado y pantalla con el procesador (que va muy rápido)    
     150   00:4D5A                      
     151   00:4D5A                          
     152   00:4D5A  DD 7E 00                LD A, (ix)  ; Cargamos la Y
     153   00:4D5D  FE 00                   CP $00
     154   00:4D5F  CA A5 4F                JP Z, STAGE2
     155   00:4D62  CD 00 42                call DUMP_SPR_ATTS    
     156   00:4D65                      
     157   00:4D65                      .check_tombs:
     158   00:4D65  DD 7E 01                LD A, (ix +1)   ; Cargamos la X para mirar si hay colisión con la tumba
     159   00:4D68  FE C8                   CP MIKE_TOMB_STG1_X
     160   00:4D6A  20 5D                   JR NZ, .check_john_tomb
     161   00:4D6C  3A 10 C0                LD A, (SHOWING_MIKE_DIALOG)
     162   00:4D6F  FE 01                   CP 1
     163   00:4D71  CA 67 4E                JP Z, .animate_ghost
     164   00:4D74  FD 21 10 40             LD IY, mike_tomb_strings
     165   00:4D78  CD DF 44                CALL print_strings_dialog_box
     166   00:4D7B  3E 01                   LD A,1
     167   00:4D7D  32 10 C0                LD (SHOWING_MIKE_DIALOG), A
     168   00:4D80  FD 21 00 C0             LD IY, COPY01
     169   00:4D84  FD 36 00 00             LD (IY), 0      ; SXL
     170   00:4D88  FD 36 01 00             LD (IY+1), 0      ; SXH - 0-1
     171   00:4D8C  FD 36 02 00             LD (IY+2), 0      ; SYL
     172   00:4D90  FD 36 03 01             LD (IY+3), 1      ; SYH - Page 1
     173   00:4D94                      
     174   00:4D94  FD 36 04 70             LD (IY+4), 112     ; DXL
     175   00:4D98  FD 36 05 00             LD (IY+5), 0      ; DXH
     176   00:4D9C  FD 36 06 00             LD (IY+6), 0      ; DYL
     177   00:4DA0  FD 36 07 00             LD (IY+7), 0      ; DYH - Page 0
     178   00:4DA4                      
     179   00:4DA4  FD 36 08 20             LD (IY+8), 32      ; NXL
     180   00:4DA8  FD 36 09 00             LD (IY+9), 0       ; NXH
     181   00:4DAC  FD 36 0A 10             LD (IY+10), 16      ; NYL
     182   00:4DB0  FD 36 0B 00             LD (IY+11), 0      ; NYH
     183   00:4DB4                      
     184   00:4DB4  FD 36 0C 00             LD (IY+12), 0      ; ARG
     185   00:4DB8  FD 36 0D 00             LD (IY+13), 0      ; CLR
     186   00:4DBC  FD 36 0E D0             LD (IY+14), $D0      ; CMD
     187   00:4DC0                          
     188   00:4DC0  21 00 C0                LD HL, COPY01
     189   00:4DC3  CD EB 45                CALL VDPCMD
     190   00:4DC6                      
     191   00:4DC6  C3 67 4E                JP .animate_ghost
     192   00:4DC9                      
     193   00:4DC9                      .check_john_tomb:
     194   00:4DC9  FE 29                   CP JOHN_TOMB_STG1_X
     195   00:4DCB  20 17                   jr nz, .check_gus_tomb
     196   00:4DCD  3A 11 C0                LD A, (SHOWING_JOHN_DIALOG)
     197   00:4DD0  FE 01                   CP 1
     198   00:4DD2  CA 67 4E                JP Z, .animate_ghost
     199   00:4DD5  FD 21 38 40             LD IY, john_tomb_strings
     200   00:4DD9  CD DF 44                CALL print_strings_dialog_box
     201   00:4DDC  3E 01                   LD A,1
     202   00:4DDE  32 11 C0                LD (SHOWING_JOHN_DIALOG), A
     203   00:4DE1  C3 67 4E                JP .animate_ghost
     204   00:4DE4                      
     205   00:4DE4                      .check_gus_tomb:
     206   00:4DE4  FE 49                   CP GUS_TOMB_STG1_X
     207   00:4DE6  20 1D                   jr nz, .check_skull_hint
     208   00:4DE8  3A 12 C0                LD A, (SHOWING_GUS_DIALOG)
     209   00:4DEB  FE 01                   CP 1
     210   00:4DED  CA 67 4E                JP Z, .animate_ghost
     211   00:4DF0  DD 7E 00                LD A, (ix)
     212   00:4DF3  FE 78                   CP GUS_TOMB_STG1_Y
     213   00:4DF5  38 70                   jr c, .animate_ghost
     214   00:4DF7  FD 21 5F 40             LD IY, gus_tomb_strings
     215   00:4DFB  CD DF 44                CALL print_strings_dialog_box
     216   00:4DFE  3E 01                   LD A,1
     217   00:4E00  32 12 C0                LD (SHOWING_GUS_DIALOG), A
     218   00:4E03  18 62                   JR .animate_ghost
     219   00:4E05                      
     220   00:4E05                      .check_skull_hint:
     221   00:4E05  FE 69                   CP SKULL_TOMB_STG1_X
     222   00:4E07  20 20                   jr nz, .check_mike_dialog_box
     223   00:4E09                              
     224   00:4E09  DD 7E 00                LD A, (ix)
     225   00:4E0C  FE 5A                   CP SKULL_TOMB_STG1_Y1
     226   00:4E0E  38 19                   jr c, .check_mike_dialog_box
     227   00:4E10  FE 64                   CP SKULL_TOMB_STG1_Y2
     228   00:4E12  30 15                   jr nc, .check_mike_dialog_box
     229   00:4E14                      
     230   00:4E14  3A 0F C0                LD A, (SHOWING_SKULL_STG1_DIALOG)
     231   00:4E17  FE 01                   CP 1
     232   00:4E19  28 4C                   JR Z, .animate_ghost
     233   00:4E1B  FD 21 87 40             LD IY, stg1_skull_strings
     234   00:4E1F  CD DF 44                CALL print_strings_dialog_box
     235   00:4E22  3E 01                   LD A,1
     236   00:4E24  32 0F C0                LD (SHOWING_SKULL_STG1_DIALOG), A
     237   00:4E27  18 3E                   JR .animate_ghost
     238   00:4E29                      
     239   00:4E29                      .check_mike_dialog_box
     240   00:4E29  3A 10 C0                LD A, (SHOWING_MIKE_DIALOG)
     241   00:4E2C  FE 01                   CP 1
     242   00:4E2E  20 09                   JR nz, .check_gus_dialog
     243   00:4E30  CD 77 45                CALL CLEAR_DIALOG_BOX
     244   00:4E33  AF                      XOR A
     245   00:4E34  32 10 C0                LD (SHOWING_MIKE_DIALOG), A
     246   00:4E37  18 2E                   JR .animate_ghost
     247   00:4E39                      
     248   00:4E39                      .check_gus_dialog
     249   00:4E39  3A 12 C0                LD A, (SHOWING_GUS_DIALOG)
     250   00:4E3C  FE 01                   CP 1
     251   00:4E3E  20 09                   JR nz, .check_john_dialog
     252   00:4E40  CD 77 45                CALL CLEAR_DIALOG_BOX
     253   00:4E43  AF                      XOR A
     254   00:4E44  32 12 C0                LD (SHOWING_GUS_DIALOG), A
     255   00:4E47  18 1E                   JR .animate_ghost
     256   00:4E49                      
     257   00:4E49                      .check_john_dialog
     258   00:4E49  3A 11 C0                LD A, (SHOWING_JOHN_DIALOG)
     259   00:4E4C  FE 01                   CP 1
     260   00:4E4E  20 09                   JR nz, .check_skull_dialog
     261   00:4E50  CD 77 45                CALL CLEAR_DIALOG_BOX
     262   00:4E53  AF                      XOR A
     263   00:4E54  32 11 C0                LD (SHOWING_JOHN_DIALOG), A
     264   00:4E57  18 0E                   JR .animate_ghost
     265   00:4E59                      
     266   00:4E59                      .check_skull_dialog
     267   00:4E59  3A 0F C0                LD A, (SHOWING_SKULL_STG1_DIALOG)
     268   00:4E5C  FE 01                   CP 1
     269   00:4E5E  20 07                   JR nz, .animate_ghost
     270   00:4E60  CD 77 45                CALL CLEAR_DIALOG_BOX
     271   00:4E63  AF                      XOR A
     272   00:4E64  32 0F C0                LD (SHOWING_SKULL_STG1_DIALOG), A
     273   00:4E67                      
     274   00:4E67                      .animate_ghost    
     275   00:4E67  3A 1E C0                LD A,(CHAR_GHOST_DEAD)
     276   00:4E6A  FE 01                   CP $01
     277   00:4E6C  CA E0 4E                JP Z,.continue
     278   00:4E6F  DD 7E 11                LD A, (ix+SPR_GHOST_STG1+1)          ;cargamos la X del Fantasma
     279   00:4E72  2A 1C C0            	LD HL, (CHAR_SPEED_X_GHOST)
     280   00:4E75  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     281   00:4E76                          
     282   00:4E76  DD 77 11            	LD (ix+SPR_GHOST_STG1+1), A
     283   00:4E79  DD 77 15                LD (ix+SPR_GHOST_STG1+5), A
     284   00:4E7C  FE 50                   CP $50
     285   00:4E7E  CA 89 4E                JP Z,.CHANGE_DIR_RIGHT
     286   00:4E81  FE AF                   CP $AF
     287   00:4E83  CA 96 4E                JP Z,.CHANGE_DIR_LEFT
     288   00:4E86                          		
     289   00:4E86  C3 9F 4E                JP .check_pattern
     290   00:4E89                      
     291   00:4E89                      .CHANGE_DIR_RIGHT:
     292   00:4E89  3E 01                   LD A, MOV_SPEED_GHOST
     293   00:4E8B  32 1C C0            	LD (CHAR_SPEED_X_GHOST), A
     294   00:4E8E  3E FF                   LD A,$FF
     295   00:4E90  32 21 C0                LD (CHAR_DIR_GHOST1),A
     296   00:4E93  C3 9F 4E                JP .check_pattern
     297   00:4E96                      
     298   00:4E96                      .CHANGE_DIR_LEFT:
     299   00:4E96  3E FF                   LD A, -MOV_SPEED_GHOST
     300   00:4E98  32 1C C0            	LD (CHAR_SPEED_X_GHOST), A
     301   00:4E9B  AF                      XOR A   ; Pone A a 0
     302   00:4E9C  32 21 C0                LD (CHAR_DIR_GHOST1),A
     303   00:4E9F                      
     304   00:4E9F                      .check_pattern:
     305   00:4E9F  3A 21 C0                LD A,(CHAR_DIR_GHOST1)
     306   00:4EA2  FE FF                   CP $FF
     307   00:4EA4  CA C5 4E                JP Z,.check_pattern_RIGHT
     308   00:4EA7  DD 7E 12                LD A, (ix+SPR_GHOST_STG1+2)       ; Cargamos el patrón y lo cambiamos
     309   00:4EAA  FE 1C                   CP SPR_GHOST_STG1_PTRN_L1
     310   00:4EAC  CA BA 4E                jp z,.change_pattern_L
     311   00:4EAF  DD 36 12 1C             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_L1
     312   00:4EB3  DD 36 16 20             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_L1+4
     313   00:4EB7  C3 E0 4E                jp .continue
     314   00:4EBA                      .change_pattern_L:
     315   00:4EBA  DD 36 12 24             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_L2
     316   00:4EBE  DD 36 16 28             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_L2+4
     317   00:4EC2  C3 E0 4E                jp .continue
     318   00:4EC5                      
     319   00:4EC5                      .check_pattern_RIGHT
     320   00:4EC5  DD 7E 12                LD A, (ix+SPR_GHOST_STG1+2)       ; Cargamos el patrón y lo cambiamos
     321   00:4EC8  FE 2C                   CP SPR_GHOST_STG1_PTRN_R1
     322   00:4ECA  CA D8 4E                jp z,.change_pattern_R
     323   00:4ECD  DD 36 12 2C             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_R1
     324   00:4ED1  DD 36 16 30             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_R1+4
     325   00:4ED5  C3 E0 4E                jp .continue
     326   00:4ED8                      .change_pattern_R:
     327   00:4ED8  DD 36 12 34             LD (ix+SPR_GHOST_STG1+2),SPR_GHOST_STG1_PTRN_R2
     328   00:4EDC  DD 36 16 38             LD (ix+SPR_GHOST_STG1+6),SPR_GHOST_STG1_PTRN_R2+4
     329   00:4EE0                      
     330   00:4EE0                      .continue:    
     331   00:4EE0  CD 74 44                CALL MOVE_SHOOT
     332   00:4EE3                      .CHECK_GHOST:
     333   00:4EE3                          ; Comprobamos si hay colision con el fantasma
     334   00:4EE3  3A 1E C0                LD A,(CHAR_GHOST_DEAD)  ; si está muerto,no lo miramos
     335   00:4EE6  FE 01                   CP $01
     336   00:4EE8  CA 0C 4F                JP Z,.check_KB
     337   00:4EEB                      
     338   00:4EEB  DD 46 0C                LD B,(ix+SPR_SHOOT_P1)         ; Y del disparo
     339   00:4EEE  DD 4E 0D                LD C,(ix+SPR_SHOOT_P1+1)         ; X del disparo
     340   00:4EF1  DD 56 10                LD D,(ix+SPR_GHOST_STG1)         ; Y del fantasma 
     341   00:4EF4  DD 5E 11                LD E,(ix+SPR_GHOST_STG1+1)         ; X del fantasma
     342   00:4EF7  CD B0 40                call check_spr_collision
     343   00:4EFA  FE 01                   CP 1
     344   00:4EFC  C2 0C 4F                JP NZ,.check_KB
     345   00:4EFF                      
     346   00:4EFF                      .KILL_GHOST:
     347   00:4EFF  3E 01                   LD A,1
     348   00:4F01  32 1E C0                LD (CHAR_GHOST_DEAD),A
     349   00:4F04  DD 36 10 D9             LD (ix+SPR_GHOST_STG1),217    
     350   00:4F08  DD 36 14 D9             LD (ix+SPR_GHOST_STG1+4),217    
     351   00:4F0C                      
     352   00:4F0C                      .check_KB:
     353   00:4F0C  76                      halt    
     354   00:4F0D                      	
     355   00:4F0D  F3                  	di       
     356   00:4F0E  DD E5                   PUSH IX
     357   00:4F10                      	;call	PT3_ROUT			;envia datos a al PSG 	   
     358   00:4F10                      	;call	PT3_PLAY			;prepara el siguiente trocito de cancion que sera enviada mas tarde al PSG
     359   00:4F10  DD E1               	POP IX
     360   00:4F12  FB                      ei
     361   00:4F13                      
     362   00:4F13  3E 08                   ld a, 8
     363   00:4F15  CD 41 01            	call SNSMAT   
     364   00:4F18                          
     365   00:4F18  4F                      LD C,A    
     366   00:4F19                          
     367   00:4F19  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es RIGHT?
     368   00:4F1B  CC BC 42                call z, move_right
     369   00:4F1E                          
     370   00:4F1E  CB 61                   BIT KB_LEFT, C			; La tecla presionada es LEFT?
     371   00:4F20  CC 1B 43                call z, move_left
     372   00:4F23                      
     373   00:4F23  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     374   00:4F25  CC 47 42                call z, move_up
     375   00:4F28                      
     376   00:4F28  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     377   00:4F2A  CC 81 42                call z, move_down
     378   00:4F2D                      
     379   00:4F2D                      no_arrows:
     380   00:4F2D  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     381   00:4F2F  CC 35 4F                call z,SHOOT_MAIN_CHAR
     382   00:4F32                      
     383   00:4F32                          ;BIT KB_DEL, C			; La tecla presionada es DEL    
     384   00:4F32                          ;ret z
     385   00:4F32                          
     386   00:4F32  C3 5A 4D                jp MAIN_LOOP
     387   00:4F35                      
     388   00:4F35                      SHOOT_MAIN_CHAR:    
     389   00:4F35  3A 25 C0                LD A, (CHAR_MAIN_SHOOT)
     390   00:4F38  FE 01                   CP $01                  ; Si ya está disparando esperamos a que termine
     391   00:4F3A  C8                      RET Z;,MAIN_LOOP
     392   00:4F3B  FE 02                   CP $02                  ; Si ya está disparando esperamos a que termine
     393   00:4F3D  C8                      RET Z;,MAIN_LOOP
     394   00:4F3E  FE 03                   CP $03                  ; Si ya está disparando esperamos a que termine
     395   00:4F40  C8                      RET Z;,MAIN_LOOP
     396   00:4F41  FE 04                   CP $04                  ; Si ya está disparando esperamos a que termine
     397   00:4F43  C8                      RET Z;,MAIN_LOOP
     398   00:4F44                      
     399   00:4F44  DD 36 0E 18             ld (ix+SPR_SHOOT_P1+2), SPR_SHOOT_P1_PTRN     ; Sprite Disparo
     400   00:4F48                      
     401   00:4F48  DD 7E 00                LD A, (ix)          
     402   00:4F4B  DD 77 0C                ld (ix+SPR_SHOOT_P1), A       ; Asignamos la Y del personaje    
     403   00:4F4E                      
     404   00:4F4E  3A 23 C0                LD A, (CHAR_DIR_MAIN)
     405   00:4F51  FE 03                   CP $03
     406   00:4F53  CA 6F 4F                JP Z,.SHOOT_RIGHT
     407   00:4F56  FE 00                   CP $00
     408   00:4F58  CA 7E 4F                JP Z,.SHOOT_UP
     409   00:4F5B  FE 01                   CP $01
     410   00:4F5D  CA 91 4F                JP Z,.SHOOT_DOWN
     411   00:4F60                          ; SHOOT LEFT
     412   00:4F60  3E 01                   LD A,$01                ; SHOOT LEFT
     413   00:4F62  32 25 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando izquierda
     414   00:4F65  DD 7E 01                LD A, (ix+1)			;cargamos la X - Si no es derecha, debe ser izquierda
     415   00:4F68  21 F4 FF            	LD HL, -12
     416   00:4F6B  85                  	ADD L
     417   00:4F6C                          
     418   00:4F6C  C3 A1 4F                JP .CONTINUE
     419   00:4F6F                      
     420   00:4F6F                      .SHOOT_RIGHT:    
     421   00:4F6F  3E 02                   LD A,$02
     422   00:4F71  32 25 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando derecha
     423   00:4F74                          
     424   00:4F74  DD 7E 01                LD A, (ix+1)			;cargamos la X
     425   00:4F77  21 0C 00            	LD HL, 12
     426   00:4F7A  85                  	ADD L
     427   00:4F7B  C3 A1 4F                JP .CONTINUE
     428   00:4F7E                      
     429   00:4F7E                      .SHOOT_UP:
     430   00:4F7E  3E 03                   LD A,$03
     431   00:4F80  32 25 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando arriba
     432   00:4F83                          
     433   00:4F83                          ; Sumamos el desplazamiento a la Y
     434   00:4F83  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)
     435   00:4F86  D6 10                   SUB 16
     436   00:4F88  DD 77 0C                LD (ix+SPR_SHOOT_P1), A    
     437   00:4F8B                          ;LD (ix+17), D
     438   00:4F8B  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     439   00:4F8E  C3 A1 4F                JP .CONTINUE
     440   00:4F91                      
     441   00:4F91                      .SHOOT_DOWN
     442   00:4F91  3E 04               	LD A,$04
     443   00:4F93  32 25 C0                LD (CHAR_MAIN_SHOOT),A   ; Activo el estado disparando abajo
     444   00:4F96                          
     445   00:4F96                          ; Sumamos el desplazamiento a la Y
     446   00:4F96  DD 7E 0C                LD A, (ix+SPR_SHOOT_P1)
     447   00:4F99  C6 10                   ADD 16
     448   00:4F9B  DD 77 0C                LD (ix+SPR_SHOOT_P1), A    
     449   00:4F9E                          ;LD (ix+17), D
     450   00:4F9E  DD 7E 01                LD A, (ix+1)			;cargamos la X    
     451   00:4FA1                      
     452   00:4FA1                      .CONTINUE:
     453   00:4FA1                          ;ld (ix+16), B       ; Asignamos la Y del personaje
     454   00:4FA1  DD 77 0D                ld (ix+SPR_SHOOT_P1+1), A       ; Asignamos la X del personaje + el desplazamiento        
     455   00:4FA4                          ;jp MAIN_LOOP
     456   00:4FA4  C9                      ret
     457   00:4FA5                      
     458   00:4FA5                      STAGE2:
     459   00:4FA5  CD 1D 46                CALL DISSCR
     460   00:4FA8  21 00 80                LD HL, CEMENTER2
     461   00:4FAB  22 B4 C0                LD (BITMAP), HL
     462   00:4FAE  06 0D                   LD B, :CEMENTER2
     463   00:4FB0                      
     464   00:4FB0  CD 47 41                call load_screen
     465   00:4FB3  21 2B 6A                LD HL, mapa2
     466   00:4FB6  22 B2 C0                LD (MAPA), HL
     467   00:4FB9                          
     468   00:4FB9                          ; Ponemos el P1 por encima del marco
     469   00:4FB9  DD 36 00 A1             LD (ix), 161      ; mask 0
     470   00:4FBD  DD 36 04 A1             LD (ix+4), 161    ; mask 1
     471   00:4FC1  DD 36 08 A1             LD (ix+8), 161    ; mask 2
     472   00:4FC5                          
     473   00:4FC5  DD 36 10 D9             LD (ix+SPR_GHOST_STG1),217  ; ocultamos el fantasma
     474   00:4FC9  DD 36 14 D9             LD (ix+SPR_GHOST_STG1+4),217  ; ocultamos el fantasma
     475   00:4FCD                          
     476   00:4FCD  CD D1 41                CALL DUMP_SPR_ALL
     477   00:4FD0  CD 1B 42                CALL DUMP_SPR_P1
     478   00:4FD3                          
     479   00:4FD3                          ; Esqueleto
     480   00:4FD3  DD 36 18 10             LD (ix+SPR_GHOST_STG2), 10h
     481   00:4FD7  DD 36 19 10             LD (ix+SPR_GHOST_STG2+1), 10h
     482   00:4FDB  DD 36 1A 3C             LD (ix+SPR_GHOST_STG2+2), SPR_GHOST_STG2_PTRN_L1
     483   00:4FDF                      
     484   00:4FDF  DD 36 1C 10             LD (ix+SPR_GHOST_STG2+4), 10h
     485   00:4FE3  DD 36 1D 10             LD (ix+SPR_GHOST_STG2+5), 10h
     486   00:4FE7  DD 36 1E 40             LD (ix+SPR_GHOST_STG2+6), SPR_GHOST_STG2_PTRN_L1+4
     487   00:4FEB                      
     488   00:4FEB  AF                      XOR A
     489   00:4FEC  32 1F C0                LD (CHAR_GHOST_DEAD_STG2), A
     490   00:4FEF  32 20 C0                LD (CHAR_MIN_STEP_STG2), A
     491   00:4FF2  3E FF                   LD A, $FF
     492   00:4FF4  32 22 C0                LD (CHAR_DIR_GHOST_STG2), A
     493   00:4FF7  3E 01                   LD A, MOV_SPEED_GHOST
     494   00:4FF9  32 1D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     495   00:4FFC                      
     496   00:4FFC  CD 16 46                CALL ENASCR
     497   00:4FFF                          
     498   00:4FFF                      MAIN_LOOP2:
     499   00:4FFF                          ;halt    
     500   00:4FFF                         
     501   00:4FFF  DD 7E 00                LD A, (ix)    
     502   00:5002  FE A2                   CP 162      ; Miramos si la Y es 160 para pasar a stg1
     503   00:5004  C2 2E 50                JP NZ, .no_screen_change
     504   00:5007                          ; Ponemos el SP1 al principio de la pantalla 1
     505   00:5007  DD 36 00 01             LD (ix), 1          ; SP1 - Y = 1
     506   00:500B  DD 36 04 01             LD (ix+4), 1
     507   00:500F  DD 36 08 01             LD (ix+8), 1
     508   00:5013                      
     509   00:5013  3A 1E C0                LD A, (CHAR_GHOST_DEAD)
     510   00:5016  FE 01                   CP $01
     511   00:5018  CA 23 50                JP Z, .GHOST_DEAD
     512   00:501B  DD 36 10 0F             ld (ix+SPR_GHOST_STG1), $0F      ; Sprite 1 - Ghost
     513   00:501F  DD 36 14 0F             ld (ix+SPR_GHOST_STG1+4), $0F      ; Sprite 1 - Ghost
     514   00:5023                      .GHOST_DEAD:
     515   00:5023  DD 36 18 D9             LD (ix+SPR_GHOST_STG2),217  ; ocultamos el esqueleto
     516   00:5027  DD 36 1C D9             LD (ix+SPR_GHOST_STG2+4),217  ; ocultamos el esqueleto
     517   00:502B  CD 23 4D                CALL STAGE1
     518   00:502E                      
     519   00:502E                      .no_screen_change:
     520   00:502E                      
     521   00:502E  CD 00 42                call DUMP_SPR_ATTS    
     522   00:5031                          ; Movemos el esqueleto
     523   00:5031  3A 1F C0                LD A,(CHAR_GHOST_DEAD_STG2)
     524   00:5034  FE 01                   CP $01
     525   00:5036  CA BB 50                JP Z,.continue
     526   00:5039  DD 7E 19                LD A, (ix+SPR_GHOST_STG2+1)          ;cargamos la X del Esqueleto
     527   00:503C  2A 1D C0            	LD HL, (CHAR_SPEED_X_GHOST_STG2)
     528   00:503F  85                  	ADD L					; Actualizamos la posicion en base a la velocidad
     529   00:5040                          
     530   00:5040  DD 77 19            	LD (ix+SPR_GHOST_STG2+1), A	
     531   00:5043  DD 77 1D                LD (ix+SPR_GHOST_STG2+5), A
     532   00:5046  FE 16                   CP $16
     533   00:5048  CA 60 50                JP Z,.CHANGE_DIR_RIGHT
     534   00:504B  FE B9                   CP $B9
     535   00:504D  CA 6D 50                JP Z,.CHANGE_DIR_LEFT
     536   00:5050                      
     537   00:5050  3A 20 C0                LD A, (CHAR_MIN_STEP_STG2)		
     538   00:5053  FE 06                   CP MAX_CHAR_STEPS_STG2
     539   00:5055  CA 76 50                JP Z,.check_pattern
     540   00:5058  C6 01                   ADD 1
     541   00:505A  32 20 C0                LD (CHAR_MIN_STEP_STG2), A
     542   00:505D  C3 BB 50                JP .continue
     543   00:5060                      
     544   00:5060                      .CHANGE_DIR_RIGHT:
     545   00:5060  3E 01                   LD A, MOV_SPEED_GHOST
     546   00:5062  32 1D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     547   00:5065  3E FF                   LD A,$FF
     548   00:5067  32 22 C0                LD (CHAR_DIR_GHOST_STG2),A
     549   00:506A  C3 76 50                JP .check_pattern
     550   00:506D                      
     551   00:506D                      .CHANGE_DIR_LEFT:
     552   00:506D  3E FF                   LD A, -MOV_SPEED_GHOST
     553   00:506F  32 1D C0            	LD (CHAR_SPEED_X_GHOST_STG2), A
     554   00:5072  AF                      XOR A   ; Pone A a 0
     555   00:5073  32 22 C0                LD (CHAR_DIR_GHOST_STG2),A
     556   00:5076                      
     557   00:5076                      .check_pattern:
     558   00:5076  AF                      XOR A
     559   00:5077  32 20 C0                LD (CHAR_MIN_STEP_STG2), A
     560   00:507A  3A 22 C0                LD A,(CHAR_DIR_GHOST_STG2)
     561   00:507D  FE FF                   CP $FF
     562   00:507F  CA A0 50                JP Z,.check_pattern_RIGHT
     563   00:5082  DD 7E 1A                LD A, (ix+SPR_GHOST_STG2+2)       ; Cargamos el patrón y lo cambiamos
     564   00:5085  FE 3C                   CP SPR_GHOST_STG2_PTRN_L1
     565   00:5087  CA 95 50                jp z,.change_pattern_L
     566   00:508A  DD 36 1A 3C             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_L1
     567   00:508E  DD 36 1E 40             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_L1+4
     568   00:5092  C3 BB 50                jp .continue
     569   00:5095                      .change_pattern_L:
     570   00:5095  DD 36 1A 44             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_L2
     571   00:5099  DD 36 1E 48             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_L2+4
     572   00:509D  C3 BB 50                jp .continue
     573   00:50A0                      
     574   00:50A0                      .check_pattern_RIGHT
     575   00:50A0  DD 7E 1A                LD A, (ix+SPR_GHOST_STG2+2)       ; Cargamos el patrón y lo cambiamos
     576   00:50A3  FE 4C                   CP SPR_GHOST_STG2_PTRN_R1
     577   00:50A5  CA B3 50                jp z,.change_pattern_R
     578   00:50A8  DD 36 1A 4C             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_R1
     579   00:50AC  DD 36 1E 50             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_R1+4
     580   00:50B0  C3 BB 50                jp .continue
     581   00:50B3                      .change_pattern_R:
     582   00:50B3  DD 36 1A 54             LD (ix+SPR_GHOST_STG2+2),SPR_GHOST_STG2_PTRN_R2
     583   00:50B7  DD 36 1E 58             LD (ix+SPR_GHOST_STG2+6),SPR_GHOST_STG2_PTRN_R2+4
     584   00:50BB                      
     585   00:50BB                      .continue:
     586   00:50BB  CD 74 44                CALL MOVE_SHOOT    
     587   00:50BE                      
     588   00:50BE  3E 08                   ld a, 8
     589   00:50C0  CD 41 01            	call SNSMAT   
     590   00:50C3  4F                      LD C,A    
     591   00:50C4                              
     592   00:50C4  CB 79                   BIT KB_RIGHT, C			; La tecla presionada es RIGHT?
     593   00:50C6  CC BC 42                call z, move_right
     594   00:50C9                          
     595   00:50C9  CB 61                   BIT KB_LEFT, C			; La tecla presionada es LEFT?
     596   00:50CB  CC 1B 43                call z, move_left
     597   00:50CE                      
     598   00:50CE  CB 69                   BIT KB_UP, C			; La tecla presionada es UP?
     599   00:50D0  CC 47 42                call z, move_up
     600   00:50D3                      
     601   00:50D3  CB 71                   BIT KB_DOWN, C			; La tecla presionada es DOWN?
     602   00:50D5  CC 81 42                call z, move_down
     603   00:50D8                      
     604   00:50D8  CB 41                   BIT KB_SPACE, C			; La tecla presionada es SPACE
     605   00:50DA  CC 35 4F                call z,SHOOT_MAIN_CHAR
     606   00:50DD                      
     607   00:50DD  CB 59                   BIT KB_DEL, C			; La tecla presionada es DEL    
     608   00:50DF  C8                      ret z
     609   00:50E0                      
     610   00:50E0  76                      halt
     611   00:50E1                      	;di       
     612   00:50E1                          ;PUSH IX
     613   00:50E1                      	;call	PT3_ROUT			;envia datos a al PSG 	   
     614   00:50E1                      	;call	PT3_PLAY			;prepara el siguiente trocito de cancion que sera enviada mas tarde al PSG
     615   00:50E1                      	;POP IX
     616   00:50E1                          ;ei
     617   00:50E1                      
     618   00:50E1  C3 FF 4F                jp MAIN_LOOP2
     619   00:50E4                      
     620   00:50E4                      
     621   00:50E4                      SONG:
     622   00:50E4                      	;incbin "musica_sin_cabacera.pt3"
     623   00:50E4  (0EE7)                  incbin "sfx\test.pt3"
     624   00:5FCB                      include "include\BTH_data.asm"
       1.  00:5FCB                      SPRITE_P1_UP:
       2.  00:5FCB                          ; UP 1        
       3.  00:5FCB                          ; mask 0
       4.  00:5FCB                          DB $07,$0F,$05,$1F,$1F,$3F,$3F,$7F
       4.  00:5FCB  07 0F 05 1F 1F 3F 3F 7F 
       5.  00:5FD3                          DB $00,$4F,$70,$38,$0C,$0E,$07,$04
       5.  00:5FD3  00 4F 70 38 0C 0E 07 04 
       6.  00:5FDB                          DB $E0,$F0,$A0,$F8,$F8,$F8,$FC,$FE
       6.  00:5FDB  E0 F0 A0 F8 F8 F8 FC FE 
       7.  00:5FE3                          DB $06,$F2,$1E,$3C,$30,$70,$C0,$00
       7.  00:5FE3  06 F2 1E 3C 30 70 C0 00 
       8.  00:5FEB                          ; mask 1
       9.  00:5FEB                          DB $00,$00,$18,$00,$1F,$00,$00,$00
       9.  00:5FEB  00 00 18 00 1F 00 00 00 
      10.  00:5FF3                          DB $7F,$50,$4F,$3F,$0F,$0F,$07,$02
      10.  00:5FF3  7F 50 4F 3F 0F 0F 07 02 
      11.  00:5FFB                          DB $00,$00,$10,$00,$FC,$00,$00,$00
      11.  00:5FFB  00 00 10 00 FC 00 00 00 
      12.  00:6003                          DB $F2,$0E,$FE,$FC,$F0,$F0,$A0,$00
      12.  00:6003  F2 0E FE FC F0 F0 A0 00 
      13.  00:600B                          ; mask 2
      14.  00:600B                          DB $00,$00,$1A,$00,$00,$00,$00,$00
      14.  00:600B  00 00 1A 00 00 00 00 00 
      15.  00:6013                          DB $7F,$60,$00,$00,$00,$00,$07,$00
      15.  00:6013  7F 60 00 00 00 00 07 00 
      16.  00:601B                          DB $00,$00,$50,$00,$00,$00,$00,$00
      16.  00:601B  00 00 50 00 00 00 00 00 
      17.  00:6023                          DB $FA,$0E,$00,$00,$00,$00,$80,$00
      17.  00:6023  FA 0E 00 00 00 00 80 00 
      18.  00:602B                          
      19.  00:602B                          ; UP 2
      20.  00:602B                          ; mask 0
      21.  00:602B                          DB $07,$0F,$05,$1F,$1F,$3F,$3F,$7F
      21.  00:602B  07 0F 05 1F 1F 3F 3F 7F 
      22.  00:6033                          DB $10,$4F,$70,$38,$0C,$0E,$05,$00
      22.  00:6033  10 4F 70 38 0C 0E 05 00 
      23.  00:603B                          DB $E0,$F0,$A0,$F8,$F8,$F8,$FC,$FE
      23.  00:603B  E0 F0 A0 F8 F8 F8 FC FE 
      24.  00:6043                          DB $02,$F2,$1E,$3C,$30,$70,$E0,$40
      24.  00:6043  02 F2 1E 3C 30 70 E0 40 
      25.  00:604B                          ; mask 1
      26.  00:604B                          DB $00,$00,$18,$00,$1F,$00,$00,$00
      26.  00:604B  00 00 18 00 1F 00 00 00 
      27.  00:6053                          DB $4F,$70,$7F,$3F,$0F,$0F,$03,$00
      27.  00:6053  4F 70 7F 3F 0F 0F 03 00 
      28.  00:605B                          DB $00,$00,$10,$00,$FC,$00,$00,$00
      28.  00:605B  00 00 10 00 FC 00 00 00 
      29.  00:6063                          DB $FE,$06,$F2,$FC,$F0,$F0,$E0,$20
      29.  00:6063  FE 06 F2 FC F0 F0 E0 20 
      30.  00:606B                          ; mask 2
      31.  00:606B                          DB $00,$00,$1A,$00,$00,$00,$00,$00
      31.  00:606B  00 00 1A 00 00 00 00 00 
      32.  00:6073                          DB $6F,$70,$00,$00,$00,$00,$01,$00
      32.  00:6073  6F 70 00 00 00 00 01 00 
      33.  00:607B                          DB $00,$00,$50,$00,$00,$00,$00,$00
      33.  00:607B  00 00 50 00 00 00 00 00 
      34.  00:6083                          DB $FE,$0A,$00,$00,$00,$00,$E0,$00
      34.  00:6083  FE 0A 00 00 00 00 E0 00 
      35.  00:608B                          
      36.  00:608B                      SPRITE_P1_DOWN:
      37.  00:608B                          ; DOWN 1 - 00h
      38.  00:608B                          ; mask 0
      39.  00:608B                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
      39.  00:608B  07 0F 04 06 0F 07 1F 3F 
      40.  00:6093                          DB $4C,$4E,$4E,$3C,$0C,$0E,$0F,$08
      40.  00:6093  4C 4E 4E 3C 0C 0E 0F 08 
      41.  00:609B                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
      41.  00:609B  E0 F0 20 20 70 E0 F8 FC 
      42.  00:60A3                          DB $32,$72,$7E,$7C,$70,$F0,$C0,$00    
      42.  00:60A3  32 72 7E 7C 70 F0 C0 00 
      43.  00:60AB                          ; mask 1
      44.  00:60AB                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
      44.  00:60AB  00 00 19 19 10 3A 3A 78 
      45.  00:60B3                          DB $5F,$5E,$7E,$3C,$0C,$0E,$0F,$04
      45.  00:60B3  5F 5E 7E 3C 0C 0E 0F 04 
      46.  00:60BB                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
      46.  00:60BB  00 00 90 D8 88 58 5C 1E 
      47.  00:60C3                          DB $F6,$FE,$FE,$3C,$30,$70,$A0,$00    
      47.  00:60C3  F6 FE FE 3C 30 70 A0 00 
      48.  00:60CB                          ; mask 2
      49.  00:60CB                          DB $00,$00,$1B,$00,$10,$00,$00,$00
      49.  00:60CB  00 00 1B 00 10 00 00 00 
      50.  00:60D3                          DB $6F,$6F,$7F,$3F,$0F,$0F,$0F,$00
      50.  00:60D3  6F 6F 7F 3F 0F 0F 0F 00 
      51.  00:60DB                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
      51.  00:60DB  00 00 D0 00 8C 00 00 00 
      52.  00:60E3                          DB $FA,$7E,$7E,$BC,$B0,$70,$80,$00
      52.  00:60E3  FA 7E 7E BC B0 70 80 00 
      53.  00:60EB                          
      54.  00:60EB                          ; DOWN 2
      55.  00:60EB                          ; mask 0 - 0Ch    
      56.  00:60EB                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
      56.  00:60EB  07 0F 04 06 0F 07 1F 3F 
      57.  00:60F3                          DB $4C,$4E,$7E,$3C,$0C,$0E,$05,$00
      57.  00:60F3  4C 4E 7E 3C 0C 0E 05 00 
      58.  00:60FB                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
      58.  00:60FB  E0 F0 20 20 70 E0 F8 FC 
      59.  00:6103                          DB $32,$72,$72,$7C,$70,$F0,$E0,$40    
      59.  00:6103  32 72 72 7C 70 F0 E0 40 
      60.  00:610B                          ; mask 1
      61.  00:610B                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
      61.  00:610B  00 00 19 19 10 3A 3A 78 
      62.  00:6113                          DB $5F,$7E,$7E,$3C,$0C,$0E,$03,$00
      62.  00:6113  5F 7E 7E 3C 0C 0E 03 00 
      63.  00:611B                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
      63.  00:611B  00 00 90 D8 88 58 5C 1E 
      64.  00:6123                          DB $F6,$F6,$FE,$3C,$30,$70,$E0,$20    
      64.  00:6123  F6 F6 FE 3C 30 70 E0 20 
      65.  00:612B                          ; mask 2
      66.  00:612B                          DB $00,$00,$1B,$00,$10,$00,$00,$00
      66.  00:612B  00 00 1B 00 10 00 00 00 
      67.  00:6133                          DB $6F,$7F,$7F,$3F,$0F,$0F,$01,$00
      67.  00:6133  6F 7F 7F 3F 0F 0F 01 00 
      68.  00:613B                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
      68.  00:613B  00 00 D0 00 8C 00 00 00 
      69.  00:6143                          DB $FA,$7A,$7E,$BC,$B0,$70,$E0,$00
      69.  00:6143  FA 7A 7E BC B0 70 E0 00 
      70.  00:614B                      
      71.  00:614B                      SPRITE_P1_LEFT:         
      72.  00:614B                          ; --- Slot 3
      73.  00:614B                          ; mask 0
      74.  00:614B                          DB $07,$0F,$02,$05,$07,$07,$0F,$0F
      74.  00:614B  07 0F 02 05 07 07 0F 0F 
      75.  00:6153                          DB $07,$03,$03,$03,$01,$03,$03,$04
      75.  00:6153  07 03 03 03 01 03 03 04 
      76.  00:615B                          DB $E0,$F0,$80,$00,$A0,$E0,$C0,$C0
      76.  00:615B  E0 F0 80 00 A0 E0 C0 C0 
      77.  00:6163                          DB $E0,$B0,$70,$F0,$F0,$F0,$C0,$00    
      77.  00:6163  E0 B0 70 F0 F0 F0 C0 00 
      78.  00:616B                          ; mask 1
      79.  00:616B                          DB $00,$00,$18,$1A,$08,$0A,$12,$10
      79.  00:616B  00 00 18 1A 08 0A 12 10 
      80.  00:6173                          DB $08,$03,$02,$02,$01,$03,$03,$03
      80.  00:6173  08 03 02 02 01 03 03 03 
      81.  00:617B                          DB $00,$00,$78,$F8,$5C,$1C,$7E,$7E
      81.  00:617B  00 00 78 F8 5C 1C 7E 7E 
      82.  00:6183                          DB $FE,$3E,$7E,$7C,$F8,$F8,$B0,$00
      82.  00:6183  FE 3E 7E 7C F8 F8 B0 00 
      83.  00:618B                          ; mask 2
      84.  00:618B                          DB $00,$00,$1D,$00,$28,$00,$00,$00
      84.  00:618B  00 00 1D 00 28 00 00 00 
      85.  00:6193                          DB $00,$07,$06,$06,$07,$07,$03,$00
      85.  00:6193  00 07 06 06 07 07 03 00 
      86.  00:619B                          DB $00,$00,$78,$00,$5C,$00,$00,$00
      86.  00:619B  00 00 78 00 5C 00 00 00 
      87.  00:61A3                          DB $00,$7E,$FE,$7C,$F8,$F8,$80,$00
      87.  00:61A3  00 7E FE 7C F8 F8 80 00 
      88.  00:61AB                          ; --- Slot 4
      89.  00:61AB                          ; mask 0
      90.  00:61AB                          DB $07,$0F,$02,$05,$07,$07,$0F,$0F
      90.  00:61AB  07 0F 02 05 07 07 0F 0F 
      91.  00:61B3                          DB $07,$03,$03,$03,$01,$03,$04,$00
      91.  00:61B3  07 03 03 03 01 03 04 00 
      92.  00:61BB                          DB $E0,$F0,$80,$00,$A0,$E0,$C0,$C0
      92.  00:61BB  E0 F0 80 00 A0 E0 C0 C0 
      93.  00:61C3                          DB $E0,$B0,$D0,$D0,$F0,$F0,$E0,$40
      93.  00:61C3  E0 B0 D0 D0 F0 F0 E0 40 
      94.  00:61CB                          ; mask 1
      95.  00:61CB                          DB $00,$00,$18,$1A,$08,$0A,$12,$10
      95.  00:61CB  00 00 18 1A 08 0A 12 10 
      96.  00:61D3                          DB $08,$03,$03,$03,$01,$03,$03,$00
      96.  00:61D3  08 03 03 03 01 03 03 00 
      97.  00:61DB                          DB $00,$00,$78,$F8,$5C,$1C,$7E,$7E
      97.  00:61DB  00 00 78 F8 5C 1C 7E 7E 
      98.  00:61E3                          DB $FE,$3E,$9E,$9C,$98,$F8,$E0,$30
      98.  00:61E3  FE 3E 9E 9C 98 F8 E0 30 
      99.  00:61EB                          ; mask 2
     100.  00:61EB                          DB $00,$00,$1D,$00,$28,$00,$00,$00
     100.  00:61EB  00 00 1D 00 28 00 00 00 
     101.  00:61F3                          DB $00,$07,$07,$07,$07,$07,$00,$00
     101.  00:61F3  00 07 07 07 07 07 00 00 
     102.  00:61FB                          DB $00,$00,$78,$00,$5C,$00,$00,$00
     102.  00:61FB  00 00 78 00 5C 00 00 00 
     103.  00:6203                          DB $00,$7E,$BE,$BC,$98,$F8,$E0,$00
     103.  00:6203  00 7E BE BC 98 F8 E0 00 
     104.  00:620B                      
     105.  00:620B                      SPRITE_P1_RIGHT:
     106.  00:620B                          ; --- Slot 0
     107.  00:620B                          ; mask 0
     108.  00:620B                          DB $07,$0F,$01,$00,$05,$07,$03,$03
     108.  00:620B  07 0F 01 00 05 07 03 03 
     109.  00:6213                          DB $07,$0D,$0E,$0F,$0F,$0F,$03,$00
     109.  00:6213  07 0D 0E 0F 0F 0F 03 00 
     110.  00:621B                          DB $E0,$F0,$40,$A0,$E0,$E0,$F0,$F0
     110.  00:621B  E0 F0 40 A0 E0 E0 F0 F0 
     111.  00:6223                          DB $E0,$C0,$C0,$C0,$80,$C0,$C0,$20
     111.  00:6223  E0 C0 C0 C0 80 C0 C0 20 
     112.  00:622B                          ; mask 1
     113.  00:622B                          DB $00,$00,$1E,$1F,$3A,$38,$7E,$7E
     113.  00:622B  00 00 1E 1F 3A 38 7E 7E 
     114.  00:6233                          DB $7F,$7C,$7E,$3E,$1F,$1F,$0D,$00
     114.  00:6233  7F 7C 7E 3E 1F 1F 0D 00 
     115.  00:623B                          DB $00,$00,$18,$58,$10,$50,$48,$08
     115.  00:623B  00 00 18 58 10 50 48 08 
     116.  00:6243                          DB $10,$C0,$40,$40,$80,$C0,$C0,$C0
     116.  00:6243  10 C0 40 40 80 C0 C0 C0 
     117.  00:624B                          ; mask 2
     118.  00:624B                          DB $00,$00,$1E,$00,$3A,$00,$00,$00
     118.  00:624B  00 00 1E 00 3A 00 00 00 
     119.  00:6253                          DB $00,$7E,$7F,$3E,$1F,$1F,$01,$00
     119.  00:6253  00 7E 7F 3E 1F 1F 01 00 
     120.  00:625B                          DB $00,$00,$B8,$00,$14,$00,$00,$00
     120.  00:625B  00 00 B8 00 14 00 00 00 
     121.  00:6263                          DB $00,$E0,$60,$60,$E0,$E0,$C0,$00
     121.  00:6263  00 E0 60 60 E0 E0 C0 00 
     122.  00:626B                          
     123.  00:626B                          ; --- Slot 2
     124.  00:626B                         ; mask 0
     125.  00:626B                          DB $07,$0F,$01,$00,$05,$07,$03,$03
     125.  00:626B  07 0F 01 00 05 07 03 03 
     126.  00:6273                          DB $07,$0D,$0B,$0B,$0F,$0F,$07,$02
     126.  00:6273  07 0D 0B 0B 0F 0F 07 02 
     127.  00:627B                          DB $E0,$F0,$40,$A0,$E0,$E0,$F0,$F0
     127.  00:627B  E0 F0 40 A0 E0 E0 F0 F0 
     128.  00:6283                          DB $E0,$C0,$C0,$C0,$80,$C0,$20,$00
     128.  00:6283  E0 C0 C0 C0 80 C0 20 00 
     129.  00:628B                          ; mask 1
     130.  00:628B                          DB $00,$00,$1E,$1F,$3A,$38,$7E,$7E
     130.  00:628B  00 00 1E 1F 3A 38 7E 7E 
     131.  00:6293                          DB $7F,$7C,$79,$39,$19,$1F,$07,$0C
     131.  00:6293  7F 7C 79 39 19 1F 07 0C 
     132.  00:629B                          DB $00,$00,$18,$58,$10,$50,$48,$08
     132.  00:629B  00 00 18 58 10 50 48 08 
     133.  00:62A3                          DB $10,$C0,$C0,$C0,$80,$C0,$C0,$00
     133.  00:62A3  10 C0 C0 C0 80 C0 C0 00 
     134.  00:62AB                              ; mask 2
     135.  00:62AB                          DB $00,$00,$1E,$00,$3A,$00,$00,$00
     135.  00:62AB  00 00 1E 00 3A 00 00 00 
     136.  00:62B3                          DB $00,$7E,$7D,$3D,$19,$1F,$07,$00
     136.  00:62B3  00 7E 7D 3D 19 1F 07 00 
     137.  00:62BB                          DB $00,$00,$B8,$00,$14,$00,$00,$00
     137.  00:62BB  00 00 B8 00 14 00 00 00 
     138.  00:62C3                          DB $00,$E0,$E0,$E0,$E0,$E0,$00,$00
     138.  00:62C3  00 E0 E0 E0 E0 E0 00 00 
     139.  00:62CB                          
     140.  00:62CB                      SPRITE_PATTERN:    
     141.  00:62CB                          ; P1 - DOWN 1 
     142.  00:62CB                          ; DOWN 1 - 00h
     143.  00:62CB                          ; mask 0
     144.  00:62CB                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
     144.  00:62CB  07 0F 04 06 0F 07 1F 3F 
     145.  00:62D3                          DB $4C,$4E,$4E,$3C,$0C,$0E,$0F,$08
     145.  00:62D3  4C 4E 4E 3C 0C 0E 0F 08 
     146.  00:62DB                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
     146.  00:62DB  E0 F0 20 20 70 E0 F8 FC 
     147.  00:62E3                          DB $32,$72,$7E,$7C,$70,$F0,$C0,$00    
     147.  00:62E3  32 72 7E 7C 70 F0 C0 00 
     148.  00:62EB                          ; mask 1
     149.  00:62EB                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
     149.  00:62EB  00 00 19 19 10 3A 3A 78 
     150.  00:62F3                          DB $5F,$5E,$7E,$3C,$0C,$0E,$0F,$04
     150.  00:62F3  5F 5E 7E 3C 0C 0E 0F 04 
     151.  00:62FB                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
     151.  00:62FB  00 00 90 D8 88 58 5C 1E 
     152.  00:6303                          DB $F6,$FE,$FE,$3C,$30,$70,$A0,$00    
     152.  00:6303  F6 FE FE 3C 30 70 A0 00 
     153.  00:630B                          ; mask 2
     154.  00:630B                          DB $00,$00,$1B,$00,$10,$00,$00,$00
     154.  00:630B  00 00 1B 00 10 00 00 00 
     155.  00:6313                          DB $6F,$6F,$7F,$3F,$0F,$0F,$0F,$00
     155.  00:6313  6F 6F 7F 3F 0F 0F 0F 00 
     156.  00:631B                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
     156.  00:631B  00 00 D0 00 8C 00 00 00 
     157.  00:6323                          DB $FA,$7E,$7E,$BC,$B0,$70,$80,$00
     157.  00:6323  FA 7E 7E BC B0 70 80 00 
     158.  00:632B                          
     159.  00:632B                          ; DOWN 2
     160.  00:632B                          ; mask 0 - 0Ch    
     161.  00:632B                          DB $07,$0F,$04,$06,$0F,$07,$1F,$3F
     161.  00:632B  07 0F 04 06 0F 07 1F 3F 
     162.  00:6333                          DB $4C,$4E,$7E,$3C,$0C,$0E,$05,$00
     162.  00:6333  4C 4E 7E 3C 0C 0E 05 00 
     163.  00:633B                          DB $E0,$F0,$20,$20,$70,$E0,$F8,$FC
     163.  00:633B  E0 F0 20 20 70 E0 F8 FC 
     164.  00:6343                          DB $32,$72,$72,$7C,$70,$F0,$E0,$40    
     164.  00:6343  32 72 72 7C 70 F0 E0 40 
     165.  00:634B                          ; mask 1
     166.  00:634B                          DB $00,$00,$19,$19,$10,$3A,$3A,$78
     166.  00:634B  00 00 19 19 10 3A 3A 78 
     167.  00:6353                          DB $5F,$7E,$7E,$3C,$0C,$0E,$03,$00
     167.  00:6353  5F 7E 7E 3C 0C 0E 03 00 
     168.  00:635B                          DB $00,$00,$90,$D8,$88,$58,$5C,$1E
     168.  00:635B  00 00 90 D8 88 58 5C 1E 
     169.  00:6363                          DB $F6,$F6,$FE,$3C,$30,$70,$E0,$20    
     169.  00:6363  F6 F6 FE 3C 30 70 E0 20 
     170.  00:636B                          ; mask 2
     171.  00:636B                          DB $00,$00,$1B,$00,$10,$00,$00,$00
     171.  00:636B  00 00 1B 00 10 00 00 00 
     172.  00:6373                          DB $6F,$7F,$7F,$3F,$0F,$0F,$01,$00
     172.  00:6373  6F 7F 7F 3F 0F 0F 01 00 
     173.  00:637B                          DB $00,$00,$D0,$00,$8C,$00,$00,$00
     173.  00:637B  00 00 D0 00 8C 00 00 00 
     174.  00:6383                          DB $FA,$7A,$7E,$BC,$B0,$70,$E0,$00
     174.  00:6383  FA 7A 7E BC B0 70 E0 00 
     175.  00:638B                          
     176.  00:638B                          ; Antichrist - RIGHT
     177.  00:638B                          ; mask 0 - 18h    
     178.  00:638B                          DB $00,$00,$00,$01,$01,$01,$01,$01
     178.  00:638B  00 00 00 01 01 01 01 01 
     179.  00:6393                          DB $01,$01,$07,$07,$01,$01,$00,$00
     179.  00:6393  01 01 07 07 01 01 00 00 
     180.  00:639B                          DB $00,$00,$00,$80,$80,$80,$80,$80
     180.  00:639B  00 00 00 80 80 80 80 80 
     181.  00:63A3                          DB $80,$80,$E0,$E0,$80,$80,$00,$00
     181.  00:63A3  80 80 E0 E0 80 80 00 00 
     182.  00:63AB                      
     183.  00:63AB                          ;Ghost 1 Left - 1CH
     184.  00:63AB                          ; mask 0
     185.  00:63AB                          DB $03,$04,$08,$68,$B5,$90,$50,$40
     185.  00:63AB  03 04 08 68 B5 90 50 40 
     186.  00:63B3                          DB $22,$20,$10,$10,$08,$06,$03,$00
     186.  00:63B3  22 20 10 10 08 06 03 00 
     187.  00:63BB                          DB $C0,$E0,$70,$36,$BB,$33,$26,$06
     187.  00:63BB  C0 E0 70 36 BB 33 26 06 
     188.  00:63C3                          DB $0C,$18,$3E,$19,$07,$0C,$F8,$E0
     188.  00:63C3  0C 18 3E 19 07 0C F8 E0 
     189.  00:63CB                          ; mask 1    20h
     190.  00:63CB                          DB $00,$07,$0F,$6F,$DF,$FF,$6F,$7F
     190.  00:63CB  00 07 0F 6F DF FF 6F 7F 
     191.  00:63D3                          DB $3F,$3F,$1F,$1F,$0F,$05,$03,$00
     191.  00:63D3  3F 3F 1F 1F 0F 05 03 00 
     192.  00:63DB                          DB $00,$20,$90,$D6,$DD,$DD,$DA,$FA
     192.  00:63DB  00 20 90 D6 DD DD DA FA 
     193.  00:63E3                          DB $F4,$E8,$CE,$EF,$FB,$F4,$18,$00
     193.  00:63E3  F4 E8 CE EF FB F4 18 00 
     194.  00:63EB                          
     195.  00:63EB                          ; Ghost 2 Left - 24h
     196.  00:63EB                          ; mask 0    24-h
     197.  00:63EB                          DB $03,$04,$08,$08,$65,$B0,$90,$40
     197.  00:63EB  03 04 08 08 65 B0 90 40 
     198.  00:63F3                          DB $22,$20,$10,$10,$08,$06,$01,$00
     198.  00:63F3  22 20 10 10 08 06 01 00 
     199.  00:63FB                          DB $C0,$E0,$70,$30,$B6,$3B,$27,$06
     199.  00:63FB  C0 E0 70 30 B6 3B 27 06 
     200.  00:6403                          DB $0C,$18,$3C,$1A,$06,$0C,$F0,$C0
     200.  00:6403  0C 18 3C 1A 06 0C F0 C0 
     201.  00:640B                          ; mask 1    28h
     202.  00:640B                          DB $00,$07,$0F,$0F,$6F,$DF,$EF,$7F
     202.  00:640B  00 07 0F 0F 6F DF EF 7F 
     203.  00:6413                          DB $3F,$3F,$1F,$1F,$0F,$05,$01,$00
     203.  00:6413  3F 3F 1F 1F 0F 05 01 00 
     204.  00:641B                          DB $00,$20,$90,$D0,$D6,$DD,$D9,$FA
     204.  00:641B  00 20 90 D0 D6 DD D9 FA 
     205.  00:6423                          DB $F4,$E8,$CC,$EE,$FA,$F4,$30,$00
     205.  00:6423  F4 E8 CC EE FA F4 30 00 
     206.  00:642B                      
     207.  00:642B                          ; Ghost 1 Right - 2Ch
     208.  00:642B                          ; mask 0
     209.  00:642B                          DB $03,$07,$0E,$6C,$DD,$CC,$64,$60
     209.  00:642B  03 07 0E 6C DD CC 64 60 
     210.  00:6433                          DB $30,$18,$7C,$98,$E0,$30,$1F,$07
     210.  00:6433  30 18 7C 98 E0 30 1F 07 
     211.  00:643B                          DB $C0,$20,$10,$16,$AD,$09,$0A,$02
     211.  00:643B  C0 20 10 16 AD 09 0A 02 
     212.  00:6443                          DB $44,$04,$08,$08,$10,$60,$C0,$00
     212.  00:6443  44 04 08 08 10 60 C0 00 
     213.  00:644B                          ; mask 1    - 30h
     214.  00:644B                          DB $00,$04,$09,$6B,$BB,$BB,$5B,$5F
     214.  00:644B  00 04 09 6B BB BB 5B 5F 
     215.  00:6453                          DB $2F,$17,$73,$F7,$DF,$2F,$18,$00
     215.  00:6453  2F 17 73 F7 DF 2F 18 00 
     216.  00:645B                          DB $00,$E0,$F0,$F6,$FB,$FF,$F6,$FE
     216.  00:645B  00 E0 F0 F6 FB FF F6 FE 
     217.  00:6463                          DB $FC,$FC,$F8,$F8,$F0,$A0,$C0,$00
     217.  00:6463  FC FC F8 F8 F0 A0 C0 00 
     218.  00:646B                          
     219.  00:646B                          ; Ghost 2 Right - 34h
     220.  00:646B                          ; mask 0
     221.  00:646B                          DB $03,$07,$0E,$0C,$6D,$DC,$E4,$60
     221.  00:646B  03 07 0E 0C 6D DC E4 60 
     222.  00:6473                          DB $30,$18,$3C,$58,$60,$30,$0F,$03
     222.  00:6473  30 18 3C 58 60 30 0F 03 
     223.  00:647B                          DB $C0,$20,$10,$10,$A6,$0D,$09,$02
     223.  00:647B  C0 20 10 10 A6 0D 09 02 
     224.  00:6483                          DB $44,$04,$08,$08,$10,$60,$80,$00
     224.  00:6483  44 04 08 08 10 60 80 00 
     225.  00:648B                          ; mask 1    38h
     226.  00:648B                          DB $00,$04,$09,$0B,$6B,$BB,$9B,$5F
     226.  00:648B  00 04 09 0B 6B BB 9B 5F 
     227.  00:6493                          DB $2F,$17,$33,$77,$5F,$2F,$0C,$00
     227.  00:6493  2F 17 33 77 5F 2F 0C 00 
     228.  00:649B                          DB $00,$E0,$F0,$F0,$F6,$FB,$F7,$FE
     228.  00:649B  00 E0 F0 F0 F6 FB F7 FE 
     229.  00:64A3                          DB $FC,$FC,$F8,$F8,$F0,$A0,$80,$00
     229.  00:64A3  FC FC F8 F8 F0 A0 80 00 
     230.  00:64AB                          
     231.  00:64AB                      
     232.  00:64AB                          ; Esqueleto Left - 1
     233.  00:64AB                          ; mask 0 - 3Ch
     234.  00:64AB                          DB $1F,$1B,$2E,$24,$3F,$1F,$1F,$00
     234.  00:64AB  1F 1B 2E 24 3F 1F 1F 00 
     235.  00:64B3                          DB $03,$05,$09,$04,$01,$02,$02,$04
     235.  00:64B3  03 05 09 04 01 02 02 04 
     236.  00:64BB                          DB $80,$C0,$C0,$C0,$80,$00,$00,$80
     236.  00:64BB  80 C0 C0 C0 80 00 00 80 
     237.  00:64C3                          DB $E0,$D0,$C8,$C4,$C0,$20,$20,$40
     237.  00:64C3  E0 D0 C8 C4 C0 20 20 40 
     238.  00:64CB                          ; mask 1 - 40h
     239.  00:64CB                          DB $1F,$1F,$3F,$3F,$3F,$1E,$0A,$00
     239.  00:64CB  1F 1F 3F 3F 3F 1E 0A 00 
     240.  00:64D3                          DB $03,$05,$09,$04,$01,$00,$00,$00
     240.  00:64D3  03 05 09 04 01 00 00 00 
     241.  00:64DB                          DB $00,$80,$80,$80,$00,$00,$00,$00
     241.  00:64DB  00 80 80 80 00 00 00 00 
     242.  00:64E3                          DB $80,$10,$88,$84,$80,$00,$00,$00
     242.  00:64E3  80 10 88 84 80 00 00 00 
     243.  00:64EB                      
     244.  00:64EB                          ; Esqueleto Left - 2
     245.  00:64EB                          ; mask 0 - 44h
     246.  00:64EB                          ; mask 0
     247.  00:64EB                          DB $0F,$0D,$17,$12,$1F,$0F,$0F,$00
     247.  00:64EB  0F 0D 17 12 1F 0F 0F 00 
     248.  00:64F3                          DB $03,$05,$09,$10,$01,$06,$08,$00
     248.  00:64F3  03 05 09 10 01 06 08 00 
     249.  00:64FB                          DB $C0,$E0,$60,$60,$C0,$80,$80,$80
     249.  00:64FB  C0 E0 60 60 C0 80 80 80 
     250.  00:6503                          DB $E0,$D0,$C8,$D0,$C0,$20,$20,$50
     250.  00:6503  E0 D0 C8 D0 C0 20 20 50 
     251.  00:650B                          ; mask 1 - 48h
     252.  00:650B                          DB $0F,$0F,$1F,$1F,$1F,$0F,$05,$00
     252.  00:650B  0F 0F 1F 1F 1F 0F 05 00 
     253.  00:6513                          DB $03,$05,$09,$10,$01,$00,$00,$00
     253.  00:6513  03 05 09 10 01 00 00 00 
     254.  00:651B                          DB $80,$C0,$C0,$C0,$80,$00,$00,$00
     254.  00:651B  80 C0 C0 C0 80 00 00 00 
     255.  00:6523                          DB $80,$10,$88,$90,$80,$00,$20,$40
     255.  00:6523  80 10 88 90 80 00 20 40 
     256.  00:652B                          
     257.  00:652B                          ; Esqueleto Right - 1
     258.  00:652B                          ; mask 0 - 4Ch
     259.  00:652B                          DB $01,$03,$03,$03,$01,$00,$00,$01
     259.  00:652B  01 03 03 03 01 00 00 01 
     260.  00:6533                          DB $07,$0B,$13,$23,$03,$04,$04,$02
     260.  00:6533  07 0B 13 23 03 04 04 02 
     261.  00:653B                          DB $F8,$D8,$74,$24,$FC,$F8,$F8,$00
     261.  00:653B  F8 D8 74 24 FC F8 F8 00 
     262.  00:6543                          DB $C0,$A0,$90,$20,$80,$40,$40,$20
     262.  00:6543  C0 A0 90 20 80 40 40 20 
     263.  00:654B                          ; mask 1 - 50h
     264.  00:654B                          DB $00,$01,$01,$01,$00,$00,$00,$00
     264.  00:654B  00 01 01 01 00 00 00 00 
     265.  00:6553                          DB $01,$08,$11,$21,$01,$00,$00,$00
     265.  00:6553  01 08 11 21 01 00 00 00 
     266.  00:655B                          DB $F8,$F8,$FC,$FC,$FC,$78,$50,$00
     266.  00:655B  F8 F8 FC FC FC 78 50 00 
     267.  00:6563                          DB $C0,$A0,$90,$20,$80,$00,$00,$00
     267.  00:6563  C0 A0 90 20 80 00 00 00 
     268.  00:656B                          
     269.  00:656B                          ; Esqueleto Right - 2
     270.  00:656B                          ; mask 0 - 54h
     271.  00:656B                          DB $03,$07,$06,$06,$03,$01,$01,$01
     271.  00:656B  03 07 06 06 03 01 01 01 
     272.  00:6573                          DB $07,$0B,$13,$0B,$03,$04,$04,$0A
     272.  00:6573  07 0B 13 0B 03 04 04 0A 
     273.  00:657B                          DB $F0,$B0,$E8,$48,$F8,$F0,$F0,$00
     273.  00:657B  F0 B0 E8 48 F8 F0 F0 00 
     274.  00:6583                          DB $C0,$A0,$90,$08,$80,$60,$10,$00
     274.  00:6583  C0 A0 90 08 80 60 10 00 
     275.  00:658B                          ; mask 1 - 58h
     276.  00:658B                          DB $01,$03,$03,$03,$01,$00,$00,$00
     276.  00:658B  01 03 03 03 01 00 00 00 
     277.  00:6593                          DB $01,$08,$11,$09,$01,$00,$04,$02
     277.  00:6593  01 08 11 09 01 00 04 02 
     278.  00:659B                          DB $F0,$F0,$F8,$F8,$F8,$F0,$A0,$00
     278.  00:659B  F0 F0 F8 F8 F8 F0 A0 00 
     279.  00:65A3                          DB $C0,$A0,$90,$08,$80,$00,$00,$00
     279.  00:65A3  C0 A0 90 08 80 00 00 00 
     280.  00:65AB                      
     281.  00:65AB                      SPRITE_COLOR_TABLE:       
     282.  00:65AB                           ;P1 - DOWN 1
     283.  00:65AB                          ;DOWN 1
     284.  00:65AB                          ; attr 0
     285.  00:65AB                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     285.  00:65AB  05 05 0A 0B 0B 0B 0B 0B 
     286.  00:65B3                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     286.  00:65B3  04 04 04 0A 0A 0A 08 08 
     287.  00:65BB                          ; attr 1
     288.  00:65BB                          DB $00,$00,$44,$45,$45,$45,$45,$45
     288.  00:65BB  00 00 44 45 45 45 45 45 
     289.  00:65C3                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     289.  00:65C3  4A 4A 4A 44 44 44 45 45 
     290.  00:65CB                          ; attr 2
     291.  00:65CB                          DB $00,$00,$41,$00,$40,$00,$00,$00
     291.  00:65CB  00 00 41 00 40 00 00 00 
     292.  00:65D3                          DB $41,$41,$41,$41,$41,$41,$42,$00
     292.  00:65D3  41 41 41 41 41 41 42 00 
     293.  00:65DB                               
     294.  00:65DB                          ; Cada posición ha de corresponder con la tabla de atributos    
     295.  00:65DB                          ; Disparo - antichrist    
     296.  00:65DB                          DB $00,$00,$00,$0A,$0A,$0A,$0A,$0A
     296.  00:65DB  00 00 00 0A 0A 0A 0A 0A 
     297.  00:65E3                          DB $0A,$0A,$0A,$0A,$0A,$0A,$00,$00
     297.  00:65E3  0A 0A 0A 0A 0A 0A 00 00 
     298.  00:65EB                          ; Fantasma
     299.  00:65EB                          ; attr 0
     300.  00:65EB                          DB $0F,$08,$08,$08,$08,$08,$08,$08
     300.  00:65EB  0F 08 08 08 08 08 08 08 
     301.  00:65F3                          DB $08,$08,$08,$08,$08,$08,$08,$0F
     301.  00:65F3  08 08 08 08 08 08 08 0F 
     302.  00:65FB                          ; attr 1
     303.  00:65FB                          DB $00,$47,$47,$47,$47,$47,$47,$47
     303.  00:65FB  00 47 47 47 47 47 47 47 
     304.  00:6603                          DB $47,$47,$47,$47,$47,$47,$47,$00
     304.  00:6603  47 47 47 47 47 47 47 00 
     305.  00:660B                          
     306.  00:660B                          
     307.  00:660B                          ; Esqueleto Left 1
     308.  00:660B                          ; attr 0
     309.  00:660B                          DB $0E,$0E,$0E,$0E,$0E,$0E,$0E,$0E
     309.  00:660B  0E 0E 0E 0E 0E 0E 0E 0E 
     310.  00:6613                          DB $0E,$0E,$0E,$0E,$0E,$0F,$0F,$0F
     310.  00:6613  0E 0E 0E 0E 0E 0F 0F 0F 
     311.  00:661B                          ; attr 1
     312.  00:661B                          DB $41,$49,$49,$49,$41,$41,$41,$00
     312.  00:661B  41 49 49 49 41 41 41 00 
     313.  00:6623                          DB $41,$41,$41,$41,$41,$00,$00,$00
     313.  00:6623  41 41 41 41 41 00 00 00 
     314.  00:662B                      
     315.  00:662B                      SPRITE_COLOR_P1_UP:
     316.  00:662B                          ;UP 1
     317.  00:662B                          ; attr 0
     318.  00:662B                          DB $05,$05,$0A,$05,$05,$05,$05,$05
     318.  00:662B  05 05 0A 05 05 05 05 05 
     319.  00:6633                          DB $0A,$05,$0B,$0A,$0A,$0A,$08,$08
     319.  00:6633  0A 05 0B 0A 0A 0A 08 08 
     320.  00:663B                          ; attr 1
     321.  00:663B                          DB $00,$00,$44,$00,$40,$00,$00,$00
     321.  00:663B  00 00 44 00 40 00 00 00 
     322.  00:6643                          DB $44,$4A,$45,$45,$45,$45,$45,$45    
     322.  00:6643  44 4A 45 45 45 45 45 45 
     323.  00:664B                          ; attr 2
     324.  00:664B                          DB $00,$00,$41,$00,$00,$00,$00,$00
     324.  00:664B  00 00 41 00 00 00 00 00 
     325.  00:6653                          DB $41,$41,$00,$00,$00,$00,$42,$00
     325.  00:6653  41 41 00 00 00 00 42 00 
     326.  00:665B                          
     327.  00:665B                          ;SPRITE_COLOR_P1_UP2:
     328.  00:665B                          ;UP 1
     329.  00:665B                          ; attr 0
     330.  00:665B                          DB $05,$05,$0A,$05,$05,$05,$05,$05
     330.  00:665B  05 05 0A 05 05 05 05 05 
     331.  00:6663                          DB $0A,$05,$0B,$0A,$0A,$0A,$08,$08
     331.  00:6663  0A 05 0B 0A 0A 0A 08 08 
     332.  00:666B                          ; attr 1
     333.  00:666B                          DB $00,$00,$44,$00,$40,$00,$00,$00
     333.  00:666B  00 00 44 00 40 00 00 00 
     334.  00:6673                          DB $44,$4A,$45,$45,$45,$45,$45,$45
     334.  00:6673  44 4A 45 45 45 45 45 45 
     335.  00:667B                          ; attr 2
     336.  00:667B                          DB $00,$00,$41,$00,$00,$00,$00,$00
     336.  00:667B  00 00 41 00 00 00 00 00 
     337.  00:6683                          DB $41,$41,$00,$00,$00,$00,$42,$00
     337.  00:6683  41 41 00 00 00 00 42 00 
     338.  00:668B                      
     339.  00:668B                      
     340.  00:668B                      SPRITE_COLOR_P1_DOWN:
     341.  00:668B                          ;DOWN 1
     342.  00:668B                          ; attr 0
     343.  00:668B                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     343.  00:668B  05 05 0A 0B 0B 0B 0B 0B 
     344.  00:6693                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     344.  00:6693  04 04 04 0A 0A 0A 08 08 
     345.  00:669B                          ; attr 1
     346.  00:669B                          DB $00,$00,$44,$45,$45,$45,$45,$45
     346.  00:669B  00 00 44 45 45 45 45 45 
     347.  00:66A3                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     347.  00:66A3  4A 4A 4A 44 44 44 45 45 
     348.  00:66AB                          ; attr 2
     349.  00:66AB                          DB $00,$00,$41,$00,$40,$00,$00,$00
     349.  00:66AB  00 00 41 00 40 00 00 00 
     350.  00:66B3                          DB $41,$41,$41,$41,$41,$41,$42,$00
     350.  00:66B3  41 41 41 41 41 41 42 00 
     351.  00:66BB                          ;SPRITE_COLOR_P1_DOWN2:
     352.  00:66BB                          ;DOWN 1
     353.  00:66BB                          ; attr 0
     354.  00:66BB                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     354.  00:66BB  05 05 0A 0B 0B 0B 0B 0B 
     355.  00:66C3                          DB $04,$04,$04,$0A,$0A,$0A,$08,$08    
     355.  00:66C3  04 04 04 0A 0A 0A 08 08 
     356.  00:66CB                          ; attr 1
     357.  00:66CB                          DB $00,$00,$44,$45,$45,$45,$45,$45
     357.  00:66CB  00 00 44 45 45 45 45 45 
     358.  00:66D3                          DB $4A,$4A,$4A,$44,$44,$44,$45,$45    
     358.  00:66D3  4A 4A 4A 44 44 44 45 45 
     359.  00:66DB                          ; attr 2
     360.  00:66DB                          DB $00,$00,$41,$00,$40,$00,$00,$00
     360.  00:66DB  00 00 41 00 40 00 00 00 
     361.  00:66E3                          DB $41,$41,$41,$41,$41,$41,$42,$00
     361.  00:66E3  41 41 41 41 41 41 42 00 
     362.  00:66EB                      
     363.  00:66EB                      SPRITE_COLOR_P1_RIGHT:
     364.  00:66EB                          ; attr 0
     365.  00:66EB                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     365.  00:66EB  05 05 0A 0B 0B 0B 0B 0B 
     366.  00:66F3                          DB $0B,$0A,$0A,$0B,$0A,$0A,$08,$08    
     366.  00:66F3  0B 0A 0A 0B 0A 0A 08 08 
     367.  00:66FB                          ; attr 1
     368.  00:66FB                          DB $00,$00,$44,$45,$45,$45,$45,$45
     368.  00:66FB  00 00 44 45 45 45 45 45 
     369.  00:6703                          DB $45,$44,$44,$44,$44,$44,$45,$45    
     369.  00:6703  45 44 44 44 44 44 45 45 
     370.  00:670B                          ; attr 2
     371.  00:670B                          DB $00,$00,$41,$00,$40,$00,$00,$00
     371.  00:670B  00 00 41 00 40 00 00 00 
     372.  00:6713                          DB $00,$41,$41,$41,$41,$41,$42,$00
     372.  00:6713  00 41 41 41 41 41 42 00 
     373.  00:671B                             
     374.  00:671B                          ; attr 0
     375.  00:671B                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     375.  00:671B  05 05 0A 0B 0B 0B 0B 0B 
     376.  00:6723                          DB $0B,$0A,$0A,$0A,$0B,$0A,$08,$08    
     376.  00:6723  0B 0A 0A 0A 0B 0A 08 08 
     377.  00:672B                          ; attr 1
     378.  00:672B                          DB $00,$00,$44,$45,$45,$45,$45,$45
     378.  00:672B  00 00 44 45 45 45 45 45 
     379.  00:6733                          DB $45,$44,$44,$44,$44,$44,$45,$45
     379.  00:6733  45 44 44 44 44 44 45 45 
     380.  00:673B                          ; attr 2
     381.  00:673B                          DB $00,$00,$41,$00,$40,$00,$00,$00
     381.  00:673B  00 00 41 00 40 00 00 00 
     382.  00:6743                          DB $00,$41,$41,$41,$41,$41,$42,$00
     382.  00:6743  00 41 41 41 41 41 42 00 
     383.  00:674B                      
     384.  00:674B                      mapa1:
     385.  00:674B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     385.  00:674B  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     385.  00:675B  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     386.  00:676B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     386.  00:676B  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     386.  00:677B  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     387.  00:678B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     387.  00:678B  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     387.  00:679B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     388.  00:67AB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     388.  00:67AB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     388.  00:67BB  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     389.  00:67CB                            db #01,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     389.  00:67CB  01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 
     389.  00:67DB  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     390.  00:67EB                            db #01,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     390.  00:67EB  01 00 00 00 01 00 00 00 00 00 00 00 00 00 00 00 
     390.  00:67FB  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     391.  00:680B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     391.  00:680B  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     391.  00:681B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     392.  00:682B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     392.  00:682B  01 00 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     392.  00:683B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     393.  00:684B                          
     394.  00:684B                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     394.  00:684B  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     394.  00:685B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     395.  00:686B                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     395.  00:686B  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     395.  00:687B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     396.  00:688B                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01        
     396.  00:688B  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     396.  00:689B  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     397.  00:68AB                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     397.  00:68AB  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     397.  00:68BB  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     398.  00:68CB                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     398.  00:68CB  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     398.  00:68DB  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     399.  00:68EB                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#01,#01        
     399.  00:68EB  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     399.  00:68FB  00 00 00 00 00 00 00 00 00 00 00 01 00 00 01 01 
     400.  00:690B                            db #01,#01,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01        
     400.  00:690B  01 01 00 00 00 00 00 01 01 01 01 01 01 00 00 00 
     400.  00:691B  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     401.  00:692B                            db #01,#01,#00,#00,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     401.  00:692B  01 01 00 00 00 00 00 01 01 00 00 00 00 00 00 00 
     401.  00:693B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     402.  00:694B                      
     403.  00:694B                            db #01,#01,#00,#00,#00,#00,#01,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     403.  00:694B  01 01 00 00 00 00 01 01 01 00 00 00 00 00 00 00 
     403.  00:695B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     404.  00:696B                            db #01,#01,#00,#00,#00,#00,#01,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     404.  00:696B  01 01 00 00 00 00 01 01 01 00 00 00 00 00 00 00 
     404.  00:697B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     405.  00:698B                            db #01,#01,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     405.  00:698B  01 01 00 00 01 01 01 01 01 01 01 01 01 00 00 00 
     405.  00:699B  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     406.  00:69AB                            db #01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01,#01        
     406.  00:69AB  01 01 00 00 00 00 00 00 00 00 00 00 01 00 00 00 
     406.  00:69BB  00 00 00 01 00 00 00 00 00 00 00 00 00 00 01 01 
     407.  00:69CB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     407.  00:69CB  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     407.  00:69DB  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     408.  00:69EB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     408.  00:69EB  01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 00 
     408.  00:69FB  00 00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 
     409.  00:6A0B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01        
     409.  00:6A0B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     409.  00:6A1B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     410.  00:6A2B                      
     411.  00:6A2B                      mapa2:
     412.  00:6A2B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     412.  00:6A2B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     412.  00:6A3B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     413.  00:6A4B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     413.  00:6A4B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     413.  00:6A5B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     414.  00:6A6B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     414.  00:6A6B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     414.  00:6A7B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     415.  00:6A8B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     415.  00:6A8B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     415.  00:6A9B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     416.  00:6AAB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     416.  00:6AAB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     416.  00:6ABB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     417.  00:6ACB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     417.  00:6ACB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     417.  00:6ADB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     418.  00:6AEB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     418.  00:6AEB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     418.  00:6AFB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     419.  00:6B0B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     419.  00:6B0B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     419.  00:6B1B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     420.  00:6B2B                            
     421.  00:6B2B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     421.  00:6B2B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     421.  00:6B3B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     422.  00:6B4B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     422.  00:6B4B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     422.  00:6B5B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     423.  00:6B6B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     423.  00:6B6B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     423.  00:6B7B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     424.  00:6B8B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     424.  00:6B8B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     424.  00:6B9B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     425.  00:6BAB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     425.  00:6BAB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     425.  00:6BBB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     426.  00:6BCB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     426.  00:6BCB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     426.  00:6BDB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     427.  00:6BEB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     427.  00:6BEB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     427.  00:6BFB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     428.  00:6C0B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     428.  00:6C0B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     428.  00:6C1B  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     429.  00:6C2B                            
     430.  00:6C2B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     430.  00:6C2B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     430.  00:6C3B  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     431.  00:6C4B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     431.  00:6C4B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     431.  00:6C5B  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     432.  00:6C6B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     432.  00:6C6B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     432.  00:6C7B  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     433.  00:6C8B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     433.  00:6C8B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     433.  00:6C9B  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     434.  00:6CAB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     434.  00:6CAB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     434.  00:6CBB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     435.  00:6CCB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     435.  00:6CCB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     435.  00:6CDB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     436.  00:6CEB                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#00,#00,#00,#00,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     436.  00:6CEB  01 01 01 01 01 01 01 01 01 01 01 01 01 01 00 00 
     436.  00:6CFB  00 00 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     437.  00:6D0B                            
     438.  00:6D0B                      mapa0:      
     439.  00:6D0B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     439.  00:6D0B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     439.  00:6D1B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     440.  00:6D2B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     440.  00:6D2B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     440.  00:6D3B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     441.  00:6D4B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     441.  00:6D4B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     441.  00:6D5B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     442.  00:6D6B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     442.  00:6D6B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     442.  00:6D7B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     443.  00:6D8B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     443.  00:6D8B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     443.  00:6D9B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     444.  00:6DAB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     444.  00:6DAB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     444.  00:6DBB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     445.  00:6DCB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01       
     445.  00:6DCB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     445.  00:6DDB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     446.  00:6DEB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     446.  00:6DEB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     446.  00:6DFB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     447.  00:6E0B                            
     448.  00:6E0B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     448.  00:6E0B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     448.  00:6E1B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     449.  00:6E2B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     449.  00:6E2B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     449.  00:6E3B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     450.  00:6E4B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     450.  00:6E4B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     450.  00:6E5B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     451.  00:6E6B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     451.  00:6E6B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     451.  00:6E7B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     452.  00:6E8B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     452.  00:6E8B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     452.  00:6E9B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     453.  00:6EAB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     453.  00:6EAB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     453.  00:6EBB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     454.  00:6ECB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     454.  00:6ECB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     454.  00:6EDB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     455.  00:6EEB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     455.  00:6EEB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     455.  00:6EFB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     456.  00:6F0B                      
     457.  00:6F0B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     457.  00:6F0B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     457.  00:6F1B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     458.  00:6F2B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     458.  00:6F2B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     458.  00:6F3B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     459.  00:6F4B                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     459.  00:6F4B  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     459.  00:6F5B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     460.  00:6F6B                            db #01,#00,#00,#00,#01,#01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     460.  00:6F6B  01 00 00 00 01 01 00 00 00 00 00 00 00 00 00 00 
     460.  00:6F7B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     461.  00:6F8B                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     461.  00:6F8B  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     461.  00:6F9B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     462.  00:6FAB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     462.  00:6FAB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     462.  00:6FBB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     463.  00:6FCB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01        
     463.  00:6FCB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     463.  00:6FDB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     464.  00:6FEB                            db #01,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#00,#01   
     464.  00:6FEB  01 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     464.  00:6FFB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 01 
     465.  00:700B                            
     466.  00:700B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     466.  00:700B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     466.  00:701B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     467.  00:702B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     467.  00:702B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     467.  00:703B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     468.  00:704B                            db #01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01,#01   
     468.  00:704B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     468.  00:705B  01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 01 
     469.  00:706B                          
     470.  00:706B                      
     471.  00:706B                      SPRITE_COLOR_P1_LEFT:
     472.  00:706B                          ; attr 0
     473.  00:706B                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     473.  00:706B  05 05 0A 0B 0B 0B 0B 0B 
     474.  00:7073                          DB $0B,$0A,$0A,$0B,$0A,$0A,$08,$08
     474.  00:7073  0B 0A 0A 0B 0A 0A 08 08 
     475.  00:707B                          ; attr 1
     476.  00:707B                          DB $00,$00,$44,$45,$45,$45,$45,$45
     476.  00:707B  00 00 44 45 45 45 45 45 
     477.  00:7083                          DB $45,$44,$44,$44,$44,$44,$45,$45
     477.  00:7083  45 44 44 44 44 44 45 45 
     478.  00:708B                          ; attr 2
     479.  00:708B                          DB $00,$00,$41,$00,$40,$00,$00,$00
     479.  00:708B  00 00 41 00 40 00 00 00 
     480.  00:7093                          DB $00,$41,$41,$41,$41,$41,$42,$00
     480.  00:7093  00 41 41 41 41 41 42 00 
     481.  00:709B                          ;SPRITE_COLOR_P1_LEFT2:    
     482.  00:709B                          ; attr 0
     483.  00:709B                          DB $05,$05,$0A,$0B,$0B,$0B,$0B,$0B
     483.  00:709B  05 05 0A 0B 0B 0B 0B 0B 
     484.  00:70A3                          DB $0B,$0A,$0A,$0A,$0B,$0A,$08,$08
     484.  00:70A3  0B 0A 0A 0A 0B 0A 08 08 
     485.  00:70AB                          ; attr 1
     486.  00:70AB                          DB $00,$00,$44,$45,$45,$45,$45,$45
     486.  00:70AB  00 00 44 45 45 45 45 45 
     487.  00:70B3                          DB $45,$44,$44,$44,$44,$44,$45,$45
     487.  00:70B3  45 44 44 44 44 44 45 45 
     488.  00:70BB                          ; attr 2
     489.  00:70BB                          DB $00,$00,$41,$00,$40,$00,$00,$00
     489.  00:70BB  00 00 41 00 40 00 00 00 
     490.  00:70C3                          DB $00,$41,$41,$41,$41,$41,$42,$00
     490.  00:70C3  00 41 41 41 41 41 42 00 
     491.  00:70CB                      
     492.  00:70CB                      BLANK_DATA:
     493.  00:70CB                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     493.  00:70CB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     493.  00:70DB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     494.  00:70EB                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     494.  00:70EB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     494.  00:70FB  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     495.  00:710B                          DB $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
     495.  00:710B  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
     495.  00:711B  00 00 00 00 
     496.  00:711F                          
     497.  00:711F                      PaletteData:
     498.  00:711F                      			;  data 1 (red 0-7; blue 0-7); data 2 (0000; green 0-7)
     499.  00:711F  00 00                   db 0x00, 0x00 ; Color index 0
     500.  00:7121  30 00                   db 0x30, 0x00 ; Color index 1
     501.  00:7123  70 06                   db 0x70, 0x06 ; Color index 2
     502.  00:7125  50 00                   db 0x50, 0x00 ; Color index 3
     503.  00:7127  11 01                   db 0x11, 0x01 ; Color index 4
     504.  00:7129  22 02                   db 0x22, 0x02 ; Color index 5
     505.  00:712B  06 02                   db 0x06, 0x02 ; Color index 6
     506.  00:712D  77 07                   db 0x77, 0x07 ; Color index 7
     507.  00:712F  33 03                   db 0x33, 0x03 ; Color index 8
     508.  00:7131  66 06                   db 0x66, 0x06 ; Color index 9
     509.  00:7133  70 00                   db 0x70, 0x00 ; Color index 10
     510.  00:7135  64 05                   db 0x64, 0x05 ; Color index 11
     511.  00:7137  50 03                   db 0x50, 0x03 ; Color index 12
     512.  00:7139  02 04                   db 0x02, 0x04 ; Color index 13
     513.  00:713B  01 02                   db 0x01, 0x02 ; Color index 14
     514.  00:713D  00 00                   db 0x00, 0x00 ; Color index 15
     625   00:713F                      TILES1:
     626   00:713F  (07F9)               INCBIN "gfx\tiles1.sc5",#7
     627   00:7938  (01)                 PAGE 1
     628   01:8000                      ; CODE O NO
     629   01:8000                      
     630   01:8000  (02)                 PAGE 2
     631   02:8000                      
     632   02:8000  (03)                 PAGE 3
     633   03:8000                      
     634   03:8000  (04)                 PAGE 4
     635   04:8000  (05)                 PAGE 5
     636   05:8000  (06)                 PAGE 6
     637   06:8000                      FONT:
     638   06:8000  (07F7)               INCBIN "gfx\FONT.SC5",#7
     639   06:87F7  (07)                 PAGE 7
     640   07:8000                      CEMENTER1
     641   07:8000  (4000)               INCBIN "gfx\CEMENTER1.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     642   07:C000  (08)                 PAGE 8
     643   08:8000  (2A00)               INCBIN "gfx\CEMENTER1.SC5",#4007			; Cada página tiene 16K = 4000h 
     644   08:AA00  (09)                 PAGE 9
     645   09:8000                      GRAPHIC
     646   09:8000  (4000)               INCBIN "gfx\BTH.SR8",#7,#4000			; Cada página tiene 16K = 4000h
     647   09:C000  (0A)                 PAGE 10
     648   0A:8000  (4000)               INCBIN "gfx\BTH.SR8",#4007,#4000
     649   0A:C000                      
     650   0A:C000  (0B)                 PAGE 11
     651   0B:8000  (4000)               INCBIN "gfx\BTH.SR8",#8007,#4000
     652   0B:C000                      
     653   0B:C000  (0C)                 PAGE 12
     654   0C:8000  (1400)               INCBIN "gfx\BTH.SR8",#C007
     655   0C:9400                      
     656   0C:9400  (0D)                 PAGE 13
     657   0D:8000                      CEMENTER2
     658   0D:8000  (4000)               INCBIN "gfx\CEMENTER2.SC5",#7,#4000			; Cada página tiene 16K = 4000h
     659   0D:C000  (0E)                 PAGE 14
     660   0E:8000  (2A00)               INCBIN "gfx\CEMENTER2.SC5",#4007			; Cada página tiene 16K = 4000h 
     661   0E:AA00  (0F)                 PAGE 15
     662   0F:C000                      ;---------------------------------------------------------
     663   0F:C000                      ; Variables
     664   0F:C000                      ;---------------------------------------------------------
     665   0F:C000                      	
     666   0F:C000  (C000)              	MAP #C000  ;Ram page 3
     667   0F:C000                      ;	MAP #E5FF  ;Ram page 3
     668   0F:C000                      ;NAME #1  ;a byte is reserved for this variable
     669   0F:C000                      ;ETC
     670   0F:C000                      ;
     671   0F:C000                      	include "include\BTH_RAM.asm"
       1.  0F:C000                      ; VDP COMMAND PARAMETER
       2.  0F:C000                      ;          SXL SXH SYL SYH DXL DXH DYL DYH NXL NXH NYL NYH CLR ARG CMD
       3.  0F:C000                      COPY01 DB  $00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
       3.  0F:C000  00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 
       4.  0F:C00F                      
       5.  0F:C00F  00 (1)              SHOWING_SKULL_STG1_DIALOG  DS 1
       6.  0F:C010  00 (1)              SHOWING_MIKE_DIALOG  DS 1
       7.  0F:C011  00 (1)              SHOWING_JOHN_DIALOG  DS 1
       8.  0F:C012  00 (1)              SHOWING_GUS_DIALOG  DS 1
       9.  0F:C013  (0F:0008)           FONT_HEIGHT EQU 8
      10.  0F:C013  (0F:0008)           FONT_WIDTH  EQU 8
      11.  0F:C013  00 (2)              CHR_ACR DS 2
      12.  0F:C015  00 (1)              PTR_STR_DX DS 1
      13.  0F:C016  00 (1)              PTR_STR_DY DS 1
      14.  0F:C017                      
      15.  0F:C017  00 (1)              LAST_KEY_PRESSED DS 1
      16.  0F:C018  00 (1)              OLD_KEY_PRESSED DS 1
      17.  0F:C019  00                  JIFFY_TEMP DB $00
      18.  0F:C01A  00                  CHAR_SPEED_X DB $00
      19.  0F:C01B  00                  CHAR_SPEED_Y DB $00
      20.  0F:C01C  00                  CHAR_SPEED_X_GHOST DB $00
      21.  0F:C01D  00                  CHAR_SPEED_X_GHOST_STG2 DB $00
      22.  0F:C01E  00 (1)              CHAR_GHOST_DEAD DS 1
      23.  0F:C01F  00 (1)              CHAR_GHOST_DEAD_STG2 DS 1
      24.  0F:C020  00 (1)              CHAR_MIN_STEP_STG2 DS 1
      25.  0F:C021  00                  CHAR_DIR_GHOST1 DB $00      ; $00 - LEFT, $FF - RIGHT
      26.  0F:C022  00                  CHAR_DIR_GHOST_STG2 DB $00      ; $00 - LEFT, $FF - RIGHT
      27.  0F:C023  00                  CHAR_DIR_MAIN DB $00        ; $00 - UP, $01 - DOWN, $02 - LEFT, $03 - RIGHT
      28.  0F:C024  00 (1)              CHAR_NEW_DIR_MAIN DS 1
      29.  0F:C025  00 (1)              CHAR_MAIN_SHOOT DS 1        ; $01 - SHOOT LEFT $02 - SHOOT RIGHT $03 - SHOOT UP $04 - SHOOT DOWN
      30.  0F:C026  00 (1)              CHAR_MIN_STEP DS 1          ; número de ciclos antes de cambiar de patrón
      31.  0F:C027  00 (1)              CHAR_DISTANCE_SHOOT DS 1
      32.  0F:C028  00 (1)              CHAR_SPEED_SHOOT DS 1
      33.  0F:C029                      SPRITE_ATTRS:
      34.  0F:C029  00 (128)                DS 128
      35.  0F:C0A9                      SLOTBIOS:
      36.  0F:C0A9  00 (1)                  DS 1
      37.  0F:C0AA                      SLOTGAME:
      38.  0F:C0AA  00 (1)                  DS 1
      39.  0F:C0AB                      SLOTRAM:
      40.  0F:C0AB  00 (1)                  DS 1
      41.  0F:C0AC                      SPRITE_PTR_REPLACE:
      42.  0F:C0AC  00 (2)                  DS 2
      43.  0F:C0AE                      SPRITE_COLOR_REPLACE:
      44.  0F:C0AE  00 (2)                  DS 2
      45.  0F:C0B0                      SPRITE_COLOR_REPLACE2:
      46.  0F:C0B0  00 (2)                  DS 2
      47.  0F:C0B2                      MAPA:
      48.  0F:C0B2  00 (2)                  DS 2
      49.  0F:C0B4                      BITMAP:
      50.  0F:C0B4  00 (2)                  DS 2
      51.  0F:C0B6                      MAP_RAM:
      52.  0F:C0B6  00 (736)                DS 736
     672   0F:C396  (F43F)              	ENDMAP

    LABELS
-------------------------------------------------
00:00004000 X PageSize
00:00006000 X _bank1
00:00007000   _bank2
00:0000009F X CHGET
00:000000A2 X CHPUT
00:0000005F   CHGMOD
00:0000005C   LDIRVM
00:0000013E X RDVDP
00:00000047   WRTVDP
00:0000F3DB   CLIKSW
00:00000141   SNSMAT
00:0000FC9E X JIFFY
00:00000072 X INIGRP
00:00000138   RSLREG
00:00000024   ENASLT
00:00005C28   FIRST_LINE_DLG_BOX
00:00006028   SEC_LINE_DLG_BOX
00:00006428   THIRD_LINE_DLG_BOX
00:00000001 X ROMMODE
00:00000007   KB_RIGHT
00:00000006   KB_DOWN
00:00000005   KB_UP
00:00000004   KB_LEFT
00:00000003   KB_DEL
00:00000000   KB_SPACE
00:00000001   MOV_SPEED
00:00000001   MOV_SPEED_GHOST
00:00000003   MOV_SPEED_SHOOT
00:00000030   MAX_DISTANCE_SHOOT
00:00000005   MAX_CHAR_STEPS
00:00000006   MAX_CHAR_STEPS_STG2
00:0000FFE8   REG9SAV
00:00000098   PORT_0
00:00000099   PORT_1
00:0000009A X PORT_2
00:0000009B X PORT_3
00:0000F3E0   RG15AV
00:0000F3E9   FORCLR
00:000000C8   MIKE_TOMB_STG1_X
00:00000029   JOHN_TOMB_STG1_X
00:00000049   GUS_TOMB_STG1_X
00:00000078   GUS_TOMB_STG1_Y
00:00000069   SKULL_TOMB_STG1_X
00:0000005A   SKULL_TOMB_STG1_Y1
00:00000064   SKULL_TOMB_STG1_Y2
00:0000000C   SPR_SHOOT_P1
00:00000018   SPR_SHOOT_P1_PTRN
00:00000010   SPR_GHOST_STG1
00:0000001C   SPR_GHOST_STG1_PTRN_L1
00:00000024   SPR_GHOST_STG1_PTRN_L2
00:0000002C   SPR_GHOST_STG1_PTRN_R1
00:00000034   SPR_GHOST_STG1_PTRN_R2
00:00000018   SPR_GHOST_STG2
00:0000003C   SPR_GHOST_STG2_PTRN_L1
00:00000044   SPR_GHOST_STG2_PTRN_L2
00:0000004C   SPR_GHOST_STG2_PTRN_R1
00:00000054   SPR_GHOST_STG2_PTRN_R2
00:00004010   mike_tomb_strings
00:00004016   string01M
00:0000401C   string02M
00:0000402F   string03M
00:00004038   john_tomb_strings
00:0000403E   string01J
00:00004044   string02J
00:00004056   string03J
00:0000405F   gus_tomb_strings
00:00004065   string01G
00:0000406A   string02G
00:0000407E   string03G
00:00004087   stg1_skull_strings
00:0000408D   string01Sk
00:00004095   string02Sk
00:000040A7   string03Sk
00:000040B0   check_spr_collision
00:000040BD   check_spr_collision.no_collision
00:000040C0   get_bloque_en_X_Y
00:000040E1   SetVdp_Write
00:000040FD   Set212Lines
00:00004109   ClearVram_MSX2
00:00004113   ClearVram_MSX2.loop_2
00:00004115   ClearVram_MSX2.loop_1
00:00004117   ClearVram_MSX2.loop
00:00004124 X opening_screen
00:00004147   load_screen
00:00004169   _vdpsetvramwr
00:0000417A X _vdpsetvramwr14
00:00004183   GETSLOT
00:0000419A   EXIT
00:0000419C   SETPAGES32K
00:000041A1   NOPRET
00:000041AF   SET_SCREEN5_MODE
00:000041D1   DUMP_SPR_ALL
00:000041F6   load_tiles_vdp
00:00004200   DUMP_SPR_ATTS
00:0000421A X DUMP_SPR_ATTS.DUMP_SPR_ATTS_END
00:0000421B   DUMP_SPR_P1
00:00004238   SetPalette
00:00004247   move_up
00:00004281   move_down
00:000042BC   move_right
00:000042CD   move_right.KB_UPDOWN_PRESSED
00:0000431B   move_left
00:0000432C   move_left.KB_UPDOWN_PRESSED
00:0000437A   CHECK_DIRECTION_MAIN
00:0000439C   CHECK_DIRECTION_MAIN.SET_DIR_DOWN
00:000043B1   CHECK_DIRECTION_MAIN.SET_DIR_UP
00:000043C6   CHECK_DIRECTION_MAIN.SET_DIR_LEFT
00:000043DB   CHECK_DIRECTION_MAIN.SET_DIR_RIGHT
00:000043F0   CHECK_DIRECTION_MAIN.FINISH
00:00004407   UPDATE_MOVEMENT
00:0000442F   ANIMATE_P1
00:00004456   ANIMATE_P1.SET_SPR_1P_2
00:0000446D   ANIMATE_P1.NO_CHAR_PATTERN_CHANGE
00:00004473   NO_MOVEMENT
00:00004474   MOVE_SHOOT
00:0000448C   MOVE_SHOOT.MOVE_SHOOT_RIGHT
00:00004494   MOVE_SHOOT.MOVE_SHOOT_UP
00:0000449C   MOVE_SHOOT.MOVE_SHOOT_DOWN
00:000044A4   MOVE_SHOOT.MOVE_SHOOT_LEFT
00:000044A9   MOVE_SHOOT.CHECK_SHOOT_DISTANCE
00:000044BE   MOVE_SHOOT.ADD_SHOOT_Y
00:000044C8   MOVE_SHOOT.ADD_DISTANCE
00:000044D3 X MOVE_SHOOT.HIDE_SHOOT
00:000044DF   print_strings_dialog_box
00:0000450C   print_string
00:0000450C   print_string.loop_str
00:00004527   print_string.first_line_font
00:00004540   print_char
00:00004577   CLEAR_DIALOG_BOX
00:0000F3E0   VDP_01
00:0000FFE7   VDP_08
00:0000FFE8   VDP_09
00:000045A9 X SETPAG
00:000045B7 X SET_WR
00:000045D2 X SET_RD
00:000045EB   VDPCMD
00:000045FE   WAITCE
00:00004616   ENASCR
00:0000461D   DISSCR
00:00004622   DISSCR.OUT
00:0000462E X ENASPR
00:00004635 X DISSPR
00:0000463A   DISSPR.OUT
00:00004646 X LIN192
00:0000464D X LIN212
00:00004652   LIN212.OUT
00:00000000   CHNPRM_PsInOr
00:00000001   CHNPRM_PsInSm
00:00000002   CHNPRM_CrAmSl
00:00000003   CHNPRM_CrNsSl
00:00000004   CHNPRM_CrEnSl
00:00000005   CHNPRM_TSlCnt
00:00000006   CHNPRM_CrTnSl
00:00000008   CHNPRM_TnAcc
00:0000000A   CHNPRM_COnOff
00:0000000B   CHNPRM_OnOffD
00:0000000C   CHNPRM_OffOnD
00:0000000D   CHNPRM_OrnPtr
00:0000000F   CHNPRM_SamPtr
00:00000011   CHNPRM_NNtSkp
00:00000012   CHNPRM_Note
00:00000013   CHNPRM_SlToNt
00:00000014   CHNPRM_Env_En
00:00000015   CHNPRM_Flags
00:00000016   CHNPRM_TnSlDl
00:00000017   CHNPRM_TSlStp
00:00000019   CHNPRM_TnDelt
00:0000001B   CHNPRM_NtSkCn
00:0000001C   CHNPRM_Volume
00:0000001D X CHNPRM_Size
00:00000000   AR_TonA
00:00000002   AR_TonB
00:00000004   AR_TonC
00:00000006   AR_Noise
00:00000007   AR_Mixer
00:00000008   AR_AmplA
00:00000009   AR_AmplB
00:0000000A   AR_AmplC
00:0000000B   AR_Env
00:0000000D   AR_EnvTp
00:0000465E   CHECKLP
00:0000466F X PT3_MUTE
00:0000467B X PT3_INIT
00:000046BA   PT3_INIT.TP_0
00:000046C6   PT3_INIT.TP_1
00:000046CD   PT3_INIT.TP_2
00:0000473B   PT3_INIT.L1
00:00004748   PT3_INIT.L2
00:0000474C X PT3_INIT.L3
00:00004773   PT3_INIT.CORR_1
00:00004781   PT3_INIT.CORR_2
00:00004788   PT3_INIT.TC_EXIT
00:00004793   PT3_INIT.INITV1
00:0000479B   PT3_INIT.INITV2
00:000047AF   PT3_INIT.INITV3
00:000047B3   PD_OrSm
00:000047BD   PD_SAM
00:000047BE   PD_SAM_
00:000047D4   PD_VOL
00:000047DD   PD_EOff
00:000047E5   PD_SorE
00:000047EF   PD_ENV
00:000047F4   PD_ORN
00:000047F9   PD_ESAM
00:00004806   PTDECOD
00:00004815   PD_LOOP
00:00004818   PD_LP2
00:00004845   PD_NOIS
00:0000484A   PD_REL
00:00004850   PD_NOTE
00:00004858   PD_RES
00:0000486A   PD_FIN
00:00004871   C_PORTM
00:000048BC   C_PORTM.NOSIG
00:000048C6   SET_STP
00:000048D2   C_GLISS
00:000048E5   C_SMPOS
00:000048EB   C_ORPOS
00:000048F1   C_VIBRT
00:00004909   C_ENGLS
00:0000491B   C_DELAY
00:00004921   SETENV
00:0000493C   C_NOP
00:0000493D   SETORN
00:00004956   SPCCOMS
00:00004976   CHREGS
00:00004999   CHREGS.CH_ORPS
00:000049A4   CHREGS.CH_NTP
00:000049AA   CHREGS.CH_NOK
00:000049C5   CHREGS.CH_SMPS
00:000049DB   CHREGS.CH_NOAC
00:00004A22   CHREGS.CH_STPP
00:00004A37   CHREGS.CH_AMP
00:00004A49   CHREGS.CH_AMIN
00:00004A4E   CHREGS.CH_SVAM
00:00004A51   CHREGS.CH_NOAM
00:00004A5A   CHREGS.CH_APOS
00:00004A60   CHREGS.CH_VOL
00:00004A6B X CHREGS.CH_ENV
00:00004A72   CHREGS.CH_NOEN
00:00004A8C   CHREGS.NO_ENAC
00:00004A93   CHREGS.NO_ENSL
00:00004AA1   CHREGS.CH_MIX
00:00004AA5   CHREGS.CH_EXIT
00:00004AC4   CHREGS.CH_ONDL
00:00004AC8 X PT3_PLAY
00:00004AFC   PT3_PLAY.PLNLP
00:00004B23   PT3_PLAY.PL1A
00:00004B2E   PT3_PLAY.PL1B
00:00004B43   PT3_PLAY.PL1C
00:00004B58   PT3_PLAY.PL1D
00:00004B5E   PT3_PLAY.PL2
00:00004BC0 X PT3_ROUT
00:00004BC1   ROUT_A0
00:00004BCD   ROUT_A0.LOUT
00:00004BE1   NT_DATA
00:00004BF1   T_
00:00004BF1   TCOLD_0
00:00004BFD   TCNEW_1
00:00004BFD   TCOLD_1
00:00004BFF   TCOLD_2
00:00004C11   TCNEW_3
00:00004C12   TCOLD_3
00:00004C1B   TCNEW_0
00:00004C26   TCNEW_2
00:00004C31   EMPTYSAMORN
00:00004C35   T_PACK
00:0000F200   PT3_SETUP
00:0000F200   PT3_MODADDR
00:0000F202   PT3_CrPsPtr
00:0000F204   PT3_SAMPTRS
00:0000F206   PT3_OrnPtrs
00:0000F208   PT3_PDSP
00:0000F20A   PT3_CSP
00:0000F20C   PT3_PSP
00:0000F20E   PT3_PrNote
00:0000F20F   PT3_PrSlide
00:0000F211   PT3_AdInPtA
00:0000F213   PT3_AdInPtB
00:0000F215   PT3_AdInPtC
00:0000F217   PT3_LPosPtr
00:0000F219   PT3_PatsPtr
00:0000F21B   PT3_Delay
00:0000F21C   PT3_AddToEn
00:0000F21D   PT3_Env_Del
00:0000F21E   PT3_ESldAdd
00:0000F220   PT3_NTL3
00:0000F222   VARS
00:0000F222   ChanA
00:0000F23F   ChanB
00:0000F25C   ChanC
00:0000F279   DelyCnt
00:0000F27A   CurESld
00:0000F27C   CurEDel
00:0000F27D   Ns_Base_AddToNs
00:0000F27D   Ns_Base
00:0000F27E   AddToNs
00:0000F27F   NT_
00:0000F33F   AYREGS
00:0000F33F   VT_
00:0000F34D   EnvBase
00:0000F34F   VAR0END
00:0000F34F   T1_
00:0000F34F   T_NEW_1
00:0000F34F   T_OLD_1
00:0000F367   T_OLD_2
00:0000F37F   T_NEW_3
00:0000F37F   T_OLD_3
00:0000F381   T_OLD_0
00:0000F381   T_NEW_0
00:0000F399   T_NEW_2
00:00004C6A   START
00:00004C9A   INIT_CHARS_VARS
00:00004D23   STAGE1
00:00004D5A   MAIN_LOOP
00:00004D65 X MAIN_LOOP.check_tombs
00:00004DC9   MAIN_LOOP.check_john_tomb
00:00004DE4   MAIN_LOOP.check_gus_tomb
00:00004E05   MAIN_LOOP.check_skull_hint
00:00004E29   MAIN_LOOP.check_mike_dialog_box
00:00004E39   MAIN_LOOP.check_gus_dialog
00:00004E49   MAIN_LOOP.check_john_dialog
00:00004E59   MAIN_LOOP.check_skull_dialog
00:00004E67   MAIN_LOOP.animate_ghost
00:00004E89   MAIN_LOOP.CHANGE_DIR_RIGHT
00:00004E96   MAIN_LOOP.CHANGE_DIR_LEFT
00:00004E9F   MAIN_LOOP.check_pattern
00:00004EBA   MAIN_LOOP.change_pattern_L
00:00004EC5   MAIN_LOOP.check_pattern_RIGHT
00:00004ED8   MAIN_LOOP.change_pattern_R
00:00004EE0   MAIN_LOOP.continue
00:00004EE3 X MAIN_LOOP.CHECK_GHOST
00:00004EFF X MAIN_LOOP.KILL_GHOST
00:00004F0C   MAIN_LOOP.check_KB
00:00004F2D X no_arrows
00:00004F35   SHOOT_MAIN_CHAR
00:00004F6F   SHOOT_MAIN_CHAR.SHOOT_RIGHT
00:00004F7E   SHOOT_MAIN_CHAR.SHOOT_UP
00:00004F91   SHOOT_MAIN_CHAR.SHOOT_DOWN
00:00004FA1   SHOOT_MAIN_CHAR.CONTINUE
00:00004FA5   STAGE2
00:00004FFF   MAIN_LOOP2
00:00005023   MAIN_LOOP2.GHOST_DEAD
00:0000502E   MAIN_LOOP2.no_screen_change
00:00005060   MAIN_LOOP2.CHANGE_DIR_RIGHT
00:0000506D   MAIN_LOOP2.CHANGE_DIR_LEFT
00:00005076   MAIN_LOOP2.check_pattern
00:00005095   MAIN_LOOP2.change_pattern_L
00:000050A0   MAIN_LOOP2.check_pattern_RIGHT
00:000050B3   MAIN_LOOP2.change_pattern_R
00:000050BB   MAIN_LOOP2.continue
00:000050E4   SONG
00:00005FCB   SPRITE_P1_UP
00:0000608B   SPRITE_P1_DOWN
00:0000614B   SPRITE_P1_LEFT
00:0000620B   SPRITE_P1_RIGHT
00:000062CB   SPRITE_PATTERN
00:000065AB   SPRITE_COLOR_TABLE
00:0000662B   SPRITE_COLOR_P1_UP
00:0000668B   SPRITE_COLOR_P1_DOWN
00:000066EB   SPRITE_COLOR_P1_RIGHT
00:0000674B   mapa1
00:00006A2B   mapa2
00:00006D0B X mapa0
00:0000706B   SPRITE_COLOR_P1_LEFT
00:000070CB   BLANK_DATA
00:0000711F   PaletteData
00:0000713F   TILES1
06:00008000   FONT
07:00008000   CEMENTER1
09:00008000   GRAPHIC
0D:00008000   CEMENTER2
0F:0000C000   COPY01
0F:0000C00F   SHOWING_SKULL_STG1_DIALOG
0F:0000C010   SHOWING_MIKE_DIALOG
0F:0000C011   SHOWING_JOHN_DIALOG
0F:0000C012   SHOWING_GUS_DIALOG
0F:00000008 X FONT_HEIGHT
0F:00000008 X FONT_WIDTH
0F:0000C013   CHR_ACR
0F:0000C015 X PTR_STR_DX
0F:0000C016 X PTR_STR_DY
0F:0000C017 X LAST_KEY_PRESSED
0F:0000C018   OLD_KEY_PRESSED
0F:0000C019   JIFFY_TEMP
0F:0000C01A   CHAR_SPEED_X
0F:0000C01B   CHAR_SPEED_Y
0F:0000C01C   CHAR_SPEED_X_GHOST
0F:0000C01D   CHAR_SPEED_X_GHOST_STG2
0F:0000C01E   CHAR_GHOST_DEAD
0F:0000C01F   CHAR_GHOST_DEAD_STG2
0F:0000C020   CHAR_MIN_STEP_STG2
0F:0000C021   CHAR_DIR_GHOST1
0F:0000C022   CHAR_DIR_GHOST_STG2
0F:0000C023   CHAR_DIR_MAIN
0F:0000C024   CHAR_NEW_DIR_MAIN
0F:0000C025   CHAR_MAIN_SHOOT
0F:0000C026   CHAR_MIN_STEP
0F:0000C027   CHAR_DISTANCE_SHOOT
0F:0000C028   CHAR_SPEED_SHOOT
0F:0000C029   SPRITE_ATTRS
0F:0000C0A9 X SLOTBIOS
0F:0000C0AA X SLOTGAME
0F:0000C0AB X SLOTRAM
0F:0000C0AC   SPRITE_PTR_REPLACE
0F:0000C0AE   SPRITE_COLOR_REPLACE
0F:0000C0B0   SPRITE_COLOR_REPLACE2
0F:0000C0B2   MAPA
0F:0000C0B4   BITMAP
0F:0000C0B6   MAP_RAM


 Output: bth.out
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: *  Used: 00000000

    No output

 Output: BTH.rom
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00004000  Used: 0000393E

   Address   Length Align   Label
   00004000   14648         mike_tomb_strings
   00007938       6         
   0000793E    1730       <empty>

 Page: 01
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 02
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 03
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 04
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 05
  Org: 00008000  Size: 00004000  Used: 00000000

   00008000   16384       <empty>

 Page: 06
  Org: 00008000  Size: 00004000  Used: 000007F7

   Address   Length Align   Label
   00008000    2039         FONT
   000087F7   14345       <empty>

 Page: 07
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER1

 Page: 08
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 09
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         GRAPHIC

 Page: 0A
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0B
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         

 Page: 0C
  Org: 00008000  Size: 00004000  Used: 00001400

   Address   Length Align   Label
   00008000    5120         
   00009400   11264       <empty>

 Page: 0D
  Org: 00008000  Size: 00004000  Used: 00004000

   Address   Length Align   Label
   00008000   16384         CEMENTER2

 Page: 0E
  Org: 00008000  Size: 00004000  Used: 00002A00

   Address   Length Align   Label
   00008000   10752         
   0000AA00    5632       <empty>

 Page: 0F
  Org: 0000C000  Size: 00004000  Used: 00000396

   Address   Length Align   Label
   0000C000     918         COPY01
   0000C396   15466       <empty>
