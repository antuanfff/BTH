Sjasm Z80 Assembler v0.42c - www.xl2s.tk             [2024.05.25 - 17:08:44]

.\ascii16k.asm
Errors: 0

       1   00:0000                      ; Example to create an MegaRom of 128kB that use an ASCII 16K Mapper
       2   00:0000                      ; for Sjasm assembler
       3   00:0000                      
       4   00:0000                      	output ASC16tst.ROM
       5   00:0000                      
       6   00:0000  (00:000A)           LF:	equ	0Ah
       7   00:0000  (00:000D)           CR:	equ	0Dh
       8   00:0000                      
       9   00:0000  (00:0024)           ENASLT:	equ	0024h
      10   00:0000  (00:006F)           INIT32:	equ	006Fh
      11   00:0000  (00:00A2)           CHPUT:	equ	00A2h	; Address of character output routine of main Rom BIOS
      12   00:0000  (00:0138)           RSLREG:	equ	0138h
      13   00:0000                      
      14   00:0000  (00:4000)           PageSize:	equ	04000h	; 16kB
      15   00:0000  (00:7000)           Seg_P8000_SW:	equ	07000h	; Segment switch for page 8000h-BFFFh (ASCII 16k Mapper)
      16   00:0000                      
      17   00:0000  (00:F3AF)           LINL32:	equ	0F3AFh
      18   00:0000  (00:FCC1)           EXPTBL:	equ	0FCC1h		; Extended slot flags table (4 bytes)
      19   00:0000                      
      20   00:0000                      
      21   00:0000                      	defpage 0,4000H,PageSize
      22   00:0000  (00)                	page 0
      23   00:4000                      
      24   00:4000  41 42               	db	41h,42h
      25   00:4002                      	dw	INIT,0,0,0,0,0,0
      25   00:4002  10 40 00 00 00 00 00 00 00 00 00 00 00 00 
      26   00:4010                      
      27   00:4010                      INIT:
      28   00:4010  3E 20               	ld	a,32
      29   00:4012  32 AF F3            	ld	(LINL32),a	; 32 columns
      30   00:4015  CD 6F 00            	call	INIT32		; SCREEN 1
      31   00:4018                      
      32   00:4018                      ; Typical routine to select the ROM on page 8000h-BFFFh from page 4000h-7BFFFh
      33   00:4018                      
      34   00:4018  CD 38 01            	call	RSLREG
      35   00:401B  0F                  	rrca
      36   00:401C  0F                  	rrca
      37   00:401D  E6 03               	and	3	;Keep bits corresponding to the page 4000h-7FFFh
      38   00:401F  4F                  	ld	c,a
      39   00:4020  06 00               	ld	b,0
      40   00:4022  21 C1 FC            	ld	hl,EXPTBL
      41   00:4025  09                  	add	hl,bc
      42   00:4026  7E                  	ld	a,(hl)
      43   00:4027  E6 80               	and	80h
      44   00:4029  B1                  	or	c
      45   00:402A  4F                  	ld	c,a
      46   00:402B  23                  	inc	hl
      47   00:402C  23                  	inc	hl
      48   00:402D  23                  	inc	hl
      49   00:402E  23                  	inc	hl
      50   00:402F  7E                  	ld	a,(hl)
      51   00:4030  E6 0C               	and	0Ch
      52   00:4032  B1                  	or	c
      53   00:4033  26 80               	ld	h,080h
      54   00:4035  CD 24 00            	call	ENASLT		; Select the ROM on page 8000h-BFFFh
      55   00:4038                      
      56   00:4038  3E 03               	ld	a,3
      57   00:403A                      LOOP:
      58   00:403A  32 00 70            	ld	(Seg_P8000_SW),a	; Select the segment on page 8000h-BFFFh
      59   00:403D                      
      60   00:403D  F5                  	push	af
      61   00:403E  21 00 80            	ld	hl,Seg1_TXT	; Text pointer into HL
      62   00:4041  CD 4C 40            	call	Print		; Call the routine Print below
      63   00:4044  F1                  	pop	af
      64   00:4045                      
      65   00:4045  3C                  	inc	a	; Increment segment number
      66   00:4046  FE 08               	cp	8
      67   00:4048  20 F0               	jr	nz, LOOP	; Jump to LOOP if A<8
      68   00:404A                       
      69   00:404A                      Finished:
      70   00:404A  18 FE               	jr	Finished	; Jump to itself endlessly.
      71   00:404C                      
      72   00:404C                      Print:
      73   00:404C  7E                  	ld	a,(hl)		; Load the byte from memory at address indicated by HL to A.
      74   00:404D  A7                  	and	a		; Same as CP 0 but faster.
      75   00:404E  C8                  	ret	z		; Back behind the call print if A = 0
      76   00:404F  CD A2 00            	call	CHPUT		; Call the routine to display a character.
      77   00:4052  23                  	inc	hl		; Increment the HL value.
      78   00:4053  18 F7               	jr	Print		; Jump to the address in the label Print.
      79   00:4055                       
      80   00:4055                      	defpage 1,8000H,PageSize
      81   00:4055  (01)                	page 1
      82   01:8000                      
      83   01:8000                      Seg1_TXT:			; Text pointer label
      84   01:8000                      	db "Text from segment 1",LF,CR,0	; Zero indicates the end of text.
      84   01:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
      84   01:8010  74 20 31 0A 0D 00 
      85   01:8016                      
      86   01:8016                      	defpage 2,8000H,PageSize
      87   01:8016  (02)                	page 2
      88   02:8000                      
      89   02:8000                      	db "Text from segment 2",LF,CR,0
      89   02:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
      89   02:8010  74 20 32 0A 0D 00 
      90   02:8016                      
      91   02:8016                      	defpage 3,8000H,PageSize
      92   02:8016  (03)                	page 3
      93   03:8000                      
      94   03:8000                      	db "Text from segment 3",LF,CR,0
      94   03:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
      94   03:8010  74 20 33 0A 0D 00 
      95   03:8016                      
      96   03:8016                      	defpage 4,8000H,PageSize
      97   03:8016  (04)                	page 4
      98   04:8000                      
      99   04:8000                      	db "Text from segment 4",LF,CR,0
      99   04:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
      99   04:8010  74 20 34 0A 0D 00 
     100   04:8016                      
     101   04:8016                      	defpage 5,8000H,PageSize
     102   04:8016  (05)                	page 5
     103   05:8000                      
     104   05:8000                      	db "Text from segment 5",LF,CR,0
     104   05:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
     104   05:8010  74 20 35 0A 0D 00 
     105   05:8016                      
     106   05:8016                      	defpage 6,8000H,PageSize
     107   05:8016  (06)                	page 6
     108   06:8000                      
     109   06:8000                      	db "Text from segment 6",LF,CR,0
     109   06:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
     109   06:8010  74 20 36 0A 0D 00 
     110   06:8016                      
     111   06:8016                      	defpage 7,8000H,PageSize
     112   06:8016  (07)                	page 7
     113   07:8000                      
     114   07:8000                      	db "Text from segment 7",LF,CR,0
     114   07:8000  54 65 78 74 20 66 72 6F 6D 20 73 65 67 6D 65 6E 
     114   07:8010  74 20 37 0A 0D 00 

    LABELS
-------------------------------------------------
00:0000000A   LF
00:0000000D   CR
00:00000024   ENASLT
00:0000006F   INIT32
00:000000A2   CHPUT
00:00000138   RSLREG
00:00004000 X PageSize
00:00007000   Seg_P8000_SW
00:0000F3AF   LINL32
00:0000FCC1   EXPTBL
00:00004010   INIT
00:0000403A   LOOP
00:0000404A   Finished
00:0000404C   Print
01:00008000   Seg1_TXT


 Output: .\ascii16k.out
-------------------------------------------------

 Page: 00
  Org: 00000000  Size: *  Used: 00000000

    No output

 Output: ASC16tst.ROM
-------------------------------------------------

 Page: 00
  Org: 00004000  Size: 00004000  Used: 00000055

   Address   Length Align   Label
   00004000      85         INIT
   00004055   16299       <empty>

 Page: 01
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         Seg1_TXT
   00008016   16362       <empty>

 Page: 02
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>

 Page: 03
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>

 Page: 04
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>

 Page: 05
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>

 Page: 06
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>

 Page: 07
  Org: 00008000  Size: 00004000  Used: 00000016

   Address   Length Align   Label
   00008000      22         
   00008016   16362       <empty>
